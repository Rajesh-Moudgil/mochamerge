{
    "stats": {
        "suites": 102,
        "tests": 418,
        "passes": 355,
        "pending": 0,
        "failures": 63,
        "start": "2020-12-01T20:03:11.576Z",
        "end": "2020-12-17T00:45:21.231Z",
        "duration": 8499217,
        "testsRegistered": 487,
        "passPercent": 72.9,
        "pendingPercent": 0,
        "other": 0,
        "hasOther": false,
        "skipped": 69,
        "hasSkipped": true
    },
    "results": [
        {
            "uuid": "438d436f-d19e-460b-935b-355e0488dbb3",
            "title": "",
            "fullFile": "",
            "file": "",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [],
            "suites": [
                {
                    "uuid": "bbdba983-73f8-4df4-a834-e3dc8eb933e4",
                    "title": " NetIncome_ImmiAlert_1----Build a newcomer return with a date of entry.  Input F12600.  The software must display a similar message to the following: “Since you have indicated that you are a newcomer to Canada, please ensure that ONLY the income earned while living in Canada, after your date of entry, is claimed at this line.     //(Single , Date of entry (2020/06/30). Enter rental income == $6,000 & exp.==$ 550)",
                    "fullFile": "E:\\Rita\\Taxtron\\WebTest\\my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_ImmiAlert_1.js",
                    "file": "\\my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_ImmiAlert_1.js",
                    "beforeHooks": [
                        {
                            "title": "\"before all\" hook",
                            "fullTitle": " NetIncome_ImmiAlert_1----Build a newcomer return with a date of entry.  Input F12600.  The software must display a similar message to the following: “Since you have indicated that you are a newcomer to Canada, please ensure that ONLY the income earned while living in Canada, after your date of entry, is claimed at this line.     //(Single , Date of entry (2020/06/30). Enter rental income == $6,000 & exp.==$ 550) \"before all\" hook",
                            "timedOut": false,
                            "duration": 66610,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "driver = new Builder()\n\t.withCapabilities(Capabilities.chrome().setAcceptInsecureCerts(true))\n\t.build();\ndriver.manage().window().setRect({ width: 1366, height: 768 });\nawait login(driver, 'ritakumar@outlook.com', 'rishu12rashi');\nawait selectNewReturn(driver,province);\nawait switchToastOff(driver);\nawait setInputById(driver, 'Firstnames0', 'BOB ');\nawait setInputById(driver, 'Surname0', 'KUM');\nawait selectDateById(driver, 'DOB0', '1961/10/10');\nawait setInputById(driver, 'SIN0', '222222226');    \n        await selectComboById(driver, 'MaritalStatus0', 'Single');\n\t    await selectToggleById(driver, 'didyoumove0', '0');\nawait selectToggleById(driver, 'HomeAddressSame0', '1');\nawait selectToggleById(driver, 'ResidencyCode0', '1');\nawait selectAgeDateById(driver, 'ImmigrationDate0tp',Fed.TaxYear,'0', '/06/30');\nawait setInputById(driver, 'IMMI_CDNIncomeIncluded0', '0');\nawait setInputById(driver, 'IMMI_TotalIncome0', '0');\nawait nextClick(driver);\nawait setInputById(driver, 'fullAdd0', '880 21 St NE, Salmon Arm, BC V1E 2K9, Canada');\nawait selectToggleById(driver, 'addChange0', '0');\nawait selectToggleById(driver, 'bDisabled0', '0');\nawait selectToggleById(driver, 'quesFP0', '0');\nawait selectToggleById(driver, 'qCitizen0', '0');\nawait nextClick(driver);\nawait selectTab(driver, 'Income');\n        await selectTab(driver, 'IncomeProfile');\nawait selectToggleById(driver, 'SelfEmployed0', '1');\n        await nextClick(driver);\n        await selectToggleById(driver, 'rental0tp', '1');\nawait nextClick(driver);\nawait selectSFDDateById(driver, 'FromDate0tp',  Fed.TaxYear,'0','/03/01');\nawait selectSFDDateById(driver, 'ToDate0tp', Fed.TaxYear,'0','/12/31');\nawait setInputById(driver, 'T776fullAdd0', '110 Tacom Cir, Nepean, ON K2G 4P8, Canada');\nawait selectToggleById(driver, 'Own1000', '0');\nawait setInputById(driver, 'Rent10', '6000');\nawait selectToggleById(driver, 'PartRentingQu0', '0');\nawait setInputById(driver, 'ExpensesA40', '550');\nawait nextClick(driver);\nawait selectTab(driver, 'Review');\n        await selectTab(driver, 'Summary');\n\t    await nextClick(driver);\nawait selectToggleById(driver, 'Language0', '1');\nawait nextClick(driver);\nsavedForm = await getServerFile(driver);",
                            "err": {},
                            "uuid": "2260a720-1d72-4fad-bc24-0f2a240b60a7",
                            "parentUUID": "bbdba983-73f8-4df4-a834-e3dc8eb933e4",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "afterHooks": [
                        {
                            "title": "\"after all\" hook",
                            "fullTitle": " NetIncome_ImmiAlert_1----Build a newcomer return with a date of entry.  Input F12600.  The software must display a similar message to the following: “Since you have indicated that you are a newcomer to Canada, please ensure that ONLY the income earned while living in Canada, after your date of entry, is claimed at this line.     //(Single , Date of entry (2020/06/30). Enter rental income == $6,000 & exp.==$ 550) \"after all\" hook",
                            "timedOut": false,
                            "duration": 5496,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "await logoutById(driver);\nawait driver.quit();",
                            "err": {},
                            "uuid": "cd6c34a8-d2bf-43fe-9fa2-1c55f9395a29",
                            "parentUUID": "bbdba983-73f8-4df4-a834-e3dc8eb933e4",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "tests": [
                        {
                            "title": "IncomeFeild should be 12600    allow.value ==5450",
                            "fullTitle": " NetIncome_ImmiAlert_1----Build a newcomer return with a date of entry.  Input F12600.  The software must display a similar message to the following: “Since you have indicated that you are a newcomer to Canada, please ensure that ONLY the income earned while living in Canada, after your date of entry, is claimed at this line.     //(Single , Date of entry (2020/06/30). Enter rental income == $6,000 & exp.==$ 550) IncomeFeild should be 12600    allow.value ==5450",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let IncomeFeild = getFieldId('12600');\n\t\tlet Income = savedForm[IncomeFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+Income;\nassert.strictEqual(Income, '5450', 'IncomeFeild should be 12600==5450.');",
                            "err": {},
                            "uuid": "3aae62a7-64a0-4b79-967f-494b9e40eef6",
                            "parentUUID": "bbdba983-73f8-4df4-a834-e3dc8eb933e4",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": "massage should be display, Since you have indicated that you are a newcomer to Canada, please ensure that ONLY the income earned while living in Canada, after your date of entry is reported ",
                            "fullTitle": " NetIncome_ImmiAlert_1----Build a newcomer return with a date of entry.  Input F12600.  The software must display a similar message to the following: “Since you have indicated that you are a newcomer to Canada, please ensure that ONLY the income earned while living in Canada, after your date of entry, is claimed at this line.     //(Single , Date of entry (2020/06/30). Enter rental income == $6,000 & exp.==$ 550) massage should be display, Since you have indicated that you are a newcomer to Canada, please ensure that ONLY the income earned while living in Canada, after your date of entry is reported ",
                            "timedOut": false,
                            "duration": 50,
                            "state": "passed",
                            "speed": "medium",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let gettext=await driver.findElement(By.css('#immigrantIncome0')).isDisplayed();\n\t\tassert.strictEqual(gettext,true,'Since you have indicated that you are a newcomer to Canada, please ensure that ONLY the income earned while living in Canada, after your date of entry is reported.');",
                            "err": {},
                            "uuid": "3d6c14e3-f2e8-4cb5-a1f7-938a3ee630b4",
                            "parentUUID": "bbdba983-73f8-4df4-a834-e3dc8eb933e4",
                            "isHook": false,
                            "skipped": false
                        }
                    ],
                    "suites": [],
                    "passes": [
                        "3aae62a7-64a0-4b79-967f-494b9e40eef6",
                        "3d6c14e3-f2e8-4cb5-a1f7-938a3ee630b4"
                    ],
                    "failures": [],
                    "pending": [],
                    "skipped": [],
                    "duration": 50,
                    "root": false,
                    "rootEmpty": false,
                    "_timeout": 150000
                },
                {
                    "uuid": "60c827e2-66dc-487a-b8d7-561cd549fb2c",
                    "title": "--NetIncome_ImmiAlert_2----Build a newcomer return with a date of entry.  Input F12600.  The software must display a similar message to the following: “Since you have indicated that you are a newcomer to Canada, please ensure that ONLY the income earned while living in Canada, after your date of entry, is claimed at this line.        //(Link Returns: ONT. , Both are Newcomer, date of entry (2020/06/30). Rental Income (2020/03/01 to 2020/12/31)  Enter rental income On T776 form == $6,000 & exp.==$ 550.)",
                    "fullFile": "E:\\Rita\\Taxtron\\WebTest\\my_work\\test_for_report_2020\\NETINC_2020\\tcNetincome_ImmiAlert_2.js",
                    "file": "\\my_work\\test_for_report_2020\\NETINC_2020\\tcNetincome_ImmiAlert_2.js",
                    "beforeHooks": [
                        {
                            "title": "\"before all\" hook",
                            "fullTitle": "--NetIncome_ImmiAlert_2----Build a newcomer return with a date of entry.  Input F12600.  The software must display a similar message to the following: “Since you have indicated that you are a newcomer to Canada, please ensure that ONLY the income earned while living in Canada, after your date of entry, is claimed at this line.        //(Link Returns: ONT. , Both are Newcomer, date of entry (2020/06/30). Rental Income (2020/03/01 to 2020/12/31)  Enter rental income On T776 form == $6,000 & exp.==$ 550.) \"before all\" hook",
                            "timedOut": false,
                            "duration": 82104,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "driver = new Builder()\n\t.withCapabilities(Capabilities.chrome().setAcceptInsecureCerts(true))\n\t.build();\ndriver.manage().window().setRect({ width: 1366, height: 768 });\nawait login(driver, 'ritakumar@outlook.com', 'rishu12rashi');\n        await selectNewReturn(driver,province);\nawait switchToastOff(driver);\n        await setInputById(driver, 'Firstnames0', 'BOB ');\nawait setInputById(driver, 'Surname0', 'KUM');\nawait selectDateById(driver, 'DOB0', '1941/10/10');\nawait setInputById(driver, 'SIN0', '222222226');       \n        await selectComboById(driver, 'MaritalStatus0', 'Married');\nawait selectToggleById(driver, 'domchanged0', '0');\n        await selectToggleById(driver, 'didyoumove0', '0');\n        await selectToggleById(driver, 'IsLinkedReturn0', '1');\n        await selectToggleById(driver, 'HomeAddressSame0', '1');\nawait selectToggleById(driver, 'ResidencyCode0', '1');\nawait selectAgeDateById(driver, 'ImmigrationDate0tp',Fed.TaxYear,'0', '/06/30');\nawait setInputById(driver, 'IMMI_CDNIncomeIncluded0', '0');\n        await setInputById(driver, 'IMMI_TotalIncome0', '0');\n        await setInputById(driver, 'Immi_FieldFirst0', '0');\n        await setInputById(driver, 'Immi_FieldSecond0', '3000');\n        await nextClick(driver);\nawait setInputById(driver, 'fullAdd0', '880 21 St NE, Salmon Arm, ON V1E 2K9, Canada');\n        await selectToggleById(driver, 'addChange0', '0');\nawait selectToggleById(driver, 'bDisabled0', '0');\nawait selectToggleById(driver, 'quesFP0', '0');\nawait selectToggleById(driver, 'quesPrinResi0', '0');\n//await selectToggleById(driver, 'bDeceased0', '0');\n//await selectToggleById(driver, 'qIndian0', '0');\nawait selectToggleById(driver, 'qCitizen0', '0');\n        await nextClick(driver);\n        await nextClick(driver);\n        await setInputById(driver, 'Firstnames0sp', 'SPOUSE');\n        await setInputById(driver, 'Surname0sp', 'LAST');\n        await selectDateById(driver, 'DOB0sp', '1945/06/30');\n        await setInputById(driver, 'SIN0sp', '100000017');\n        await selectComboById(driver, 'Province0sp', 'Ontario');\n        await selectToggleById(driver, 'ResidencyCode0sp', '1');\n        await  selectAgeDateById(driver, 'ImmigrationDate0sp', Fed.TaxYear,'0', '/06/30');\n        await setInputById(driver, 'IMMI_CDNIncomeIncluded0sp', '0');\n        await setInputById(driver, 'IMMI_TotalIncome0sp', '0');\n        await setInputById(driver, 'Immi_FieldFirst0sp', '0');\n        await setInputById(driver, 'Immi_FieldSecond0sp', '3500');\n        await nextClick(driver);\n        await selectToggleById(driver, 'FirsttimeFiler0sp', '1');\n        await selectToggleById(driver, 'quesFP0sp', '0');\n        await nextClick(driver);\n        await selectTab(driver, 'Income');\n        await selectTab(driver, 'IncomeProfile');\nawait selectToggleById(driver, 'SelfEmployed0', '1');\n        await nextClick(driver);\n        await nextClick(driver);\n        await selectToggleById(driver, 'rental0tp', '1');\nawait nextClick(driver);\nawait selectSFDDateById(driver, 'FromDate0tp',  Fed.TaxYear,'0','/03/01');\nawait selectSFDDateById(driver, 'ToDate0tp', Fed.TaxYear,'0','/12/31');\nawait setInputById(driver, 'T776fullAdd0', '110 Tacom Cir, Nepean, ON K2G 4P8, Canada');\nawait selectToggleById(driver, 'Own1000', '0');\nawait setInputById(driver, 'Rent10', '6000');\nawait selectToggleById(driver, 'PartRentingQu0', '0');\nawait setInputById(driver, 'ExpensesA40', '550');\n        await nextClick(driver);\n        await selectTab(driver, 'Review');\n        await selectTab(driver, 'Summary');\n\t    await nextClick(driver);\n        await selectToggleById(driver, 'Language0', '1');\n        await selectToggleById(driver, 'OASNR0tp', '0');\n        await nextClick(driver);\n        savedForm = await getServerFile(driver);",
                            "err": {},
                            "uuid": "09161fbf-2de1-4c06-a792-530aee2ffd84",
                            "parentUUID": "60c827e2-66dc-487a-b8d7-561cd549fb2c",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "afterHooks": [
                        {
                            "title": "\"after all\" hook",
                            "fullTitle": "--NetIncome_ImmiAlert_2----Build a newcomer return with a date of entry.  Input F12600.  The software must display a similar message to the following: “Since you have indicated that you are a newcomer to Canada, please ensure that ONLY the income earned while living in Canada, after your date of entry, is claimed at this line.        //(Link Returns: ONT. , Both are Newcomer, date of entry (2020/06/30). Rental Income (2020/03/01 to 2020/12/31)  Enter rental income On T776 form == $6,000 & exp.==$ 550.) \"after all\" hook",
                            "timedOut": false,
                            "duration": 5788,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "await logoutById(driver);\nawait driver.quit();",
                            "err": {},
                            "uuid": "0a73078d-d318-4fd0-8d2f-5a1a40d6b61f",
                            "parentUUID": "60c827e2-66dc-487a-b8d7-561cd549fb2c",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "tests": [
                        {
                            "title": "IncomeFeild should be 12600    allow.value ==5450",
                            "fullTitle": "--NetIncome_ImmiAlert_2----Build a newcomer return with a date of entry.  Input F12600.  The software must display a similar message to the following: “Since you have indicated that you are a newcomer to Canada, please ensure that ONLY the income earned while living in Canada, after your date of entry, is claimed at this line.        //(Link Returns: ONT. , Both are Newcomer, date of entry (2020/06/30). Rental Income (2020/03/01 to 2020/12/31)  Enter rental income On T776 form == $6,000 & exp.==$ 550.) IncomeFeild should be 12600    allow.value ==5450",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let IncomeFeild = getFieldId('12600');\n\t\tlet Income = savedForm[IncomeFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+Income;\nassert.equal(Income, '5450', 'IncomeFeild should be 12600==5450.');",
                            "err": {},
                            "uuid": "1eec4081-e7a5-49a1-a02c-0b7762cb9cff",
                            "parentUUID": "60c827e2-66dc-487a-b8d7-561cd549fb2c",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": "massage should be display, Since you have indicated that you are a newcomer to Canada, please ensure that ONLY the income earned while living in Canada, after your date of entry is reported ",
                            "fullTitle": "--NetIncome_ImmiAlert_2----Build a newcomer return with a date of entry.  Input F12600.  The software must display a similar message to the following: “Since you have indicated that you are a newcomer to Canada, please ensure that ONLY the income earned while living in Canada, after your date of entry, is claimed at this line.        //(Link Returns: ONT. , Both are Newcomer, date of entry (2020/06/30). Rental Income (2020/03/01 to 2020/12/31)  Enter rental income On T776 form == $6,000 & exp.==$ 550.) massage should be display, Since you have indicated that you are a newcomer to Canada, please ensure that ONLY the income earned while living in Canada, after your date of entry is reported ",
                            "timedOut": false,
                            "duration": 28,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let gettext=await driver.findElement(By.css('#immigrantIncome0')).isDisplayed();\n\t\tassert.equal(gettext,true,'Since you have indicated that you are a newcomer to Canada, please ensure that ONLY the income earned while living in Canada, after your date of entry is reported.');",
                            "err": {},
                            "uuid": "9de166b0-7471-4f35-858c-7aa9500d00ea",
                            "parentUUID": "60c827e2-66dc-487a-b8d7-561cd549fb2c",
                            "isHook": false,
                            "skipped": false
                        }
                    ],
                    "suites": [],
                    "passes": [
                        "1eec4081-e7a5-49a1-a02c-0b7762cb9cff",
                        "9de166b0-7471-4f35-858c-7aa9500d00ea"
                    ],
                    "failures": [],
                    "pending": [],
                    "skipped": [],
                    "duration": 28,
                    "root": false,
                    "rootEmpty": false,
                    "_timeout": 200000
                },
                {
                    "uuid": "d3daf9e0-4e0f-4da1-ae5c-d5d73e1f77a1",
                    "title": "--NetIncome_ImmiAlert_3----Build a newcomer return with a date of entry.  Input F12600.  The software must display a similar message to the following: “Since you have indicated that you are a newcomer to Canada, please ensure that ONLY the income earned while living in Canada, after your date of entry, is claimed at this line.       //(Link Returns: MB. , Both are Newcomer, date of entry (2020/06/30). TP date of birth =65 years and older and SP is 65 years and older. T4AOAS (Box18) = $ 5,500 for each)",
                    "fullFile": "E:\\Rita\\Taxtron\\WebTest\\my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_ImmiAlert_3.js",
                    "file": "\\my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_ImmiAlert_3.js",
                    "beforeHooks": [
                        {
                            "title": "\"before all\" hook",
                            "fullTitle": "--NetIncome_ImmiAlert_3----Build a newcomer return with a date of entry.  Input F12600.  The software must display a similar message to the following: “Since you have indicated that you are a newcomer to Canada, please ensure that ONLY the income earned while living in Canada, after your date of entry, is claimed at this line.       //(Link Returns: MB. , Both are Newcomer, date of entry (2020/06/30). TP date of birth =65 years and older and SP is 65 years and older. T4AOAS (Box18) = $ 5,500 for each) \"before all\" hook",
                            "timedOut": false,
                            "duration": 79923,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "driver = new Builder()\n\t.withCapabilities(Capabilities.chrome().setAcceptInsecureCerts(true))\n\t.build();\ndriver.manage().window().setRect({ width: 1366, height: 768 });\nawait login(driver, 'ritakumar@outlook.com', 'rishu12rashi');\n        await selectNewReturn(driver,province);\nawait switchToastOff(driver);\n        await setInputById(driver, 'Firstnames0', 'BOB ');\nawait setInputById(driver, 'Surname0', 'KUM');\nawait selectDateById(driver, 'DOB0', '1941/10/10');\nawait setInputById(driver, 'SIN0', '222222226');       \n        await selectComboById(driver, 'MaritalStatus0', 'Married');\nawait selectToggleById(driver, 'domchanged0', '0');\n        await selectToggleById(driver, 'didyoumove0', '0');\n        await selectToggleById(driver, 'IsLinkedReturn0', '1');\n        await selectToggleById(driver, 'HomeAddressSame0', '1');\nawait selectToggleById(driver, 'ResidencyCode0', '1');\nawait selectAgeDateById(driver, 'ImmigrationDate0tp',Fed.TaxYear,'0', '/06/30');\nawait setInputById(driver, 'IMMI_CDNIncomeIncluded0', '0');\n        await setInputById(driver, 'IMMI_TotalIncome0', '0');\n        await setInputById(driver, 'Immi_FieldFirst0', '0');\n        await setInputById(driver, 'Immi_FieldSecond0', '5500');\n        await nextClick(driver);\nawait setInputById(driver, 'fullAdd0', '880 21 St NE, Salmon Arm, MB V1E 2K9, Canada');\n        await selectToggleById(driver, 'addChange0', '0');\nawait selectToggleById(driver, 'bDisabled0', '0');\nawait selectToggleById(driver, 'quesFP0', '0');\nawait selectToggleById(driver, 'quesPrinResi0', '0');\n//await selectToggleById(driver, 'bDeceased0', '0');\n//await selectToggleById(driver, 'qIndian0', '0');\nawait selectToggleById(driver, 'qCitizen0', '0');\n        await nextClick(driver);\n        await nextClick(driver);\n        await setInputById(driver, 'Firstnames0sp', 'SPOUSE');\n        await setInputById(driver, 'Surname0sp', 'LAST');\n        await selectDateById(driver, 'DOB0sp', '1945/06/30');\n        await setInputById(driver, 'SIN0sp', '100000017');\n        await selectComboById(driver, 'Province0sp', 'Ontario');\n        await selectToggleById(driver, 'ResidencyCode0sp', '1');\n        await selectAgeDateById(driver, 'ImmigrationDate0sp',Fed.TaxYear,'0', '/06/30');\n        await setInputById(driver, 'IMMI_CDNIncomeIncluded0sp', '0');\n        await setInputById(driver, 'IMMI_TotalIncome0sp', '0');\n        await setInputById(driver, 'Immi_FieldFirst0sp', '0');\n        await setInputById(driver, 'Immi_FieldSecond0sp', '5500');\n        await nextClick(driver);\n        await nextClick(driver);\n        await selectTab(driver, 'Income');\nawait selectToggleById(driver, 'GovernmentPension0tp', '1');\n        await clickDivById(driver, 'T4AOS0tp');\n        await nextClick(driver);\n        await selectToggleById(driver, 'GovernmentPension0sp', '1');\n        await clickDivById(driver, 'T4AOS0sp');\n        await nextClick(driver);\n        await setInputById(driver, 'T4ANetOAS0tp', '5500');\n        await nextClick(driver);\n        await setInputById(driver, 'T4ANetOAS0sp', '5500');\n        await nextClick(driver);\n        await nextClick(driver);\n        await selectTab(driver, 'Review');\n        await selectTab(driver, 'Summary');\n\t    await nextClick(driver);\n        await selectToggleById(driver, 'Language0', '1');\n        await nextClick(driver);\n        savedForm = await getServerFile(driver);",
                            "err": {},
                            "uuid": "7190e738-a8d1-4a6f-aaac-71ed840c060d",
                            "parentUUID": "d3daf9e0-4e0f-4da1-ae5c-d5d73e1f77a1",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "afterHooks": [
                        {
                            "title": "\"after all\" hook",
                            "fullTitle": "--NetIncome_ImmiAlert_3----Build a newcomer return with a date of entry.  Input F12600.  The software must display a similar message to the following: “Since you have indicated that you are a newcomer to Canada, please ensure that ONLY the income earned while living in Canada, after your date of entry, is claimed at this line.       //(Link Returns: MB. , Both are Newcomer, date of entry (2020/06/30). TP date of birth =65 years and older and SP is 65 years and older. T4AOAS (Box18) = $ 5,500 for each) \"after all\" hook",
                            "timedOut": false,
                            "duration": 1447,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "await logoutById(driver);\nawait driver.quit();",
                            "err": {},
                            "uuid": "54d2d2dc-a5e3-4ca4-b553-0708cf9c8fee",
                            "parentUUID": "d3daf9e0-4e0f-4da1-ae5c-d5d73e1f77a1",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "tests": [
                        {
                            "title": "IncomeFeild should be 11500    allow.value ==undefined",
                            "fullTitle": "--NetIncome_ImmiAlert_3----Build a newcomer return with a date of entry.  Input F12600.  The software must display a similar message to the following: “Since you have indicated that you are a newcomer to Canada, please ensure that ONLY the income earned while living in Canada, after your date of entry, is claimed at this line.       //(Link Returns: MB. , Both are Newcomer, date of entry (2020/06/30). TP date of birth =65 years and older and SP is 65 years and older. T4AOAS (Box18) = $ 5,500 for each) IncomeFeild should be 11500    allow.value ==undefined",
                            "timedOut": false,
                            "duration": 2,
                            "state": "failed",
                            "speed": null,
                            "pass": false,
                            "fail": true,
                            "pending": false,
                            "context": null,
                            "code": "let IncomeFeild = getFieldId('11500');\n\t\tlet Income = savedForm[IncomeFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+Income;\nassert.equal(Income, '5500', 'IncomeFeild should be built.');",
                            "err": {
                                "message": "AssertionError: IncomeFeild should be built.",
                                "estack": "AssertionError [ERR_ASSERTION]: IncomeFeild should be built.\n    at Context.<anonymous> (my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_ImmiAlert_3.js:86:16)\n    at processImmediate (internal/timers.js:456:21)",
                                "diff": null
                            },
                            "uuid": "0b55f224-46d3-4506-931c-0fddcaa8b356",
                            "parentUUID": "d3daf9e0-4e0f-4da1-ae5c-d5d73e1f77a1",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": "massage should be display, Since you have indicated that you are a newcomer to Canada, please ensure that ONLY the income earned while living in Canada, after your date of entry is reported ",
                            "fullTitle": "--NetIncome_ImmiAlert_3----Build a newcomer return with a date of entry.  Input F12600.  The software must display a similar message to the following: “Since you have indicated that you are a newcomer to Canada, please ensure that ONLY the income earned while living in Canada, after your date of entry, is claimed at this line.       //(Link Returns: MB. , Both are Newcomer, date of entry (2020/06/30). TP date of birth =65 years and older and SP is 65 years and older. T4AOAS (Box18) = $ 5,500 for each) massage should be display, Since you have indicated that you are a newcomer to Canada, please ensure that ONLY the income earned while living in Canada, after your date of entry is reported ",
                            "timedOut": false,
                            "duration": 59,
                            "state": "passed",
                            "speed": "medium",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let gettext=await driver.findElement(By.css('#immigrantIncome0')).isDisplayed();\n\t\tassert.equal(gettext,true,'Since you have indicated that you are a newcomer to Canada, please ensure that ONLY the income earned while living in Canada, after your date of entry is reported.');",
                            "err": {},
                            "uuid": "f85dd7a0-f613-477b-8088-34199b1a8523",
                            "parentUUID": "d3daf9e0-4e0f-4da1-ae5c-d5d73e1f77a1",
                            "isHook": false,
                            "skipped": false
                        }
                    ],
                    "suites": [],
                    "passes": [
                        "f85dd7a0-f613-477b-8088-34199b1a8523"
                    ],
                    "failures": [
                        "0b55f224-46d3-4506-931c-0fddcaa8b356"
                    ],
                    "pending": [],
                    "skipped": [],
                    "duration": 61,
                    "root": false,
                    "rootEmpty": false,
                    "_timeout": 200000
                },
                {
                    "uuid": "37583a45-0efd-452f-8fcf-a54aa7a13012",
                    "title": "--NetIncome_ImmiAlert_5b----Build a newcomer return with a date of entry.  Input F12600.  The software must display a similar message to the following: “Since you have indicated that you are a newcomer to Canada, please ensure that ONLY the income earned while living in Canada, after your date of entry, is claimed at this line.      //(Link Returns: AB. , Both are Newcomer, date of entry (2019/06/30). TP date of birth = Under 65 and SP Under 65. T4A (Box 16) = $ 5,500 for each)",
                    "fullFile": "E:\\Rita\\Taxtron\\WebTest\\my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_ImmiAlert_5b.js",
                    "file": "\\my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_ImmiAlert_5b.js",
                    "beforeHooks": [
                        {
                            "title": "\"before all\" hook",
                            "fullTitle": "--NetIncome_ImmiAlert_5b----Build a newcomer return with a date of entry.  Input F12600.  The software must display a similar message to the following: “Since you have indicated that you are a newcomer to Canada, please ensure that ONLY the income earned while living in Canada, after your date of entry, is claimed at this line.      //(Link Returns: AB. , Both are Newcomer, date of entry (2019/06/30). TP date of birth = Under 65 and SP Under 65. T4A (Box 16) = $ 5,500 for each) \"before all\" hook",
                            "timedOut": false,
                            "duration": 81052,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "driver = new Builder()\n\t.withCapabilities(Capabilities.chrome().setAcceptInsecureCerts(true))\n\t.build();\ndriver.manage().window().setRect({ width: 1366, height: 768 });\nawait login(driver, 'ritakumar@outlook.com', 'rishu12rashi');\n        await selectNewReturn(driver,province);\nawait switchToastOff(driver);\n        await setInputById(driver, 'Firstnames0', 'BOB ');\nawait setInputById(driver, 'Surname0', 'KUM');\nawait selectDateById(driver, 'DOB0', '1955/10/10');\nawait setInputById(driver, 'SIN0', '222222226');       \n        await selectComboById(driver, 'MaritalStatus0', 'Married');\nawait selectToggleById(driver, 'domchanged0', '0');\n        await selectToggleById(driver, 'didyoumove0', '0');\n        await selectToggleById(driver, 'IsLinkedReturn0', '1');\n        await selectToggleById(driver, 'HomeAddressSame0', '1');\nawait selectToggleById(driver, 'ResidencyCode0', '1');\nawait selectAgeDateById(driver, 'ImmigrationDate0tp',Fed.TaxYear,'0', '/06/30');\nawait setInputById(driver, 'IMMI_CDNIncomeIncluded0', '0');\n        await setInputById(driver, 'IMMI_TotalIncome0', '0');\n        await setInputById(driver, 'Immi_FieldFirst0', '0');\n        await setInputById(driver, 'Immi_FieldSecond0', '5500');\n        await nextClick(driver);\nawait setInputById(driver, 'fullAdd0', '880 21 St NE, Salmon Arm, AB V1E 2K9, Canada');\n        await selectToggleById(driver, 'addChange0', '0');\nawait selectToggleById(driver, 'bDisabled0', '0');\nawait selectToggleById(driver, 'quesFP0', '0');\nawait selectToggleById(driver, 'quesPrinResi0', '0');\nawait selectToggleById(driver, 'FirsttimeFiler0tp', '1');\n//await selectToggleById(driver, 'qIndian0', '0');\nawait selectToggleById(driver, 'qCitizen0', '0');\n        await nextClick(driver);\n        await nextClick(driver);\n        await setInputById(driver, 'Firstnames0sp', 'SPOUSE');\n        await setInputById(driver, 'Surname0sp', 'LAST');\n        await selectDateById(driver, 'DOB0sp', '1955/06/30');\n        await setInputById(driver, 'SIN0sp', '100000017');\n        await selectComboById(driver, 'Province0sp', 'Alberta');\n        await selectToggleById(driver, 'ResidencyCode0sp', '1');\n        await selectAgeDateById(driver, 'ImmigrationDate0sp',Fed.TaxYear,'0', '/06/30');\n        await setInputById(driver, 'IMMI_CDNIncomeIncluded0sp', '0');\n        await setInputById(driver, 'IMMI_TotalIncome0sp', '0');\n        await setInputById(driver, 'Immi_FieldFirst0sp', '0');\n        await setInputById(driver, 'Immi_FieldSecond0sp', '5500');\n        await nextClick(driver);\n        await selectToggleById(driver, 'FirsttimeFiler0sp', '1');\n        await selectToggleById(driver, 'quesFP0sp', '0');\n        await nextClick(driver);\n        await selectTab(driver, 'Income');\nawait selectToggleById(driver, 'WorkedInYOR0tp', '1');\n        await clickDivById(driver, 'T4Aa');\n        await nextClick(driver);\n        await selectToggleById(driver, 'WorkedInYOR0sp', '1');\n        await clickDivById(driver, 'T4Aa');\n        await nextClick(driver);\n        await setInputById(driver, 'T4ABox160tp', '5500');\n        await nextClick(driver);\n        await setInputById(driver, 'T4ABox160sp', '5500');\n        await nextClick(driver);\n        await nextClick(driver);\n        await selectTab(driver, 'Review');\n        await selectTab(driver, 'Summary');\n\t    await nextClick(driver);\n        await selectToggleById(driver, 'Language0', '1');\n        await selectToggleById(driver, 'OASNR0tp', '0');\n        await nextClick(driver);\n        savedForm = await getServerFile(driver);",
                            "err": {},
                            "uuid": "b121707b-7609-4720-ad58-4011f07c4141",
                            "parentUUID": "37583a45-0efd-452f-8fcf-a54aa7a13012",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "afterHooks": [
                        {
                            "title": "\"after all\" hook",
                            "fullTitle": "--NetIncome_ImmiAlert_5b----Build a newcomer return with a date of entry.  Input F12600.  The software must display a similar message to the following: “Since you have indicated that you are a newcomer to Canada, please ensure that ONLY the income earned while living in Canada, after your date of entry, is claimed at this line.      //(Link Returns: AB. , Both are Newcomer, date of entry (2019/06/30). TP date of birth = Under 65 and SP Under 65. T4A (Box 16) = $ 5,500 for each) \"after all\" hook",
                            "timedOut": false,
                            "duration": 5699,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "await logoutById(driver);\nawait driver.quit();",
                            "err": {},
                            "uuid": "3494ce0d-23d4-4c6c-8ceb-a388a01cbfef",
                            "parentUUID": "37583a45-0efd-452f-8fcf-a54aa7a13012",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "tests": [
                        {
                            "title": "IncomeFeild should be 11500    allow.value ==5500",
                            "fullTitle": "--NetIncome_ImmiAlert_5b----Build a newcomer return with a date of entry.  Input F12600.  The software must display a similar message to the following: “Since you have indicated that you are a newcomer to Canada, please ensure that ONLY the income earned while living in Canada, after your date of entry, is claimed at this line.      //(Link Returns: AB. , Both are Newcomer, date of entry (2019/06/30). TP date of birth = Under 65 and SP Under 65. T4A (Box 16) = $ 5,500 for each) IncomeFeild should be 11500    allow.value ==5500",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let IncomeFeild = getFieldId('11500');\n\t\tlet Income = savedForm[IncomeFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+Income;\nassert.equal(Income, '5500', 'IncomeFeild should be built.');",
                            "err": {},
                            "uuid": "f0641bda-3613-450e-8dcc-3269523acd5c",
                            "parentUUID": "37583a45-0efd-452f-8fcf-a54aa7a13012",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": "massage should be display, Since you have indicated that you are a newcomer to Canada, please ensure that ONLY the income earned while living in Canada, after your date of entry is reported ",
                            "fullTitle": "--NetIncome_ImmiAlert_5b----Build a newcomer return with a date of entry.  Input F12600.  The software must display a similar message to the following: “Since you have indicated that you are a newcomer to Canada, please ensure that ONLY the income earned while living in Canada, after your date of entry, is claimed at this line.      //(Link Returns: AB. , Both are Newcomer, date of entry (2019/06/30). TP date of birth = Under 65 and SP Under 65. T4A (Box 16) = $ 5,500 for each) massage should be display, Since you have indicated that you are a newcomer to Canada, please ensure that ONLY the income earned while living in Canada, after your date of entry is reported ",
                            "timedOut": false,
                            "duration": 31,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let gettext=await driver.findElement(By.css('#immigrantIncome0')).isDisplayed();\n\t\tassert.equal(gettext,true,'Since you have indicated that you are a newcomer to Canada, please ensure that ONLY the income earned while living in Canada, after your date of entry is reported.');",
                            "err": {},
                            "uuid": "c8a167b0-c00b-4d10-9025-349bd0d74869",
                            "parentUUID": "37583a45-0efd-452f-8fcf-a54aa7a13012",
                            "isHook": false,
                            "skipped": false
                        }
                    ],
                    "suites": [],
                    "passes": [
                        "f0641bda-3613-450e-8dcc-3269523acd5c",
                        "c8a167b0-c00b-4d10-9025-349bd0d74869"
                    ],
                    "failures": [],
                    "pending": [],
                    "skipped": [],
                    "duration": 31,
                    "root": false,
                    "rootEmpty": false,
                    "_timeout": 200000
                },
                {
                    "uuid": "1a820e13-a9f8-4a17-888d-35118ef2d222",
                    "title": "--NetIncome_ImmiAlert_5c---Build a newcomer return with a date of entry.  Input F12600.  The software must display a similar message to the following: “Since you have indicated that you are a newcomer to Canada, please ensure that ONLY the income earned while living in Canada, after your date of entry, is claimed at this line.    //(Link Returns: AB. , Both are Newcomer, date of entry (2019/06/30). TP date of birth = June 1, 1950 and SP on June 1, 1955. TP has T4RIF (Box 16) = $ 5,500 and SPs income =0 )",
                    "fullFile": "E:\\Rita\\Taxtron\\WebTest\\my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_ImmiAlert_5c.js",
                    "file": "\\my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_ImmiAlert_5c.js",
                    "beforeHooks": [
                        {
                            "title": "\"before all\" hook",
                            "fullTitle": "--NetIncome_ImmiAlert_5c---Build a newcomer return with a date of entry.  Input F12600.  The software must display a similar message to the following: “Since you have indicated that you are a newcomer to Canada, please ensure that ONLY the income earned while living in Canada, after your date of entry, is claimed at this line.    //(Link Returns: AB. , Both are Newcomer, date of entry (2019/06/30). TP date of birth = June 1, 1950 and SP on June 1, 1955. TP has T4RIF (Box 16) = $ 5,500 and SPs income =0 ) \"before all\" hook",
                            "timedOut": false,
                            "duration": 75497,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "driver = new Builder()\n\t.withCapabilities(Capabilities.chrome().setAcceptInsecureCerts(true))\n\t.build();\ndriver.manage().window().setRect({ width: 1366, height: 768 });\nawait login(driver, 'ritakumar@outlook.com', 'rishu12rashi');\n        await selectNewReturn(driver,province);\nawait switchToastOff(driver);\n        await setInputById(driver, 'Firstnames0', 'BOB ');\nawait setInputById(driver, 'Surname0', 'KUM');\nawait selectDateById(driver, 'DOB0', '1950/10/10');\nawait setInputById(driver, 'SIN0', '222222226');       \n        await selectComboById(driver, 'MaritalStatus0', 'Married');\nawait selectToggleById(driver, 'domchanged0', '0');\n        await selectToggleById(driver, 'didyoumove0', '0');\n        await selectToggleById(driver, 'IsLinkedReturn0', '1');\n        await selectToggleById(driver, 'HomeAddressSame0', '1');\nawait selectToggleById(driver, 'ResidencyCode0', '1');\nawait selectAgeDateById(driver, 'ImmigrationDate0tp',Fed.TaxYear,'0', '/06/30');\nawait setInputById(driver, 'IMMI_CDNIncomeIncluded0', '0');\n        await setInputById(driver, 'IMMI_TotalIncome0', '0');\n        await setInputById(driver, 'Immi_FieldFirst0', '0');\n        await setInputById(driver, 'Immi_FieldSecond0', '5500');\n        await nextClick(driver);\nawait setInputById(driver, 'fullAdd0', '880 21 St NE, Salmon Arm, AB V1E 2K9, Canada');\n        await selectToggleById(driver, 'addChange0', '0');\nawait selectToggleById(driver, 'bDisabled0', '0');\nawait selectToggleById(driver, 'quesFP0', '0');\nawait selectToggleById(driver, 'quesPrinResi0', '0');\n\t    await selectToggleById(driver, 'qCitizen0', '0');\n        await nextClick(driver);\n        await nextClick(driver);\n        await setInputById(driver, 'Firstnames0sp', 'SPOUSE');\n        await setInputById(driver, 'Surname0sp', 'LAST');\n        await selectDateById(driver, 'DOB0sp', '1955/06/30');\n        await setInputById(driver, 'SIN0sp', '100000017');\n        await selectComboById(driver, 'Province0sp', 'Alberta');\n        await selectToggleById(driver, 'ResidencyCode0sp', '1');\n        await selectAgeDateById(driver, 'ImmigrationDate0sp',Fed.TaxYear,'0', '/06/30');\n        await setInputById(driver, 'IMMI_CDNIncomeIncluded0sp', '0');\n        await setInputById(driver, 'IMMI_TotalIncome0sp', '0');\n        await setInputById(driver, 'Immi_FieldFirst0sp', '0');\n        await setInputById(driver, 'Immi_FieldSecond0sp', '5500');\n        await nextClick(driver);\n        await nextClick(driver);\n        await selectTab(driver, 'Income');\nawait selectToggleById(driver, 'PensionFunds0tp', '1');\n        await clickDivById(driver, 'T4RIF0tp');\n        await nextClick(driver);\n        await selectToggleById(driver, 'WorkedInYOR0sp', '0');\n        await nextClick(driver);\n        await setInputById(driver, 'T4RIFBox160tp', '5500');\n        await nextClick(driver);\n        await nextClick(driver);\n        await selectTab(driver, 'Review');\n        await selectTab(driver, 'Summary');\n\t    await nextClick(driver);\n        await selectToggleById(driver, 'Language0', '1');\n        await selectToggleById(driver, 'OASNR0tp', '0');\n        await nextClick(driver);\n        savedForm = await getServerFile(driver);",
                            "err": {},
                            "uuid": "5be70a88-9a20-4340-ac72-c93c850e24bc",
                            "parentUUID": "1a820e13-a9f8-4a17-888d-35118ef2d222",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "afterHooks": [
                        {
                            "title": "\"after all\" hook",
                            "fullTitle": "--NetIncome_ImmiAlert_5c---Build a newcomer return with a date of entry.  Input F12600.  The software must display a similar message to the following: “Since you have indicated that you are a newcomer to Canada, please ensure that ONLY the income earned while living in Canada, after your date of entry, is claimed at this line.    //(Link Returns: AB. , Both are Newcomer, date of entry (2019/06/30). TP date of birth = June 1, 1950 and SP on June 1, 1955. TP has T4RIF (Box 16) = $ 5,500 and SPs income =0 ) \"after all\" hook",
                            "timedOut": false,
                            "duration": 5462,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "await logoutById(driver);\nawait driver.quit();",
                            "err": {},
                            "uuid": "5375e46b-de87-4ddf-88a9-69d546d2ef68",
                            "parentUUID": "1a820e13-a9f8-4a17-888d-35118ef2d222",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "tests": [
                        {
                            "title": "IncomeFeild should be 11500    allow.value ==5500",
                            "fullTitle": "--NetIncome_ImmiAlert_5c---Build a newcomer return with a date of entry.  Input F12600.  The software must display a similar message to the following: “Since you have indicated that you are a newcomer to Canada, please ensure that ONLY the income earned while living in Canada, after your date of entry, is claimed at this line.    //(Link Returns: AB. , Both are Newcomer, date of entry (2019/06/30). TP date of birth = June 1, 1950 and SP on June 1, 1955. TP has T4RIF (Box 16) = $ 5,500 and SPs income =0 ) IncomeFeild should be 11500    allow.value ==5500",
                            "timedOut": false,
                            "duration": 1,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let IncomeFeild = getFieldId('11500');\n\t\tlet Income = savedForm[IncomeFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+Income;\nassert.equal(Income, '5500', 'IncomeFeild should be built.');",
                            "err": {},
                            "uuid": "01739ff0-87e5-4928-9f7a-2dca2a2a842f",
                            "parentUUID": "1a820e13-a9f8-4a17-888d-35118ef2d222",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": "massage should be display, Since you have indicated that you are a newcomer to Canada, please ensure that ONLY the income earned while living in Canada, after your date of entry is reported ",
                            "fullTitle": "--NetIncome_ImmiAlert_5c---Build a newcomer return with a date of entry.  Input F12600.  The software must display a similar message to the following: “Since you have indicated that you are a newcomer to Canada, please ensure that ONLY the income earned while living in Canada, after your date of entry, is claimed at this line.    //(Link Returns: AB. , Both are Newcomer, date of entry (2019/06/30). TP date of birth = June 1, 1950 and SP on June 1, 1955. TP has T4RIF (Box 16) = $ 5,500 and SPs income =0 ) massage should be display, Since you have indicated that you are a newcomer to Canada, please ensure that ONLY the income earned while living in Canada, after your date of entry is reported ",
                            "timedOut": false,
                            "duration": 27,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let gettext=await driver.findElement(By.css('#immigrantIncome0')).isDisplayed();\n\t\tassert.equal(gettext,true,'Since you have indicated that you are a newcomer to Canada, please ensure that ONLY the income earned while living in Canada, after your date of entry is reported.');",
                            "err": {},
                            "uuid": "0a4534cb-3cf7-4438-a269-d74433eaf674",
                            "parentUUID": "1a820e13-a9f8-4a17-888d-35118ef2d222",
                            "isHook": false,
                            "skipped": false
                        }
                    ],
                    "suites": [],
                    "passes": [
                        "01739ff0-87e5-4928-9f7a-2dca2a2a842f",
                        "0a4534cb-3cf7-4438-a269-d74433eaf674"
                    ],
                    "failures": [],
                    "pending": [],
                    "skipped": [],
                    "duration": 28,
                    "root": false,
                    "rootEmpty": false,
                    "_timeout": 200000
                },
                {
                    "uuid": "d861d4fc-9ef3-49b5-ac63-5573412280ce",
                    "title": "--NetIncome_ImmiAlert_5d---Build a newcomer return with a date of entry.  Input F12600.  The software must display a similar message to the following: “Since you have indicated that you are a newcomer to Canada, please ensure that ONLY the income earned while living in Canada, after your date of entry, is claimed at this line. //(Link Returns: AB. , Both are Newcomer, date of entry (2019/06/30). TP date of birth = 65 years or older and SP is 65 years or olde. TP has T3 (Box 31) = $ 10,000. T3 slip 50-50% shared. )",
                    "fullFile": "E:\\Rita\\Taxtron\\WebTest\\my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_ImmiAlert_5d.js",
                    "file": "\\my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_ImmiAlert_5d.js",
                    "beforeHooks": [
                        {
                            "title": "\"before all\" hook",
                            "fullTitle": "--NetIncome_ImmiAlert_5d---Build a newcomer return with a date of entry.  Input F12600.  The software must display a similar message to the following: “Since you have indicated that you are a newcomer to Canada, please ensure that ONLY the income earned while living in Canada, after your date of entry, is claimed at this line. //(Link Returns: AB. , Both are Newcomer, date of entry (2019/06/30). TP date of birth = 65 years or older and SP is 65 years or olde. TP has T3 (Box 31) = $ 10,000. T3 slip 50-50% shared. ) \"before all\" hook",
                            "timedOut": false,
                            "duration": 77829,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "driver = new Builder()\n\t.withCapabilities(Capabilities.chrome().setAcceptInsecureCerts(true))\n\t.build();\ndriver.manage().window().setRect({ width: 1366, height: 768 });\nawait login(driver, 'ritakumar@outlook.com', 'rishu12rashi');\n        await selectNewReturn(driver,province);\nawait switchToastOff(driver);\n        await setInputById(driver, 'Firstnames0', 'BOB ');\nawait setInputById(driver, 'Surname0', 'KUM');\nawait selectDateById(driver, 'DOB0', '1954/10/10');\nawait setInputById(driver, 'SIN0', '222222226');       \n        await selectComboById(driver, 'MaritalStatus0', 'Married');\nawait selectToggleById(driver, 'domchanged0', '0');\n        await selectToggleById(driver, 'didyoumove0', '0');\n        await selectToggleById(driver, 'IsLinkedReturn0', '1');\n        await selectToggleById(driver, 'HomeAddressSame0', '1');\nawait selectToggleById(driver, 'ResidencyCode0', '1');\n        await selectAgeDateById(driver, 'ImmigrationDate0tp',Fed.TaxYear,'0', '/06/30');\nawait setInputById(driver, 'IMMI_CDNIncomeIncluded0', '0');\n        await setInputById(driver, 'IMMI_TotalIncome0', '0');\n        await setInputById(driver, 'Immi_FieldFirst0', '0');\n        await setInputById(driver, 'Immi_FieldSecond0', '0');\n        await nextClick(driver);\nawait setInputById(driver, 'fullAdd0', '880 21 St NE, Salmon Arm, AB V1E 2K9, Canada');\n        await selectToggleById(driver, 'addChange0', '0');\nawait selectToggleById(driver, 'bDisabled0', '0');\nawait selectToggleById(driver, 'quesFP0', '0');\nawait selectToggleById(driver, 'quesPrinResi0', '0');\n\t    await selectToggleById(driver, 'qCitizen0', '0');\n        await nextClick(driver);\n        await nextClick(driver);\n        await setInputById(driver, 'Firstnames0sp', 'SPOUSE');\n        await setInputById(driver, 'Surname0sp', 'LAST');\n        await selectDateById(driver, 'DOB0sp', '1954/06/30');\n        await setInputById(driver, 'SIN0sp', '100000017');\n        await selectComboById(driver, 'Province0sp', 'Alberta');\n        await selectToggleById(driver, 'ResidencyCode0sp', '1');\n        await selectAgeDateById(driver, 'ImmigrationDate0sp',Fed.TaxYear,'0', '/06/30');\n        await setInputById(driver, 'IMMI_CDNIncomeIncluded0sp', '0');\n        await setInputById(driver, 'IMMI_TotalIncome0sp', '0');\n        await setInputById(driver, 'Immi_FieldFirst0sp', '0');\n        await setInputById(driver, 'Immi_FieldSecond0sp', '5000');\n        await nextClick(driver);\n        await nextClick(driver);\n        await selectTab(driver, 'Income');\nawait selectToggleById(driver, 'InvestmentIncome0tp', '1');\nawait clickDivById(driver, 'T30tp');\n        await nextClick(driver);\n        //await selectToggleById(driver, 'isShared0tp', '1');\n        //await nextClick(driver);\n        await selectToggleById(driver, 'WorkedInYOR0sp', '0');\n        await nextClick(driver);\n        await selectComboById(driver, 'T3OtherCombo10tp', '31');\n        await setInputById(driver, 'T3OtherBox10tp', '10000');\n        await selectToggleById(driver, 't3splitq0tp', '1');\n        await setInputById(driver, 'T3Split0tp', '50');\nawait nextClick(driver);\n        await selectTab(driver, 'Review');\n        await selectTab(driver, 'Summary');\n\t    await nextClick(driver);\n        await selectToggleById(driver, 'Language0', '1');\n        await selectToggleById(driver, 'OASNR0tp', '0');\n        await nextClick(driver);\n        savedForm = await getServerFile(driver);",
                            "err": {},
                            "uuid": "c50307bc-24d2-41cf-a69e-0bef9f4f943d",
                            "parentUUID": "d861d4fc-9ef3-49b5-ac63-5573412280ce",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "afterHooks": [],
                    "tests": [
                        {
                            "title": "IncomeFeild should be 11500    allow.value ==5000",
                            "fullTitle": "--NetIncome_ImmiAlert_5d---Build a newcomer return with a date of entry.  Input F12600.  The software must display a similar message to the following: “Since you have indicated that you are a newcomer to Canada, please ensure that ONLY the income earned while living in Canada, after your date of entry, is claimed at this line. //(Link Returns: AB. , Both are Newcomer, date of entry (2019/06/30). TP date of birth = 65 years or older and SP is 65 years or olde. TP has T3 (Box 31) = $ 10,000. T3 slip 50-50% shared. ) IncomeFeild should be 11500    allow.value ==5000",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let IncomeFeild = getFieldId('11500');\n\t\tlet Income = savedForm[IncomeFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+Income;\nassert.equal(Income, '5000', 'IncomeFeild should be built.');",
                            "err": {},
                            "uuid": "79d9d629-54be-40bf-a70e-126ebdacf749",
                            "parentUUID": "d861d4fc-9ef3-49b5-ac63-5573412280ce",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": "massage should be display, Since you have indicated that you are a newcomer to Canada, please ensure that ONLY the income earned while living in Canada, after your date of entry is reported ",
                            "fullTitle": "--NetIncome_ImmiAlert_5d---Build a newcomer return with a date of entry.  Input F12600.  The software must display a similar message to the following: “Since you have indicated that you are a newcomer to Canada, please ensure that ONLY the income earned while living in Canada, after your date of entry, is claimed at this line. //(Link Returns: AB. , Both are Newcomer, date of entry (2019/06/30). TP date of birth = 65 years or older and SP is 65 years or olde. TP has T3 (Box 31) = $ 10,000. T3 slip 50-50% shared. ) massage should be display, Since you have indicated that you are a newcomer to Canada, please ensure that ONLY the income earned while living in Canada, after your date of entry is reported ",
                            "timedOut": false,
                            "duration": 45,
                            "state": "passed",
                            "speed": "medium",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let gettext=await driver.findElement(By.css('#immigrantIncome0')).isDisplayed();\n\t\tassert.equal(gettext,true,'Since you have indicated that you are a newcomer to Canada, please ensure that ONLY the income earned while living in Canada, after your date of entry is reported.');",
                            "err": {},
                            "uuid": "f8e9e5c2-9d15-4aea-8eb2-bc8d7837d90d",
                            "parentUUID": "d861d4fc-9ef3-49b5-ac63-5573412280ce",
                            "isHook": false,
                            "skipped": false
                        }
                    ],
                    "suites": [],
                    "passes": [
                        "79d9d629-54be-40bf-a70e-126ebdacf749",
                        "f8e9e5c2-9d15-4aea-8eb2-bc8d7837d90d"
                    ],
                    "failures": [],
                    "pending": [],
                    "skipped": [],
                    "duration": 45,
                    "root": false,
                    "rootEmpty": false,
                    "_timeout": 200000
                },
                {
                    "uuid": "9c881d41-53b0-4c3e-9aef-c008eb5fd119",
                    "title": "--NetIncome_ImmiAlert_5e---Build a newcomer return with a date of entry.  Input F12600.  The software must display a similar message to the following: “Since you have indicated that you are a newcomer to Canada, please ensure that ONLY the income earned while living in Canada, after your date of entry, is claimed at this line.      //(Link Returns: BC. , Both are Newcomer, date of entry (2020/06/30). TP date of birth = 65 years or older and SP is 65 years or older. TP has T5 (Box 19) = $ 10,000. T5 slip 50-50% shared. Check received due to death of spouse. )",
                    "fullFile": "E:\\Rita\\Taxtron\\WebTest\\my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_ImmiAlert_5e.js",
                    "file": "\\my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_ImmiAlert_5e.js",
                    "beforeHooks": [
                        {
                            "title": "\"before all\" hook",
                            "fullTitle": "--NetIncome_ImmiAlert_5e---Build a newcomer return with a date of entry.  Input F12600.  The software must display a similar message to the following: “Since you have indicated that you are a newcomer to Canada, please ensure that ONLY the income earned while living in Canada, after your date of entry, is claimed at this line.      //(Link Returns: BC. , Both are Newcomer, date of entry (2020/06/30). TP date of birth = 65 years or older and SP is 65 years or older. TP has T5 (Box 19) = $ 10,000. T5 slip 50-50% shared. Check received due to death of spouse. ) \"before all\" hook",
                            "timedOut": false,
                            "duration": 79556,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "driver = new Builder()\n\t.withCapabilities(Capabilities.chrome().setAcceptInsecureCerts(true))\n\t.build();\ndriver.manage().window().setRect({ width: 1366, height: 768 });\nawait login(driver, 'ritakumar@outlook.com', 'rishu12rashi');\n        await selectNewReturn(driver,province);\nawait switchToastOff(driver);\n        await setInputById(driver, 'Firstnames0', 'BOB ');\nawait setInputById(driver, 'Surname0', 'KUM');\nawait selectDateById(driver, 'DOB0', '1954/10/10');\nawait setInputById(driver, 'SIN0', '222222226');       \n        await selectComboById(driver, 'MaritalStatus0', 'Married');\nawait selectToggleById(driver, 'domchanged0', '0');\n        await selectToggleById(driver, 'didyoumove0', '0');\n        await selectToggleById(driver, 'IsLinkedReturn0', '1');\n        await selectToggleById(driver, 'HomeAddressSame0', '1');\nawait selectToggleById(driver, 'ResidencyCode0', '1');\n        await selectAgeDateById(driver, 'ImmigrationDate0tp',Fed.TaxYear,'0', '/06/30');\nawait setInputById(driver, 'IMMI_CDNIncomeIncluded0', '0');\n        await setInputById(driver, 'IMMI_TotalIncome0', '0');\n        await setInputById(driver, 'Immi_FieldFirst0', '0');\n        await setInputById(driver, 'Immi_FieldSecond0', '5500');\n        await nextClick(driver);\nawait setInputById(driver, 'fullAdd0', '880 21 St NE, Salmon Arm, BC V1E 2K9, Canada');\n        await selectToggleById(driver, 'addChange0', '0');\n        await selectToggleById(driver, 'bDisabled0', '0');\n        await selectToggleById(driver, 'FirsttimeFiler0tp', '1');\nawait selectToggleById(driver, 'quesFP0', '0');\nawait selectToggleById(driver, 'quesPrinResi0', '0');\n\t    await selectToggleById(driver, 'qCitizen0', '0');\n        await nextClick(driver);\n        await nextClick(driver);\n        await setInputById(driver, 'Firstnames0sp', 'SPOUSE');\n        await setInputById(driver, 'Surname0sp', 'LAST');\n        await selectDateById(driver, 'DOB0sp', '1954/06/30');\n        await setInputById(driver, 'SIN0sp', '100000017');\n        await selectComboById(driver, 'Province0sp', 'British Columbia');\n        await selectToggleById(driver, 'ResidencyCode0sp', '1');\n        await selectAgeDateById(driver, 'ImmigrationDate0sp',Fed.TaxYear,'0', '/06/30');\n        await setInputById(driver, 'IMMI_CDNIncomeIncluded0sp', '0');\n        await setInputById(driver, 'IMMI_TotalIncome0sp', '0');\n        await setInputById(driver, 'Immi_FieldFirst0sp', '0');\n        await setInputById(driver, 'Immi_FieldSecond0sp', '5000');\n        await nextClick(driver);\n        await selectToggleById(driver, 'FirsttimeFiler0sp', '1');\n        await nextClick(driver);\n        await selectTab(driver, 'Income');\nawait selectToggleById(driver, 'InvestmentIncome0tp', '1');\nawait clickDivById(driver, 'T50tp');\n        await nextClick(driver);\n        await selectToggleById(driver, 'WorkedInYOR0sp', '0');\n        await nextClick(driver);\nawait selectComboById(driver, 'T5OtherCombo10tp', '19');\nawait setInputById(driver, 'T5OtherBox10tp', '10000');\nawait selectComboById(driver, 'T5_2540tp', 'Bank Interest');\n\t    await selectToggleById(driver, 't5splitq0tp', '1');\n        await setInputById(driver, 'T5Split0tp', '50');\n        await selectToggleById(driver, 'T5Annuity0tp', '1');\n        await nextClick(driver);\n        await selectTab(driver, 'Review');\n        await selectTab(driver, 'Summary');\n\t    await nextClick(driver);\n        await selectToggleById(driver, 'Language0', '1');\n        await selectToggleById(driver, 'OASNR0tp', '0');\n        await nextClick(driver);\n        savedForm = await getServerFile(driver);",
                            "err": {},
                            "uuid": "53f0df2b-625c-47a3-b493-baf029769d39",
                            "parentUUID": "9c881d41-53b0-4c3e-9aef-c008eb5fd119",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "afterHooks": [
                        {
                            "title": "\"after all\" hook",
                            "fullTitle": "--NetIncome_ImmiAlert_5e---Build a newcomer return with a date of entry.  Input F12600.  The software must display a similar message to the following: “Since you have indicated that you are a newcomer to Canada, please ensure that ONLY the income earned while living in Canada, after your date of entry, is claimed at this line.      //(Link Returns: BC. , Both are Newcomer, date of entry (2020/06/30). TP date of birth = 65 years or older and SP is 65 years or older. TP has T5 (Box 19) = $ 10,000. T5 slip 50-50% shared. Check received due to death of spouse. ) \"after all\" hook",
                            "timedOut": false,
                            "duration": 5405,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "await logoutById(driver);\nawait driver.quit();",
                            "err": {},
                            "uuid": "9701d6e8-d082-4fba-82d4-ad026adcca73",
                            "parentUUID": "9c881d41-53b0-4c3e-9aef-c008eb5fd119",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "tests": [
                        {
                            "title": "IncomeFeild should be 11500    allow.value ==5000",
                            "fullTitle": "--NetIncome_ImmiAlert_5e---Build a newcomer return with a date of entry.  Input F12600.  The software must display a similar message to the following: “Since you have indicated that you are a newcomer to Canada, please ensure that ONLY the income earned while living in Canada, after your date of entry, is claimed at this line.      //(Link Returns: BC. , Both are Newcomer, date of entry (2020/06/30). TP date of birth = 65 years or older and SP is 65 years or older. TP has T5 (Box 19) = $ 10,000. T5 slip 50-50% shared. Check received due to death of spouse. ) IncomeFeild should be 11500    allow.value ==5000",
                            "timedOut": false,
                            "duration": 1,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let IncomeFeild = getFieldId('11500');\n\t\tlet Income = savedForm[IncomeFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+Income;\nassert.equal(Income, '5000', 'IncomeFeild should be built.');",
                            "err": {},
                            "uuid": "a2ca10e8-0761-4ee9-9de1-030fa1b9ca4e",
                            "parentUUID": "9c881d41-53b0-4c3e-9aef-c008eb5fd119",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": "massage should be display, Since you have indicated that you are a newcomer to Canada, please ensure that ONLY the income earned while living in Canada, after your date of entry is reported ",
                            "fullTitle": "--NetIncome_ImmiAlert_5e---Build a newcomer return with a date of entry.  Input F12600.  The software must display a similar message to the following: “Since you have indicated that you are a newcomer to Canada, please ensure that ONLY the income earned while living in Canada, after your date of entry, is claimed at this line.      //(Link Returns: BC. , Both are Newcomer, date of entry (2020/06/30). TP date of birth = 65 years or older and SP is 65 years or older. TP has T5 (Box 19) = $ 10,000. T5 slip 50-50% shared. Check received due to death of spouse. ) massage should be display, Since you have indicated that you are a newcomer to Canada, please ensure that ONLY the income earned while living in Canada, after your date of entry is reported ",
                            "timedOut": false,
                            "duration": 55,
                            "state": "passed",
                            "speed": "medium",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let gettext=await driver.findElement(By.css('#immigrantIncome0')).isDisplayed();\n\t\tassert.equal(gettext,true,'Since you have indicated that you are a newcomer to Canada, please ensure that ONLY the income earned while living in Canada, after your date of entry is reported.');",
                            "err": {},
                            "uuid": "0f817d76-c654-437f-84c2-9034ee84e804",
                            "parentUUID": "9c881d41-53b0-4c3e-9aef-c008eb5fd119",
                            "isHook": false,
                            "skipped": false
                        }
                    ],
                    "suites": [],
                    "passes": [
                        "a2ca10e8-0761-4ee9-9de1-030fa1b9ca4e",
                        "0f817d76-c654-437f-84c2-9034ee84e804"
                    ],
                    "failures": [],
                    "pending": [],
                    "skipped": [],
                    "duration": 56,
                    "root": false,
                    "rootEmpty": false,
                    "_timeout": 200000
                },
                {
                    "uuid": "e428ccf2-a919-49d9-8a4d-8a6b492a9bf1",
                    "title": "--NetIncome_ImmiAlert_5f---Build a newcomer return with a date of entry.  Input F12600.  The software must display a similar message to the following: “Since you have indicated that you are a newcomer to Canada, please ensure that ONLY the income earned while living in Canada, after your date of entry, is claimed at this line.PROV of RES=ON. //(Link Returns: SK. , Both are Newcomer, date of entry (2019/06/30). TP date of birth = 65 years or older and SP is 65 years or older. Foreign US Social Security Income for TP and SP $ 10,000 each )",
                    "fullFile": "E:\\Rita\\Taxtron\\WebTest\\my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_ImmiAlert_5f.js",
                    "file": "\\my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_ImmiAlert_5f.js",
                    "beforeHooks": [
                        {
                            "title": "\"before all\" hook",
                            "fullTitle": "--NetIncome_ImmiAlert_5f---Build a newcomer return with a date of entry.  Input F12600.  The software must display a similar message to the following: “Since you have indicated that you are a newcomer to Canada, please ensure that ONLY the income earned while living in Canada, after your date of entry, is claimed at this line.PROV of RES=ON. //(Link Returns: SK. , Both are Newcomer, date of entry (2019/06/30). TP date of birth = 65 years or older and SP is 65 years or older. Foreign US Social Security Income for TP and SP $ 10,000 each ) \"before all\" hook",
                            "timedOut": false,
                            "duration": 82030,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "driver = new Builder()\n\t.withCapabilities(Capabilities.chrome().setAcceptInsecureCerts(true))\n\t.build();\ndriver.manage().window().setRect({ width: 1366, height: 768 });\nawait login(driver, 'ritakumar@outlook.com', 'rishu12rashi');\n        await selectNewReturn(driver,province);\nawait switchToastOff(driver);\n        await setInputById(driver, 'Firstnames0', 'BOB ');\nawait setInputById(driver, 'Surname0', 'KUM');\nawait selectDateById(driver, 'DOB0', '1954/10/10');\nawait setInputById(driver, 'SIN0', '222222226');       \n        await selectComboById(driver, 'MaritalStatus0', 'Married');\nawait selectToggleById(driver, 'domchanged0', '0');\n        await selectToggleById(driver, 'didyoumove0', '0');\n        await selectToggleById(driver, 'IsLinkedReturn0', '1');\n        await selectToggleById(driver, 'HomeAddressSame0', '1');\nawait selectToggleById(driver, 'ResidencyCode0', '1');\nawait selectAgeDateById(driver, 'ImmigrationDate0tp',Fed.TaxYear,'0', '/06/30');\nawait setInputById(driver, 'IMMI_CDNIncomeIncluded0', '0');\n        await setInputById(driver, 'IMMI_TotalIncome0', '0');\n        await setInputById(driver, 'Immi_FieldFirst0', '0');\n        await setInputById(driver, 'Immi_FieldSecond0', '5500');\n        await nextClick(driver);\nawait setInputById(driver, 'fullAdd0', '880 21 St NE, Salmon Arm, SK S7H 1A5, Canada');\n        await selectToggleById(driver, 'addChange0', '0');\nawait selectToggleById(driver, 'bDisabled0', '0');\nawait selectToggleById(driver, 'quesFP0', '0');\nawait selectToggleById(driver, 'quesPrinResi0', '0');\n\t    await selectToggleById(driver, 'qCitizen0', '0');\n        await nextClick(driver);\n        await nextClick(driver);\n        await setInputById(driver, 'Firstnames0sp', 'SPOUSE');\n        await setInputById(driver, 'Surname0sp', 'LAST');\n        await selectDateById(driver, 'DOB0sp', '1954/06/30');\n        await setInputById(driver, 'SIN0sp', '100000017');\n        await selectComboById(driver, 'Province0sp', 'Saskatchewan');\n        await selectToggleById(driver, 'ResidencyCode0sp', '1');\n        await selectAgeDateById(driver, 'ImmigrationDate0sp',Fed.TaxYear,'0', '/06/30');\n        await setInputById(driver, 'IMMI_CDNIncomeIncluded0sp', '0');\n        await setInputById(driver, 'IMMI_TotalIncome0sp', '0');\n        await setInputById(driver, 'Immi_FieldFirst0sp', '0');\n        await setInputById(driver, 'Immi_FieldSecond0sp', '5000');\n        await nextClick(driver);\n        await nextClick(driver);\n        await selectTab(driver, 'Income');\nawait selectToggleById(driver, 'ForeignIncome0tp', '1');\n\t    await nextClick(driver);\n        await selectToggleById(driver, 'ForeignIncome0sp', '1');\n        await nextClick(driver);\n        await selectComboById(driver, 'FIncomeCountry0tp', 'USA');\n        await setInputById(driver, 'FIncome0tp', '10000');\n        await selectComboById(driver, 'IncomeType0tp', 'Pension Income');\n        await selectToggleById(driver, 'UsSSB0tp', '1');\n        await nextClick(driver);\n        await selectComboById(driver, 'FIncomeCountry0sp', 'USA');\n        await setInputById(driver, 'FIncome0sp', '10000');\n        await selectComboById(driver, 'IncomeType0sp', 'Pension Income');\n        await selectToggleById(driver, 'UsSSB0sp', '1');\n        await nextClick(driver);\n        await selectTab(driver, 'Review');\n        await selectTab(driver, 'Summary');\n\t    await nextClick(driver);\n        await selectToggleById(driver, 'Language0', '1');\n        await selectToggleById(driver, 'OASNR0tp', '0');\n        await nextClick(driver);\n        savedForm = await getServerFile(driver);",
                            "err": {},
                            "uuid": "77f52ee1-56ba-4411-944e-87fa110ba73c",
                            "parentUUID": "e428ccf2-a919-49d9-8a4d-8a6b492a9bf1",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "afterHooks": [
                        {
                            "title": "\"after all\" hook",
                            "fullTitle": "--NetIncome_ImmiAlert_5f---Build a newcomer return with a date of entry.  Input F12600.  The software must display a similar message to the following: “Since you have indicated that you are a newcomer to Canada, please ensure that ONLY the income earned while living in Canada, after your date of entry, is claimed at this line.PROV of RES=ON. //(Link Returns: SK. , Both are Newcomer, date of entry (2019/06/30). TP date of birth = 65 years or older and SP is 65 years or older. Foreign US Social Security Income for TP and SP $ 10,000 each ) \"after all\" hook",
                            "timedOut": false,
                            "duration": 5431,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "await logoutById(driver);\nawait driver.quit();",
                            "err": {},
                            "uuid": "3a7df441-cde7-4b42-93df-dc706d879c18",
                            "parentUUID": "e428ccf2-a919-49d9-8a4d-8a6b492a9bf1",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "tests": [
                        {
                            "title": "IncomeFeild should be 11500    allow.value ==10000",
                            "fullTitle": "--NetIncome_ImmiAlert_5f---Build a newcomer return with a date of entry.  Input F12600.  The software must display a similar message to the following: “Since you have indicated that you are a newcomer to Canada, please ensure that ONLY the income earned while living in Canada, after your date of entry, is claimed at this line.PROV of RES=ON. //(Link Returns: SK. , Both are Newcomer, date of entry (2019/06/30). TP date of birth = 65 years or older and SP is 65 years or older. Foreign US Social Security Income for TP and SP $ 10,000 each ) IncomeFeild should be 11500    allow.value ==10000",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let IncomeFeild = getFieldId('11500');\n\t\tlet Income = savedForm[IncomeFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+Income;\nassert.equal(Income, '10000', 'IncomeFeild should be built.');",
                            "err": {},
                            "uuid": "bb3e16c0-802b-4de6-a1cc-1fbbc6ae57ae",
                            "parentUUID": "e428ccf2-a919-49d9-8a4d-8a6b492a9bf1",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": "massage should be display, Since you have indicated that you are a newcomer to Canada, please ensure that ONLY the income earned while living in Canada, after your date of entry is reported ",
                            "fullTitle": "--NetIncome_ImmiAlert_5f---Build a newcomer return with a date of entry.  Input F12600.  The software must display a similar message to the following: “Since you have indicated that you are a newcomer to Canada, please ensure that ONLY the income earned while living in Canada, after your date of entry, is claimed at this line.PROV of RES=ON. //(Link Returns: SK. , Both are Newcomer, date of entry (2019/06/30). TP date of birth = 65 years or older and SP is 65 years or older. Foreign US Social Security Income for TP and SP $ 10,000 each ) massage should be display, Since you have indicated that you are a newcomer to Canada, please ensure that ONLY the income earned while living in Canada, after your date of entry is reported ",
                            "timedOut": false,
                            "duration": 35,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let gettext=await driver.findElement(By.css('#immigrantIncome0')).isDisplayed();\n\t\tassert.equal(gettext,true,'Since you have indicated that you are a newcomer to Canada, please ensure that ONLY the income earned while living in Canada, after your date of entry is reported.');",
                            "err": {},
                            "uuid": "de1be605-b7e3-4067-8657-1c17562ae10d",
                            "parentUUID": "e428ccf2-a919-49d9-8a4d-8a6b492a9bf1",
                            "isHook": false,
                            "skipped": false
                        }
                    ],
                    "suites": [],
                    "passes": [
                        "bb3e16c0-802b-4de6-a1cc-1fbbc6ae57ae",
                        "de1be605-b7e3-4067-8657-1c17562ae10d"
                    ],
                    "failures": [],
                    "pending": [],
                    "skipped": [],
                    "duration": 35,
                    "root": false,
                    "rootEmpty": false,
                    "_timeout": 200000
                },
                {
                    "uuid": "8f21f2f3-96ca-4833-874e-06194cac13a2",
                    "title": " NetIncome_ImmiAlert_6----Build a newcomer return with a date of entry.  Input F12600.  The software must display a similar message to the following: “Since you have indicated that you are a newcomer to Canada, please ensure that ONLY the income earned while living in Canada, after your date of entry, is claimed at this line.PROV of RES=ON.   //(Single: NB. , Newcomer, date of entry (2019/06/30). TP date of birth = Under 65 years . T4E slip (Box 14, $ 10,000))",
                    "fullFile": "E:\\Rita\\Taxtron\\WebTest\\my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_ImmiAlert_6.js",
                    "file": "\\my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_ImmiAlert_6.js",
                    "beforeHooks": [
                        {
                            "title": "\"before all\" hook",
                            "fullTitle": " NetIncome_ImmiAlert_6----Build a newcomer return with a date of entry.  Input F12600.  The software must display a similar message to the following: “Since you have indicated that you are a newcomer to Canada, please ensure that ONLY the income earned while living in Canada, after your date of entry, is claimed at this line.PROV of RES=ON.   //(Single: NB. , Newcomer, date of entry (2019/06/30). TP date of birth = Under 65 years . T4E slip (Box 14, $ 10,000)) \"before all\" hook",
                            "timedOut": false,
                            "duration": 62234,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "driver = new Builder()\n\t.withCapabilities(Capabilities.chrome().setAcceptInsecureCerts(true))\n\t.build();\ndriver.manage().window().setRect({ width: 1366, height: 768 });\nawait login(driver, 'ritakumar@outlook.com', 'rishu12rashi');\nawait selectNewReturn(driver,province);\nawait switchToastOff(driver);\nawait setInputById(driver, 'Firstnames0', 'BOB ');\nawait setInputById(driver, 'Surname0', 'KUM');\nawait selectDateById(driver, 'DOB0', '1961/10/10');\nawait setInputById(driver, 'SIN0', '222222226');    \n        await selectComboById(driver, 'MaritalStatus0', 'Single');\n\t    await selectToggleById(driver, 'didyoumove0', '0');\nawait selectToggleById(driver, 'HomeAddressSame0', '1');\nawait selectToggleById(driver, 'ResidencyCode0', '1');\nawait selectAgeDateById(driver, 'ImmigrationDate0tp',Fed.TaxYear,'0', '/06/30');\nawait setInputById(driver, 'IMMI_CDNIncomeIncluded0', '0');\nawait setInputById(driver, 'IMMI_TotalIncome0', '0');\nawait nextClick(driver);\nawait setInputById(driver, 'fullAdd0', '880 21 St NE, Salmon Arm, BC V1E 2K9, Canada');\nawait selectToggleById(driver, 'addChange0', '0');\nawait selectToggleById(driver, 'bDisabled0', '0');\nawait selectToggleById(driver, 'quesFP0', '0');\nawait selectToggleById(driver, 'qCitizen0', '0');\nawait nextClick(driver);\n        await selectTab(driver, 'Income');\nawait selectToggleById(driver, 'quesOtherIncome0tp', '1');\n        await clickDivById(driver, 'T4E0tp');\n        await nextClick(driver);\n        await setInputById(driver, 'T4E_30tp', '10000');\n        await nextClick(driver);\nawait nextClick(driver);\nawait selectTab(driver, 'Review');\n        await selectTab(driver, 'Summary');\n\t    await nextClick(driver);\nawait selectToggleById(driver, 'Language0', '1');\nawait nextClick(driver);\nsavedForm = await getServerFile(driver);",
                            "err": {},
                            "uuid": "a3d3811e-1ca2-4c0a-8cde-d4dbd67bf082",
                            "parentUUID": "8f21f2f3-96ca-4833-874e-06194cac13a2",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "afterHooks": [
                        {
                            "title": "\"after all\" hook",
                            "fullTitle": " NetIncome_ImmiAlert_6----Build a newcomer return with a date of entry.  Input F12600.  The software must display a similar message to the following: “Since you have indicated that you are a newcomer to Canada, please ensure that ONLY the income earned while living in Canada, after your date of entry, is claimed at this line.PROV of RES=ON.   //(Single: NB. , Newcomer, date of entry (2019/06/30). TP date of birth = Under 65 years . T4E slip (Box 14, $ 10,000)) \"after all\" hook",
                            "timedOut": false,
                            "duration": 5537,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "await logoutById(driver);\nawait driver.quit();",
                            "err": {},
                            "uuid": "ff423980-ca82-4895-a2cc-5a123e887edd",
                            "parentUUID": "8f21f2f3-96ca-4833-874e-06194cac13a2",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "tests": [
                        {
                            "title": "IncomeFeild should be 11900    allow.value ==10000",
                            "fullTitle": " NetIncome_ImmiAlert_6----Build a newcomer return with a date of entry.  Input F12600.  The software must display a similar message to the following: “Since you have indicated that you are a newcomer to Canada, please ensure that ONLY the income earned while living in Canada, after your date of entry, is claimed at this line.PROV of RES=ON.   //(Single: NB. , Newcomer, date of entry (2019/06/30). TP date of birth = Under 65 years . T4E slip (Box 14, $ 10,000)) IncomeFeild should be 11900    allow.value ==10000",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let IncomeFeild = getFieldId('11900');\n\t\tlet Income = savedForm[IncomeFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+Income;\nassert.equal(Income, '10000', 'IncomeFeild should be built.');",
                            "err": {},
                            "uuid": "88f193a8-d969-4e0f-bb09-3d2eb3b10481",
                            "parentUUID": "8f21f2f3-96ca-4833-874e-06194cac13a2",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": "massage should be display, Since you have indicated that you are a newcomer to Canada, please ensure that ONLY the income earned while living in Canada, after your date of entry is reported ",
                            "fullTitle": " NetIncome_ImmiAlert_6----Build a newcomer return with a date of entry.  Input F12600.  The software must display a similar message to the following: “Since you have indicated that you are a newcomer to Canada, please ensure that ONLY the income earned while living in Canada, after your date of entry, is claimed at this line.PROV of RES=ON.   //(Single: NB. , Newcomer, date of entry (2019/06/30). TP date of birth = Under 65 years . T4E slip (Box 14, $ 10,000)) massage should be display, Since you have indicated that you are a newcomer to Canada, please ensure that ONLY the income earned while living in Canada, after your date of entry is reported ",
                            "timedOut": false,
                            "duration": 37,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let gettext=await driver.findElement(By.css('#immigrantIncome0')).isDisplayed();\n\t\tassert.equal(gettext,true,'Since you have indicated that you are a newcomer to Canada, please ensure that ONLY the income earned while living in Canada, after your date of entry is reported.');",
                            "err": {},
                            "uuid": "9fe2269b-453e-4321-9a68-956d97707fc6",
                            "parentUUID": "8f21f2f3-96ca-4833-874e-06194cac13a2",
                            "isHook": false,
                            "skipped": false
                        }
                    ],
                    "suites": [],
                    "passes": [
                        "88f193a8-d969-4e0f-bb09-3d2eb3b10481",
                        "9fe2269b-453e-4321-9a68-956d97707fc6"
                    ],
                    "failures": [],
                    "pending": [],
                    "skipped": [],
                    "duration": 37,
                    "root": false,
                    "rootEmpty": false,
                    "_timeout": 150000
                },
                {
                    "uuid": "f711c45e-df9a-442e-a2eb-e661a12837a8",
                    "title": "--NetIncome_ImmiAlert_7 ---Build a newcomer return with a date of entry.  Input F12600.  The software must display a similar message to the following: “Since you have indicated that you are a newcomer to Canada, please ensure that ONLY the income earned while living in Canada, after your date of entry, is claimed at this line.      //(Link Returns: BC. Both are Newcomer, date of entry  for both is (2019/06/30). TP date of birth = Under 65 years SPs date of birth =Under 65. T4RSP slip (Box 22, $ 10,000) for TP. SP has T4RSP (Box 16) $ 10,000 )",
                    "fullFile": "E:\\Rita\\Taxtron\\WebTest\\my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_ImmiAlert_7.js",
                    "file": "\\my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_ImmiAlert_7.js",
                    "beforeHooks": [
                        {
                            "title": "\"before all\" hook",
                            "fullTitle": "--NetIncome_ImmiAlert_7 ---Build a newcomer return with a date of entry.  Input F12600.  The software must display a similar message to the following: “Since you have indicated that you are a newcomer to Canada, please ensure that ONLY the income earned while living in Canada, after your date of entry, is claimed at this line.      //(Link Returns: BC. Both are Newcomer, date of entry  for both is (2019/06/30). TP date of birth = Under 65 years SPs date of birth =Under 65. T4RSP slip (Box 22, $ 10,000) for TP. SP has T4RSP (Box 16) $ 10,000 ) \"before all\" hook",
                            "timedOut": false,
                            "duration": 78697,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "driver = new Builder()\n\t.withCapabilities(Capabilities.chrome().setAcceptInsecureCerts(true))\n\t.build();\ndriver.manage().window().setRect({ width: 1366, height: 768 });\nawait login(driver, 'ritakumar@outlook.com', 'rishu12rashi');\n        await selectNewReturn(driver,province);\nawait switchToastOff(driver);\n        await setInputById(driver, 'Firstnames0', 'BOB ');\nawait setInputById(driver, 'Surname0', 'KUM');\nawait selectDateById(driver, 'DOB0', '1954/10/10');\nawait setInputById(driver, 'SIN0', '222222226');       \n        await selectComboById(driver, 'MaritalStatus0', 'Married');\nawait selectToggleById(driver, 'domchanged0', '0');\n        await selectToggleById(driver, 'didyoumove0', '0');\n        await selectToggleById(driver, 'IsLinkedReturn0', '1');\n        await selectToggleById(driver, 'HomeAddressSame0', '1');\nawait selectToggleById(driver, 'ResidencyCode0', '1');\nawait selectAgeDateById(driver, 'ImmigrationDate0tp',Fed.TaxYear,'0', '/06/30');\nawait setInputById(driver, 'IMMI_CDNIncomeIncluded0', '0');\n        await setInputById(driver, 'IMMI_TotalIncome0', '0');\n        await setInputById(driver, 'Immi_FieldFirst0', '0');\n        await setInputById(driver, 'Immi_FieldSecond0', '5500');\n        await nextClick(driver);\nawait setInputById(driver, 'fullAdd0', '880 21 St NE, Salmon Arm, BC V1E 2K9, Canada');\n        await selectToggleById(driver, 'addChange0', '0');\n        await selectToggleById(driver, 'bDisabled0', '0');\n        await selectToggleById(driver, 'FirsttimeFiler0tp', '1');\nawait selectToggleById(driver, 'quesFP0', '0');\nawait selectToggleById(driver, 'quesPrinResi0', '0');\n\t    await selectToggleById(driver, 'qCitizen0', '0');\n        await nextClick(driver);\n        await nextClick(driver);\n        await setInputById(driver, 'Firstnames0sp', 'SPOUSE');\n        await setInputById(driver, 'Surname0sp', 'LAST');\n        await selectDateById(driver, 'DOB0sp', '1954/06/30');\n        await setInputById(driver, 'SIN0sp', '100000017');\n        await selectComboById(driver, 'Province0sp', 'British Columbia');\n        await selectToggleById(driver, 'ResidencyCode0sp', '1');\n        await selectAgeDateById(driver, 'ImmigrationDate0sp',Fed.TaxYear,'0', '/06/30');\n        await setInputById(driver, 'IMMI_CDNIncomeIncluded0sp', '0');\n        await setInputById(driver, 'IMMI_TotalIncome0sp', '0');\n        await setInputById(driver, 'Immi_FieldFirst0sp', '0');\n        await setInputById(driver, 'Immi_FieldSecond0sp', '5000');\n        await nextClick(driver);\n        await selectToggleById(driver, 'FirsttimeFiler0sp', '1');\n        await nextClick(driver);\n        await selectTab(driver, 'Income');\nawait selectToggleById(driver, 'PensionFunds0tp', '1');\nawait clickDivById(driver, 'T4RSP0tp');\n        await nextClick(driver);\n        await selectToggleById(driver, 'PensionFunds0sp', '1');\n        await clickDivById(driver, 'T4RSP0sp');\n        await nextClick(driver);\n\t    await setInputById(driver, 'T4RSPBox220tp', '10000');\n        await nextClick(driver);\n        await setInputById(driver, 'T4RSPBox160sp', '10000');\n\t    await nextClick(driver);\n        await selectTab(driver, 'Review');\n        await selectTab(driver, 'Summary');\n\t    await nextClick(driver);\n        await selectToggleById(driver, 'Language0', '1');\n        await selectToggleById(driver, 'OASNR0tp', '0');\n        await nextClick(driver);\n        savedForm = await getServerFile(driver);",
                            "err": {},
                            "uuid": "705dc87d-5da5-4886-a7ff-3f7159fb780d",
                            "parentUUID": "f711c45e-df9a-442e-a2eb-e661a12837a8",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "afterHooks": [
                        {
                            "title": "\"after all\" hook",
                            "fullTitle": "--NetIncome_ImmiAlert_7 ---Build a newcomer return with a date of entry.  Input F12600.  The software must display a similar message to the following: “Since you have indicated that you are a newcomer to Canada, please ensure that ONLY the income earned while living in Canada, after your date of entry, is claimed at this line.      //(Link Returns: BC. Both are Newcomer, date of entry  for both is (2019/06/30). TP date of birth = Under 65 years SPs date of birth =Under 65. T4RSP slip (Box 22, $ 10,000) for TP. SP has T4RSP (Box 16) $ 10,000 ) \"after all\" hook",
                            "timedOut": false,
                            "duration": 1356,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "await logoutById(driver);\nawait driver.quit();",
                            "err": {},
                            "uuid": "e23c504c-6e64-47b7-b525-d227f0159797",
                            "parentUUID": "f711c45e-df9a-442e-a2eb-e661a12837a8",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "tests": [
                        {
                            "title": "IncomeFeild should be 11500    allow.value ==10000",
                            "fullTitle": "--NetIncome_ImmiAlert_7 ---Build a newcomer return with a date of entry.  Input F12600.  The software must display a similar message to the following: “Since you have indicated that you are a newcomer to Canada, please ensure that ONLY the income earned while living in Canada, after your date of entry, is claimed at this line.      //(Link Returns: BC. Both are Newcomer, date of entry  for both is (2019/06/30). TP date of birth = Under 65 years SPs date of birth =Under 65. T4RSP slip (Box 22, $ 10,000) for TP. SP has T4RSP (Box 16) $ 10,000 ) IncomeFeild should be 11500    allow.value ==10000",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let IncomeFeild = getFieldId('12900');\n\t\tlet Income = savedForm[IncomeFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+Income;\nassert.equal(Income, '10000', 'IncomeFeild should be built.');",
                            "err": {},
                            "uuid": "64d72e10-1779-4b47-ac76-17255855c8ae",
                            "parentUUID": "f711c45e-df9a-442e-a2eb-e661a12837a8",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": "massage should be display, Since you have indicated that you are a newcomer to Canada, please ensure that ONLY the income earned while living in Canada, after your date of entry is reported ",
                            "fullTitle": "--NetIncome_ImmiAlert_7 ---Build a newcomer return with a date of entry.  Input F12600.  The software must display a similar message to the following: “Since you have indicated that you are a newcomer to Canada, please ensure that ONLY the income earned while living in Canada, after your date of entry, is claimed at this line.      //(Link Returns: BC. Both are Newcomer, date of entry  for both is (2019/06/30). TP date of birth = Under 65 years SPs date of birth =Under 65. T4RSP slip (Box 22, $ 10,000) for TP. SP has T4RSP (Box 16) $ 10,000 ) massage should be display, Since you have indicated that you are a newcomer to Canada, please ensure that ONLY the income earned while living in Canada, after your date of entry is reported ",
                            "timedOut": false,
                            "duration": 35,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let gettext=await driver.findElement(By.css('#immigrantIncome0')).isDisplayed();\n\t\tassert.equal(gettext,true,'Since you have indicated that you are a newcomer to Canada, please ensure that ONLY the income earned while living in Canada, after your date of entry is reported.');",
                            "err": {},
                            "uuid": "e1bf9aa8-6ad4-43ee-9137-262b2d219d51",
                            "parentUUID": "f711c45e-df9a-442e-a2eb-e661a12837a8",
                            "isHook": false,
                            "skipped": false
                        }
                    ],
                    "suites": [],
                    "passes": [
                        "64d72e10-1779-4b47-ac76-17255855c8ae",
                        "e1bf9aa8-6ad4-43ee-9137-262b2d219d51"
                    ],
                    "failures": [],
                    "pending": [],
                    "skipped": [],
                    "duration": 35,
                    "root": false,
                    "rootEmpty": false,
                    "_timeout": 200000
                },
                {
                    "uuid": "d5108e09-00f6-4f92-892f-ff2a71e0138c",
                    "title": "NetIncome_Line122_1--Create a loss relating to F12200. F23600 must be a negative amount (if negative or zero, it will not build in .ws file). Ensure software requires an entry at F67840, regardless of taxable income in the year and regardless if AMT applies.   \\(TP divorced, T4 (box 14) =$10,000T5013 Box104=$ -15,000)",
                    "fullFile": "E:\\Rita\\Taxtron\\WebTest\\my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_Line122_1.js",
                    "file": "\\my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_Line122_1.js",
                    "beforeHooks": [
                        {
                            "title": "\"before all\" hook",
                            "fullTitle": "NetIncome_Line122_1--Create a loss relating to F12200. F23600 must be a negative amount (if negative or zero, it will not build in .ws file). Ensure software requires an entry at F67840, regardless of taxable income in the year and regardless if AMT applies.   \\(TP divorced, T4 (box 14) =$10,000T5013 Box104=$ -15,000) \"before all\" hook",
                            "timedOut": false,
                            "duration": 54826,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "driver = new Builder()\n\t.withCapabilities(Capabilities.chrome().setAcceptInsecureCerts(true))\n\t.build();\ndriver.manage().window().setRect({ width: 1366, height: 768 });\nawait login(driver, 'ritakumar@outlook.com', 'rishu12rashi');\nawait selectNewReturn(driver,province);\nawait switchToastOff(driver);\nawait setInputById(driver, 'Firstnames0', 'BOB ');\nawait setInputById(driver, 'Surname0', 'KUM');\nawait selectDateById(driver, 'DOB0', '1961/10/10');\nawait setInputById(driver, 'SIN0', '222222226');    \n        await selectComboById(driver, 'MaritalStatus0', 'Divorced');\n\t    await selectToggleById(driver, 'didyoumove0', '0');\nawait selectToggleById(driver, 'HomeAddressSame0', '1');\nawait nextClick(driver);\nawait setInputById(driver, 'fullAdd0', '880 21 St NE, Salmon Arm, BC V1E 2K9, Canada');\nawait selectToggleById(driver, 'addChange0', '0');\nawait selectToggleById(driver, 'bDisabled0', '0');\nawait selectToggleById(driver, 'quesFP0', '0');\nawait selectToggleById(driver, 'qCitizen0', '0');\nawait nextClick(driver);\n        await selectTab(driver, 'Income');\n        await selectToggleById(driver, 'WorkedInYOR0', '1');\n        await clickDivById(driver, 'T40tp');\nawait selectToggleById(driver, 'InvestmentIncome0tp', '1');\n        await clickDivById(driver, 'T5013a');\n        await nextClick(driver);\n        await setInputById(driver, 'T4B140', '10000');\n        await selectComboById(driver, 'T4_Box100', 'ON');\n        await nextClick(driver);\n        await selectComboById(driver, 'T5013Combo10tp', '104');\n        await setInputById(driver, 'T5013Amt10tp', '-15000');\n        await nextClick(driver);\n        savedForm = await getServerFile(driver);",
                            "err": {},
                            "uuid": "fdd4c339-820d-457f-9952-30dae1d9f8e7",
                            "parentUUID": "d5108e09-00f6-4f92-892f-ff2a71e0138c",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "afterHooks": [
                        {
                            "title": "\"after all\" hook",
                            "fullTitle": "NetIncome_Line122_1--Create a loss relating to F12200. F23600 must be a negative amount (if negative or zero, it will not build in .ws file). Ensure software requires an entry at F67840, regardless of taxable income in the year and regardless if AMT applies.   \\(TP divorced, T4 (box 14) =$10,000T5013 Box104=$ -15,000) \"after all\" hook",
                            "timedOut": false,
                            "duration": 5517,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "await logoutById(driver);\nawait driver.quit();",
                            "err": {},
                            "uuid": "071b37ca-c809-41dd-9fb0-05413bf331ca",
                            "parentUUID": "d5108e09-00f6-4f92-892f-ff2a71e0138c",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "tests": [
                        {
                            "title": "Income Feild should be 12200    allow.value ==-15000",
                            "fullTitle": "NetIncome_Line122_1--Create a loss relating to F12200. F23600 must be a negative amount (if negative or zero, it will not build in .ws file). Ensure software requires an entry at F67840, regardless of taxable income in the year and regardless if AMT applies.   \\(TP divorced, T4 (box 14) =$10,000T5013 Box104=$ -15,000) Income Feild should be 12200    allow.value ==-15000",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let netPartnershipIncomeLimitedOrnonActivePartnersOnlyFeild = getFieldId('12200');\n\t\tlet netPartnershipIncomeLimitedOrnonActivePartnersOnly = savedForm[netPartnershipIncomeLimitedOrnonActivePartnersOnlyFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+netPartnershipIncomeLimitedOrnonActivePartnersOnly;\nassert.equal(netPartnershipIncomeLimitedOrnonActivePartnersOnly, '-15000', 'Income Feild should be built.');",
                            "err": {},
                            "uuid": "c1502f20-82b8-4c08-9e0c-1c0e3dc5024d",
                            "parentUUID": "d5108e09-00f6-4f92-892f-ff2a71e0138c",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": "Income Feild should be 15000    allow.value ==-5000",
                            "fullTitle": "NetIncome_Line122_1--Create a loss relating to F12200. F23600 must be a negative amount (if negative or zero, it will not build in .ws file). Ensure software requires an entry at F67840, regardless of taxable income in the year and regardless if AMT applies.   \\(TP divorced, T4 (box 14) =$10,000T5013 Box104=$ -15,000) Income Feild should be 15000    allow.value ==-5000",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let totalIncomeFeild = getFieldId('15000');\n\t\tlet totalIncome = savedForm[totalIncomeFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+totalIncome;\nassert.equal(totalIncome, '-5000', 'Income Feild should be built.');",
                            "err": {},
                            "uuid": "7bc5ad82-1add-4192-bca5-1c0356abab17",
                            "parentUUID": "d5108e09-00f6-4f92-892f-ff2a71e0138c",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": "Income Feild should be 67840    allow.value ==15000",
                            "fullTitle": "NetIncome_Line122_1--Create a loss relating to F12200. F23600 must be a negative amount (if negative or zero, it will not build in .ws file). Ensure software requires an entry at F67840, regardless of taxable income in the year and regardless if AMT applies.   \\(TP divorced, T4 (box 14) =$10,000T5013 Box104=$ -15,000) Income Feild should be 67840    allow.value ==15000",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let amountOflossCreatedorIncreasedBySpecifiedCarryingChargesaxShelterslimitedPartnershipsAndNonactivePartnersFeild = getFieldId('67840');\n\t\tlet  amountOflossCreatedorIncreasedBySpecifiedCarryingChargesaxShelterslimitedPartnershipsAndNonactivePartners = savedForm[ amountOflossCreatedorIncreasedBySpecifiedCarryingChargesaxShelterslimitedPartnershipsAndNonactivePartnersFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+ amountOflossCreatedorIncreasedBySpecifiedCarryingChargesaxShelterslimitedPartnershipsAndNonactivePartners;\nassert.equal( amountOflossCreatedorIncreasedBySpecifiedCarryingChargesaxShelterslimitedPartnershipsAndNonactivePartners, '15000', 'Income Feild should be built.');",
                            "err": {},
                            "uuid": "5f30bab7-4952-48c9-a258-8ebfb1f8d3cf",
                            "parentUUID": "d5108e09-00f6-4f92-892f-ff2a71e0138c",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F67820 should be  allowed with amount    allow.value ==undefined",
                            "fullTitle": "NetIncome_Line122_1--Create a loss relating to F12200. F23600 must be a negative amount (if negative or zero, it will not build in .ws file). Ensure software requires an entry at F67840, regardless of taxable income in the year and regardless if AMT applies.   \\(TP divorced, T4 (box 14) =$10,000T5013 Box104=$ -15,000)  F67820 should be  allowed with amount    allow.value ==undefined",
                            "timedOut": false,
                            "duration": 1,
                            "state": "failed",
                            "speed": null,
                            "pass": false,
                            "fail": true,
                            "pending": false,
                            "context": null,
                            "code": "let amountOflossCreatedOrIncreasedByCCAAndCarryingChargesOnCertifiedFilmPropertyFeild = getFieldId('67820');\n\t\tlet  amountOflossCreatedOrIncreasedByCCAAndCarryingChargesOnCertifiedFilmProperty = savedForm[  amountOflossCreatedOrIncreasedByCCAAndCarryingChargesOnCertifiedFilmPropertyFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+ amountOflossCreatedOrIncreasedByCCAAndCarryingChargesOnCertifiedFilmProperty;\nassert.equal(   amountOflossCreatedOrIncreasedByCCAAndCarryingChargesOnCertifiedFilmProperty, '1', ' Feild should be built');",
                            "err": {
                                "message": "AssertionError:  Feild should be built",
                                "estack": "AssertionError [ERR_ASSERTION]:  Feild should be built\n    at Context.<anonymous> (my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_Line122_1.js:73:16)\n    at processImmediate (internal/timers.js:456:21)",
                                "diff": null
                            },
                            "uuid": "ce994414-892d-4319-b8d7-764ab2245593",
                            "parentUUID": "d5108e09-00f6-4f92-892f-ff2a71e0138c",
                            "isHook": false,
                            "skipped": false
                        }
                    ],
                    "suites": [],
                    "passes": [
                        "c1502f20-82b8-4c08-9e0c-1c0e3dc5024d",
                        "7bc5ad82-1add-4192-bca5-1c0356abab17",
                        "5f30bab7-4952-48c9-a258-8ebfb1f8d3cf"
                    ],
                    "failures": [
                        "ce994414-892d-4319-b8d7-764ab2245593"
                    ],
                    "pending": [],
                    "skipped": [],
                    "duration": 1,
                    "root": false,
                    "rootEmpty": false,
                    "_timeout": 150000
                },
                {
                    "uuid": "09fa373e-0745-4a87-89de-7f2729095ac4",
                    "title": "NetIncome_Line122_10-- Create a loss relating to F12200. F23600 must be a negative amount (if negative or zero, it will not build in .ws file). Ensure software requires an entry at F67840, regardless of taxable income in the year and regardless if AMT applies.    //(TP divorced, T4 (box 14) =$50,000Investmnt Expenses: Do you have resource, exploration and development expenses that qualify for investment tax credit? /Depletion allowancesT1229_2.T1229_155 == $ 30,000)",
                    "fullFile": "E:\\Rita\\Taxtron\\WebTest\\my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_Line122_10.js",
                    "file": "\\my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_Line122_10.js",
                    "beforeHooks": [
                        {
                            "title": "\"before all\" hook",
                            "fullTitle": "NetIncome_Line122_10-- Create a loss relating to F12200. F23600 must be a negative amount (if negative or zero, it will not build in .ws file). Ensure software requires an entry at F67840, regardless of taxable income in the year and regardless if AMT applies.    //(TP divorced, T4 (box 14) =$50,000Investmnt Expenses: Do you have resource, exploration and development expenses that qualify for investment tax credit? /Depletion allowancesT1229_2.T1229_155 == $ 30,000) \"before all\" hook",
                            "timedOut": false,
                            "duration": 66694,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "driver = new Builder()\n\t.withCapabilities(Capabilities.chrome().setAcceptInsecureCerts(true))\n\t.build();\ndriver.manage().window().setRect({ width: 1366, height: 768 });\nawait login(driver, 'ritakumar@outlook.com', 'rishu12rashi');\nawait selectNewReturn(driver,province);\nawait switchToastOff(driver);\nawait setInputById(driver, 'Firstnames0', 'BOB ');\nawait setInputById(driver, 'Surname0', 'KUM');\nawait selectDateById(driver, 'DOB0', '1961/10/10');\nawait setInputById(driver, 'SIN0', '222222226');    \n        await selectComboById(driver, 'MaritalStatus0', 'Divorced');\n\t    await selectToggleById(driver, 'didyoumove0', '0');\nawait selectToggleById(driver, 'HomeAddressSame0', '1');\nawait nextClick(driver);\nawait setInputById(driver, 'fullAdd0', '880 21 St NE, Salmon Arm, BC V1E 2K9, Canada');\nawait selectToggleById(driver, 'addChange0', '0');\nawait selectToggleById(driver, 'bDisabled0', '0');\nawait selectToggleById(driver, 'quesFP0', '0');\nawait selectToggleById(driver, 'qCitizen0', '0');\nawait nextClick(driver);\n        await selectTab(driver, 'Income');\nawait selectTab(driver, 'IncomeProfile');\nawait selectToggleById(driver, 'WorkedInYOR0tp', '1');\n        await clickDivById(driver, 'T40tp');\nawait nextClick(driver);\nawait setInputById(driver, 'T4B140', '50000');\n        await selectComboById(driver, 'T4_Box100tp', 'ON');\n        await nextClick(driver);\n        await nextClick(driver);\n        await selectTab(driver, 'Deduction');\n        await selectTab(driver, 'Investment_Main');\n        await selectToggleById(driver, 'qInvest0tp', '1');\n        await selectToggleById(driver, 'qT12290tp', '1');\n        await nextClick(driver);\n        await nextClick(driver);\n        await setInputById(driver, 'T1229_1070tp', '30000');\n       // await setInputById(driver, 'CCResources0tp', '30000');\n        await nextClick(driver);\n        await nextClick(driver);\n        savedForm = await getServerFile(driver);",
                            "err": {},
                            "uuid": "4e7dfb7f-752d-49ba-83e7-5872cbae386f",
                            "parentUUID": "09fa373e-0745-4a87-89de-7f2729095ac4",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "afterHooks": [
                        {
                            "title": "\"after all\" hook",
                            "fullTitle": "NetIncome_Line122_10-- Create a loss relating to F12200. F23600 must be a negative amount (if negative or zero, it will not build in .ws file). Ensure software requires an entry at F67840, regardless of taxable income in the year and regardless if AMT applies.    //(TP divorced, T4 (box 14) =$50,000Investmnt Expenses: Do you have resource, exploration and development expenses that qualify for investment tax credit? /Depletion allowancesT1229_2.T1229_155 == $ 30,000) \"after all\" hook",
                            "timedOut": false,
                            "duration": 5802,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "await logoutById(driver);\nawait driver.quit();",
                            "err": {},
                            "uuid": "907f9d33-89fb-4f43-bc12-3fef70b593e7",
                            "parentUUID": "09fa373e-0745-4a87-89de-7f2729095ac4",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "tests": [
                        {
                            "title": "IncomeFeild should be 10100    allow.value ==50000",
                            "fullTitle": "NetIncome_Line122_10-- Create a loss relating to F12200. F23600 must be a negative amount (if negative or zero, it will not build in .ws file). Ensure software requires an entry at F67840, regardless of taxable income in the year and regardless if AMT applies.    //(TP divorced, T4 (box 14) =$50,000Investmnt Expenses: Do you have resource, exploration and development expenses that qualify for investment tax credit? /Depletion allowancesT1229_2.T1229_155 == $ 30,000) IncomeFeild should be 10100    allow.value ==50000",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let employmentIncomeFromT4SlipsFeild = getFieldId('10100');\n\t\tlet  employmentIncomeFromT4Slips = savedForm[ employmentIncomeFromT4SlipsFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+ employmentIncomeFromT4Slips;\nassert.equal( employmentIncomeFromT4Slips, '50000', 'Income Feild should be built.');",
                            "err": {},
                            "uuid": "5781f74a-49a8-40e3-b8c9-957cfbf43699",
                            "parentUUID": "09fa373e-0745-4a87-89de-7f2729095ac4",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": "IncomeFeild should be 22400    allow.value ==30000",
                            "fullTitle": "NetIncome_Line122_10-- Create a loss relating to F12200. F23600 must be a negative amount (if negative or zero, it will not build in .ws file). Ensure software requires an entry at F67840, regardless of taxable income in the year and regardless if AMT applies.    //(TP divorced, T4 (box 14) =$50,000Investmnt Expenses: Do you have resource, exploration and development expenses that qualify for investment tax credit? /Depletion allowancesT1229_2.T1229_155 == $ 30,000) IncomeFeild should be 22400    allow.value ==30000",
                            "timedOut": false,
                            "duration": 1,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let explorationAndDevelopmentExpensesFeild = getFieldId('22400');\n\t\tlet  explorationAndDevelopmentExpenses = savedForm[  explorationAndDevelopmentExpensesFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+  explorationAndDevelopmentExpenses;\nassert.equal(  explorationAndDevelopmentExpenses, '30000', 'Income Feild should be built.');",
                            "err": {},
                            "uuid": "3e4614b9-6e01-4b03-b1e6-4bd6aa8076ab",
                            "parentUUID": "09fa373e-0745-4a87-89de-7f2729095ac4",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F67860 should be  allowed with amount    allow.value ==30000",
                            "fullTitle": "NetIncome_Line122_10-- Create a loss relating to F12200. F23600 must be a negative amount (if negative or zero, it will not build in .ws file). Ensure software requires an entry at F67840, regardless of taxable income in the year and regardless if AMT applies.    //(TP divorced, T4 (box 14) =$50,000Investmnt Expenses: Do you have resource, exploration and development expenses that qualify for investment tax credit? /Depletion allowancesT1229_2.T1229_155 == $ 30,000)  F67860 should be  allowed with amount    allow.value ==30000",
                            "timedOut": false,
                            "duration": 1,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let resourcePropertyAndFlowThroughSharesExpendituresDepletionAllowancesAndCarryingchargesFeild = getFieldId('67860');\n\t\tlet  resourcePropertyAndFlowThroughSharesExpendituresDepletionAllowancesAndCarryingcharges = savedForm[  resourcePropertyAndFlowThroughSharesExpendituresDepletionAllowancesAndCarryingchargesFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+ resourcePropertyAndFlowThroughSharesExpendituresDepletionAllowancesAndCarryingcharges;\nassert.equal(  resourcePropertyAndFlowThroughSharesExpendituresDepletionAllowancesAndCarryingcharges, '30000', ' Feild should be built');",
                            "err": {},
                            "uuid": "99800cb1-1b2d-4986-b9c2-3480289a599c",
                            "parentUUID": "09fa373e-0745-4a87-89de-7f2729095ac4",
                            "isHook": false,
                            "skipped": false
                        }
                    ],
                    "suites": [],
                    "passes": [
                        "5781f74a-49a8-40e3-b8c9-957cfbf43699",
                        "3e4614b9-6e01-4b03-b1e6-4bd6aa8076ab",
                        "99800cb1-1b2d-4986-b9c2-3480289a599c"
                    ],
                    "failures": [],
                    "pending": [],
                    "skipped": [],
                    "duration": 2,
                    "root": false,
                    "rootEmpty": false,
                    "_timeout": 150000
                },
                {
                    "uuid": "052709ed-bd4b-4b03-b17e-96daa4f93c46",
                    "title": "NetIncome_Line122_2--Create a loss relating to F12200. F23600 must be a negative amount (if negative or zero, it will not build in .ws file). Ensure software requires an entry at F67840, regardless of taxable income in the year and regardless if AMT applies.   \\(TP divorced, T4 (box 14) =$10,000T5013 Box104=$ -15,000)",
                    "fullFile": "E:\\Rita\\Taxtron\\WebTest\\my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_Line122_2.js",
                    "file": "\\my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_Line122_2.js",
                    "beforeHooks": [
                        {
                            "title": "\"before all\" hook",
                            "fullTitle": "NetIncome_Line122_2--Create a loss relating to F12200. F23600 must be a negative amount (if negative or zero, it will not build in .ws file). Ensure software requires an entry at F67840, regardless of taxable income in the year and regardless if AMT applies.   \\(TP divorced, T4 (box 14) =$10,000T5013 Box104=$ -15,000) \"before all\" hook",
                            "timedOut": false,
                            "duration": 63157,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "driver = new Builder()\n\t.withCapabilities(Capabilities.chrome().setAcceptInsecureCerts(true))\n\t.build();\ndriver.manage().window().setRect({ width: 1366, height: 768 });\nawait login(driver, 'ritakumar@outlook.com', 'rishu12rashi');\nawait selectNewReturn(driver,province);\nawait switchToastOff(driver);\nawait setInputById(driver, 'Firstnames0', 'BOB ');\nawait setInputById(driver, 'Surname0', 'KUM');\nawait selectDateById(driver, 'DOB0', '1961/10/10');\nawait setInputById(driver, 'SIN0', '222222226');    \n        await selectComboById(driver, 'MaritalStatus0', 'Divorced');\n\t    await selectToggleById(driver, 'didyoumove0', '0');\nawait selectToggleById(driver, 'HomeAddressSame0', '1');\nawait nextClick(driver);\nawait setInputById(driver, 'fullAdd0', '880 21 St NE, Salmon Arm, BC V1E 2K9, Canada');\nawait selectToggleById(driver, 'addChange0', '0');\nawait selectToggleById(driver, 'bDisabled0', '0');\nawait selectToggleById(driver, 'quesFP0', '0');\nawait selectToggleById(driver, 'qCitizen0', '0');\nawait nextClick(driver);\n        await selectTab(driver, 'Income');\nawait selectTab(driver, 'IncomeProfile');\nawait selectToggleById(driver, 'WorkedInYOR0tp', '1');\n        await clickDivById(driver, 'T40tp');\nawait nextClick(driver);\nawait setInputById(driver, 'T4B140', '50000');\n        await selectComboById(driver, 'T4_Box100tp', 'ON');\n        await nextClick(driver);\n        await nextClick(driver);\n        await selectTab(driver, 'Deduction');\n        await selectTab(driver, 'Investment_Main');\n        await selectToggleById(driver, 'qInvest0tp', '1');\n        await nextClick(driver);\n        await selectToggleById(driver, 'PartnerEx0tp', '1');\n        await setInputById(driver, 'IOMPartner0tp', '15000');\n        await nextClick(driver);\n        savedForm = await getServerFile(driver);",
                            "err": {},
                            "uuid": "4c23e66b-a978-48d7-804f-fb6c11e4b8c6",
                            "parentUUID": "052709ed-bd4b-4b03-b17e-96daa4f93c46",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "afterHooks": [
                        {
                            "title": "\"after all\" hook",
                            "fullTitle": "NetIncome_Line122_2--Create a loss relating to F12200. F23600 must be a negative amount (if negative or zero, it will not build in .ws file). Ensure software requires an entry at F67840, regardless of taxable income in the year and regardless if AMT applies.   \\(TP divorced, T4 (box 14) =$10,000T5013 Box104=$ -15,000) \"after all\" hook",
                            "timedOut": false,
                            "duration": 5413,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "await logoutById(driver);\nawait driver.quit();",
                            "err": {},
                            "uuid": "2706bd70-60d7-4b60-b12b-a548e9cdc0e2",
                            "parentUUID": "052709ed-bd4b-4b03-b17e-96daa4f93c46",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "tests": [
                        {
                            "title": "IncomeFeild should be 12200    allow.value ==undefined",
                            "fullTitle": "NetIncome_Line122_2--Create a loss relating to F12200. F23600 must be a negative amount (if negative or zero, it will not build in .ws file). Ensure software requires an entry at F67840, regardless of taxable income in the year and regardless if AMT applies.   \\(TP divorced, T4 (box 14) =$10,000T5013 Box104=$ -15,000) IncomeFeild should be 12200    allow.value ==undefined",
                            "timedOut": false,
                            "duration": 1,
                            "state": "failed",
                            "speed": null,
                            "pass": false,
                            "fail": true,
                            "pending": false,
                            "context": null,
                            "code": "let netPartnershipIncomeLimitedOrnonActivePartnersOnlyFeild = getFieldId('12200');\n\t\tlet netPartnershipIncomeLimitedOrnonActivePartnersOnly = savedForm[netPartnershipIncomeLimitedOrnonActivePartnersOnlyFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+netPartnershipIncomeLimitedOrnonActivePartnersOnly;\nassert.equal(netPartnershipIncomeLimitedOrnonActivePartnersOnly, '-15000', 'Income Feild should be built.');",
                            "err": {
                                "message": "AssertionError: Income Feild should be built.",
                                "estack": "AssertionError [ERR_ASSERTION]: Income Feild should be built.\n    at Context.<anonymous> (my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_Line122_2.js:59:16)\n    at processImmediate (internal/timers.js:456:21)",
                                "diff": null
                            },
                            "uuid": "98deb316-d539-4a05-b85a-ab9fe6f9ebac",
                            "parentUUID": "052709ed-bd4b-4b03-b17e-96daa4f93c46",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": "IncomeFeild should be 67840    allow.value ==15000",
                            "fullTitle": "NetIncome_Line122_2--Create a loss relating to F12200. F23600 must be a negative amount (if negative or zero, it will not build in .ws file). Ensure software requires an entry at F67840, regardless of taxable income in the year and regardless if AMT applies.   \\(TP divorced, T4 (box 14) =$10,000T5013 Box104=$ -15,000) IncomeFeild should be 67840    allow.value ==15000",
                            "timedOut": false,
                            "duration": 1,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let amountOflossCreatedorIncreasedBySpecifiedCarryingChargesaxShelterslimitedPartnershipsAndNonactivePartnersFeild = getFieldId('67840');\n\t\tlet  amountOflossCreatedorIncreasedBySpecifiedCarryingChargesaxShelterslimitedPartnershipsAndNonactivePartners = savedForm[ amountOflossCreatedorIncreasedBySpecifiedCarryingChargesaxShelterslimitedPartnershipsAndNonactivePartnersFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+ amountOflossCreatedorIncreasedBySpecifiedCarryingChargesaxShelterslimitedPartnershipsAndNonactivePartners;\nassert.equal( amountOflossCreatedorIncreasedBySpecifiedCarryingChargesaxShelterslimitedPartnershipsAndNonactivePartners, '15000', 'Income Feild should be built.');",
                            "err": {},
                            "uuid": "77e9ee40-c917-4ae2-9d84-7da5c7f0183b",
                            "parentUUID": "052709ed-bd4b-4b03-b17e-96daa4f93c46",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F67820 should be  allowed with amount    allow.value ==1",
                            "fullTitle": "NetIncome_Line122_2--Create a loss relating to F12200. F23600 must be a negative amount (if negative or zero, it will not build in .ws file). Ensure software requires an entry at F67840, regardless of taxable income in the year and regardless if AMT applies.   \\(TP divorced, T4 (box 14) =$10,000T5013 Box104=$ -15,000)  F67820 should be  allowed with amount    allow.value ==1",
                            "timedOut": false,
                            "duration": 1,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let amountOflossCreatedOrIncreasedByCCAAndCarryingChargesOnCertifiedFilmPropertyFeild = getFieldId('67820');\n\t\tlet  amountOflossCreatedOrIncreasedByCCAAndCarryingChargesOnCertifiedFilmProperty = savedForm[  amountOflossCreatedOrIncreasedByCCAAndCarryingChargesOnCertifiedFilmPropertyFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+ amountOflossCreatedOrIncreasedByCCAAndCarryingChargesOnCertifiedFilmProperty;\nassert.equal(   amountOflossCreatedOrIncreasedByCCAAndCarryingChargesOnCertifiedFilmProperty, '1', ' Feild should be built');",
                            "err": {},
                            "uuid": "a3c674fc-378e-42b5-8ef2-fc94af88f780",
                            "parentUUID": "052709ed-bd4b-4b03-b17e-96daa4f93c46",
                            "isHook": false,
                            "skipped": false
                        }
                    ],
                    "suites": [],
                    "passes": [
                        "77e9ee40-c917-4ae2-9d84-7da5c7f0183b",
                        "a3c674fc-378e-42b5-8ef2-fc94af88f780"
                    ],
                    "failures": [
                        "98deb316-d539-4a05-b85a-ab9fe6f9ebac"
                    ],
                    "pending": [],
                    "skipped": [],
                    "duration": 3,
                    "root": false,
                    "rootEmpty": false,
                    "_timeout": 150000
                },
                {
                    "uuid": "a76abd28-7642-48f7-9543-48b3807e824d",
                    "title": "NetIncome_Line122_4--Create a loss relating to F12200. F23600 must be a negative amount (if negative or zero, it will not build in .ws file). Ensure software requires an entry at F67840, regardless of taxable income in the year and regardless if AMT applies.   \\(TP divorced, T4 (box 14) =$10,000 T5013 Box107=$ -15,000)",
                    "fullFile": "E:\\Rita\\Taxtron\\WebTest\\my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_Line122_4.js",
                    "file": "\\my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_Line122_4.js",
                    "beforeHooks": [
                        {
                            "title": "\"before all\" hook",
                            "fullTitle": "NetIncome_Line122_4--Create a loss relating to F12200. F23600 must be a negative amount (if negative or zero, it will not build in .ws file). Ensure software requires an entry at F67840, regardless of taxable income in the year and regardless if AMT applies.   \\(TP divorced, T4 (box 14) =$10,000 T5013 Box107=$ -15,000) \"before all\" hook",
                            "timedOut": false,
                            "duration": 52646,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "driver = new Builder()\n\t.withCapabilities(Capabilities.chrome().setAcceptInsecureCerts(true))\n\t.build();\ndriver.manage().window().setRect({ width: 1366, height: 768 });\nawait login(driver, 'ritakumar@outlook.com', 'rishu12rashi');\nawait selectNewReturn(driver,province);\nawait switchToastOff(driver);\nawait setInputById(driver, 'Firstnames0', 'BOB ');\nawait setInputById(driver, 'Surname0', 'KUM');\nawait selectDateById(driver, 'DOB0', '1961/10/10');\nawait setInputById(driver, 'SIN0', '222222226');    \n        await selectComboById(driver, 'MaritalStatus0', 'Divorced');\n\t    await selectToggleById(driver, 'didyoumove0', '0');\nawait selectToggleById(driver, 'HomeAddressSame0', '1');\nawait nextClick(driver);\nawait setInputById(driver, 'fullAdd0', '880 21 St NE, Salmon Arm, BC V1E 2K9, Canada');\nawait selectToggleById(driver, 'addChange0', '0');\nawait selectToggleById(driver, 'bDisabled0', '0');\nawait selectToggleById(driver, 'quesFP0', '0');\nawait selectToggleById(driver, 'qCitizen0', '0');\nawait nextClick(driver);\n        await selectTab(driver, 'Income');\n        await selectToggleById(driver, 'WorkedInYOR0', '1');\n        await clickDivById(driver, 'T40tp');\nawait selectToggleById(driver, 'InvestmentIncome0tp', '1');\n        await clickDivById(driver, 'T5013a');\n        await nextClick(driver);\n        await setInputById(driver, 'T4B140', '10000');\n        await selectComboById(driver, 'T4_Box100', 'ON');\n        await nextClick(driver);\n        await selectComboById(driver, 'T5013Combo10tp', '107');\n        await setInputById(driver, 'T5013Amt10tp', '-15000');\n        await nextClick(driver);\n        savedForm = await getServerFile(driver);",
                            "err": {},
                            "uuid": "ead0da16-510a-439e-af96-790e53d3ae61",
                            "parentUUID": "a76abd28-7642-48f7-9543-48b3807e824d",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "afterHooks": [
                        {
                            "title": "\"after all\" hook",
                            "fullTitle": "NetIncome_Line122_4--Create a loss relating to F12200. F23600 must be a negative amount (if negative or zero, it will not build in .ws file). Ensure software requires an entry at F67840, regardless of taxable income in the year and regardless if AMT applies.   \\(TP divorced, T4 (box 14) =$10,000 T5013 Box107=$ -15,000) \"after all\" hook",
                            "timedOut": false,
                            "duration": 5432,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "await logoutById(driver);\nawait driver.quit();",
                            "err": {},
                            "uuid": "021dff49-9d1d-46ec-b9e0-d4e4c9e7936c",
                            "parentUUID": "a76abd28-7642-48f7-9543-48b3807e824d",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "tests": [
                        {
                            "title": "Income Feild should be 12600    allow.value ==-15000",
                            "fullTitle": "NetIncome_Line122_4--Create a loss relating to F12200. F23600 must be a negative amount (if negative or zero, it will not build in .ws file). Ensure software requires an entry at F67840, regardless of taxable income in the year and regardless if AMT applies.   \\(TP divorced, T4 (box 14) =$10,000 T5013 Box107=$ -15,000) Income Feild should be 12600    allow.value ==-15000",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let netRentalIncomelossFeild = getFieldId('12600');\n\t\tlet  netRentalIncomeloss = savedForm[ netRentalIncomelossFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+ netRentalIncomeloss;\nassert.equal( netRentalIncomeloss, '-15000', 'Income Feild should be built.');",
                            "err": {},
                            "uuid": "c93480ef-48b4-4792-8241-0ad87be6762e",
                            "parentUUID": "a76abd28-7642-48f7-9543-48b3807e824d",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": "Income Feild should be 15000    allow.value ==-5000",
                            "fullTitle": "NetIncome_Line122_4--Create a loss relating to F12200. F23600 must be a negative amount (if negative or zero, it will not build in .ws file). Ensure software requires an entry at F67840, regardless of taxable income in the year and regardless if AMT applies.   \\(TP divorced, T4 (box 14) =$10,000 T5013 Box107=$ -15,000) Income Feild should be 15000    allow.value ==-5000",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let totalIncomeFeild = getFieldId('15000');\n\t\tlet totalIncome = savedForm[totalIncomeFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+totalIncome;\nassert.equal(totalIncome, '-5000', 'Income Feild should be built.');",
                            "err": {},
                            "uuid": "e647dd1a-e4eb-4a0e-8430-714b0614d069",
                            "parentUUID": "a76abd28-7642-48f7-9543-48b3807e824d",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F67830 should be  allowed with amount    allow.value ==1",
                            "fullTitle": "NetIncome_Line122_4--Create a loss relating to F12200. F23600 must be a negative amount (if negative or zero, it will not build in .ws file). Ensure software requires an entry at F67840, regardless of taxable income in the year and regardless if AMT applies.   \\(TP divorced, T4 (box 14) =$10,000 T5013 Box107=$ -15,000)  F67830 should be  allowed with amount    allow.value ==1",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let amountOflossCreatedOrIncreasedByCCAAndCarryingChargesOnRentalAndleasingPropertyFeild = getFieldId('67830');\n\t\tlet  amountOflossCreatedOrIncreasedByCCAAndCarryingChargesOnRentalAndleasingProperty = savedForm[ amountOflossCreatedOrIncreasedByCCAAndCarryingChargesOnRentalAndleasingPropertyFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+amountOflossCreatedOrIncreasedByCCAAndCarryingChargesOnRentalAndleasingProperty;\nassert.equal(  amountOflossCreatedOrIncreasedByCCAAndCarryingChargesOnRentalAndleasingProperty, '1', ' Feild should be built');",
                            "err": {},
                            "uuid": "4a092e8f-6267-40d8-a285-6dccae7a77a3",
                            "parentUUID": "a76abd28-7642-48f7-9543-48b3807e824d",
                            "isHook": false,
                            "skipped": false
                        }
                    ],
                    "suites": [],
                    "passes": [
                        "c93480ef-48b4-4792-8241-0ad87be6762e",
                        "e647dd1a-e4eb-4a0e-8430-714b0614d069",
                        "4a092e8f-6267-40d8-a285-6dccae7a77a3"
                    ],
                    "failures": [],
                    "pending": [],
                    "skipped": [],
                    "duration": 0,
                    "root": false,
                    "rootEmpty": false,
                    "_timeout": 150000
                },
                {
                    "uuid": "d237e1e0-49d4-4942-8dd0-68bd231d874d",
                    "title": "NetIncome_Line122_5--Create a loss relating to F12200. F23600 must be a negative amount (if negative or zero, it will not build in .ws file). Ensure software requires an entry at F67840, regardless of taxable income in the year and regardless if AMT applies.   \\(TP divorced, T4 (box 14) =$10,000 T5013 Box104=$ -9000)",
                    "fullFile": "E:\\Rita\\Taxtron\\WebTest\\my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_Line122_5.js",
                    "file": "\\my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_Line122_5.js",
                    "beforeHooks": [
                        {
                            "title": "\"before all\" hook",
                            "fullTitle": "NetIncome_Line122_5--Create a loss relating to F12200. F23600 must be a negative amount (if negative or zero, it will not build in .ws file). Ensure software requires an entry at F67840, regardless of taxable income in the year and regardless if AMT applies.   \\(TP divorced, T4 (box 14) =$10,000 T5013 Box104=$ -9000) \"before all\" hook",
                            "timedOut": false,
                            "duration": 52633,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "driver = new Builder()\n\t.withCapabilities(Capabilities.chrome().setAcceptInsecureCerts(true))\n\t.build();\ndriver.manage().window().setRect({ width: 1366, height: 768 });\nawait login(driver, 'ritakumar@outlook.com', 'rishu12rashi');\nawait selectNewReturn(driver,province);\nawait switchToastOff(driver);\nawait setInputById(driver, 'Firstnames0', 'BOB ');\nawait setInputById(driver, 'Surname0', 'KUM');\nawait selectDateById(driver, 'DOB0', '1961/10/10');\nawait setInputById(driver, 'SIN0', '222222226');    \n        await selectComboById(driver, 'MaritalStatus0', 'Divorced');\n\t    await selectToggleById(driver, 'didyoumove0', '0');\nawait selectToggleById(driver, 'HomeAddressSame0', '1');\nawait nextClick(driver);\nawait setInputById(driver, 'fullAdd0', '880 21 St NE, Salmon Arm, BC V1E 2K9, Canada');\nawait selectToggleById(driver, 'addChange0', '0');\nawait selectToggleById(driver, 'bDisabled0', '0');\nawait selectToggleById(driver, 'quesFP0', '0');\nawait selectToggleById(driver, 'qCitizen0', '0');\nawait nextClick(driver);\n        await selectTab(driver, 'Income');\n        await selectToggleById(driver, 'WorkedInYOR0', '1');\n        await clickDivById(driver, 'T40tp');\nawait selectToggleById(driver, 'InvestmentIncome0tp', '1');\n        await clickDivById(driver, 'T5013a');\n        await nextClick(driver);\n        await setInputById(driver, 'T4B140', '10000');\n        await selectComboById(driver, 'T4_Box100', 'ON');\n        await nextClick(driver);\n        await selectComboById(driver, 'T5013Combo10tp', '104');\n        await setInputById(driver, 'T5013Amt10tp', '-9000');\n        await nextClick(driver);\n        savedForm = await getServerFile(driver);",
                            "err": {},
                            "uuid": "86ff7d19-6660-4a78-9518-abbfd43cb708",
                            "parentUUID": "d237e1e0-49d4-4942-8dd0-68bd231d874d",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "afterHooks": [
                        {
                            "title": "\"after all\" hook",
                            "fullTitle": "NetIncome_Line122_5--Create a loss relating to F12200. F23600 must be a negative amount (if negative or zero, it will not build in .ws file). Ensure software requires an entry at F67840, regardless of taxable income in the year and regardless if AMT applies.   \\(TP divorced, T4 (box 14) =$10,000 T5013 Box104=$ -9000) \"after all\" hook",
                            "timedOut": false,
                            "duration": 5658,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "await logoutById(driver);\nawait driver.quit();",
                            "err": {},
                            "uuid": "f9609cc6-f982-4ade-b7e9-98883abcaaae",
                            "parentUUID": "d237e1e0-49d4-4942-8dd0-68bd231d874d",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "tests": [
                        {
                            "title": "Income Feild should be 12200    allow.value ==-9000",
                            "fullTitle": "NetIncome_Line122_5--Create a loss relating to F12200. F23600 must be a negative amount (if negative or zero, it will not build in .ws file). Ensure software requires an entry at F67840, regardless of taxable income in the year and regardless if AMT applies.   \\(TP divorced, T4 (box 14) =$10,000 T5013 Box104=$ -9000) Income Feild should be 12200    allow.value ==-9000",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let netPartnershipIncomeLimitedOrnonActivePartnersOnlyFeild = getFieldId('12200');\n\t\tlet netPartnershipIncomeLimitedOrnonActivePartnersOnly = savedForm[netPartnershipIncomeLimitedOrnonActivePartnersOnlyFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+netPartnershipIncomeLimitedOrnonActivePartnersOnly;\nassert.equal(netPartnershipIncomeLimitedOrnonActivePartnersOnly, '-9000', 'Income Feild should be built.');",
                            "err": {},
                            "uuid": "ec7fe296-b0f5-4276-a9c0-436292a75264",
                            "parentUUID": "d237e1e0-49d4-4942-8dd0-68bd231d874d",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": "Income Feild should be 67840    allow.value ==9000",
                            "fullTitle": "NetIncome_Line122_5--Create a loss relating to F12200. F23600 must be a negative amount (if negative or zero, it will not build in .ws file). Ensure software requires an entry at F67840, regardless of taxable income in the year and regardless if AMT applies.   \\(TP divorced, T4 (box 14) =$10,000 T5013 Box104=$ -9000) Income Feild should be 67840    allow.value ==9000",
                            "timedOut": false,
                            "duration": 1,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let amountOflossCreatedorIncreasedBySpecifiedCarryingChargesaxShelterslimitedPartnershipsAndNonactivePartnersFeild = getFieldId('67840');\n\t\tlet  amountOflossCreatedorIncreasedBySpecifiedCarryingChargesaxShelterslimitedPartnershipsAndNonactivePartners = savedForm[ amountOflossCreatedorIncreasedBySpecifiedCarryingChargesaxShelterslimitedPartnershipsAndNonactivePartnersFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+ amountOflossCreatedorIncreasedBySpecifiedCarryingChargesaxShelterslimitedPartnershipsAndNonactivePartners;\nassert.equal( amountOflossCreatedorIncreasedBySpecifiedCarryingChargesaxShelterslimitedPartnershipsAndNonactivePartners, '9000', 'Income Feild should be built.');",
                            "err": {},
                            "uuid": "3c9f88ae-d8c2-4999-8e8b-35eb87d93eea",
                            "parentUUID": "d237e1e0-49d4-4942-8dd0-68bd231d874d",
                            "isHook": false,
                            "skipped": false
                        }
                    ],
                    "suites": [],
                    "passes": [
                        "ec7fe296-b0f5-4276-a9c0-436292a75264",
                        "3c9f88ae-d8c2-4999-8e8b-35eb87d93eea"
                    ],
                    "failures": [],
                    "pending": [],
                    "skipped": [],
                    "duration": 1,
                    "root": false,
                    "rootEmpty": false,
                    "_timeout": 150000
                },
                {
                    "uuid": "1fd27f62-adc7-4dee-84e6-f91753c49579",
                    "title": "NetIncome_Line122_6--Create a loss relating to F12200. F23600 must be a negative amount (if negative or zero, it will not build in .ws file). Ensure software requires an entry at F67840, regardless of taxable income in the year and regardless if AMT applies.   \\(TP divorced, T776; Income 0, Interest Expenses = $ 15,000)",
                    "fullFile": "E:\\Rita\\Taxtron\\WebTest\\my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_Line122_6.js",
                    "file": "\\my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_Line122_6.js",
                    "beforeHooks": [
                        {
                            "title": "\"before all\" hook",
                            "fullTitle": "NetIncome_Line122_6--Create a loss relating to F12200. F23600 must be a negative amount (if negative or zero, it will not build in .ws file). Ensure software requires an entry at F67840, regardless of taxable income in the year and regardless if AMT applies.   \\(TP divorced, T776; Income 0, Interest Expenses = $ 15,000) \"before all\" hook",
                            "timedOut": false,
                            "duration": 53755,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "driver = new Builder()\n\t.withCapabilities(Capabilities.chrome().setAcceptInsecureCerts(true))\n\t.build();\ndriver.manage().window().setRect({ width: 1366, height: 768 });\nawait login(driver, 'ritakumar@outlook.com', 'rishu12rashi');\nawait selectNewReturn(driver,province);\nawait switchToastOff(driver);\nawait setInputById(driver, 'Firstnames0', 'BOB ');\nawait setInputById(driver, 'Surname0', 'KUM');\nawait selectDateById(driver, 'DOB0', '1961/10/10');\nawait setInputById(driver, 'SIN0', '222222226');    \n        await selectComboById(driver, 'MaritalStatus0', 'Divorced');\n\t    await selectToggleById(driver, 'didyoumove0', '0');\nawait selectToggleById(driver, 'HomeAddressSame0', '1');\nawait nextClick(driver);\nawait setInputById(driver, 'fullAdd0', '880 21 St NE, Salmon Arm, BC V1E 2K9, Canada');\nawait selectToggleById(driver, 'addChange0', '0');\nawait selectToggleById(driver, 'bDisabled0', '0');\nawait selectToggleById(driver, 'quesFP0', '0');\nawait selectToggleById(driver, 'qCitizen0', '0');\nawait nextClick(driver);\n        await selectTab(driver, 'Income');\n        await selectToggleById(driver, 'SelfEmployed0', '1');\n        await nextClick(driver);\n        await selectTab(driver, 'SelfEmployment');\n        await selectToggleById(driver, 'rental0', '1'); \n        await nextClick(driver);\nawait selectSFDDateById(driver, 'FromDate0tp',  Fed.TaxYear,'0','/01/01');\nawait selectSFDDateById(driver, 'ToDate0tp', Fed.TaxYear,'0','/11/10');\n        await setInputById(driver, 'T776fullAdd0', '1125 Colonel By Dr, Ottawa, ON K1S 5B6, Canada');\n        await addressExpandClick(driver, 't76fullAdd');\nawait setInputById(driver, 'T776Number0', '1125');\nawait setInputById(driver, 'Address10', 'Colonel By Dr, Ottawa');\nawait setInputById(driver, 'T776City0', 'etobicoke');\n\t    await setInputById(driver, 'RentalPCode0', 'K1S 5B6');\n        await setInputById(driver, 'Rent10', '0');\n        await setInputById(driver, 'ExpensesA30tp', '6000');\n        await setInputById(driver, 'ExpensesA90tp', '9000');\n        await nextClick(driver);\n        savedForm = await getServerFile(driver);",
                            "err": {},
                            "uuid": "0151d7c4-f6cd-4b69-9de0-689b525d1600",
                            "parentUUID": "1fd27f62-adc7-4dee-84e6-f91753c49579",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "afterHooks": [
                        {
                            "title": "\"after all\" hook",
                            "fullTitle": "NetIncome_Line122_6--Create a loss relating to F12200. F23600 must be a negative amount (if negative or zero, it will not build in .ws file). Ensure software requires an entry at F67840, regardless of taxable income in the year and regardless if AMT applies.   \\(TP divorced, T776; Income 0, Interest Expenses = $ 15,000) \"after all\" hook",
                            "timedOut": false,
                            "duration": 5501,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "await logoutById(driver);\nawait driver.quit();",
                            "err": {},
                            "uuid": "d242f2bc-8032-4e4d-864d-fcf271cbf084",
                            "parentUUID": "1fd27f62-adc7-4dee-84e6-f91753c49579",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "tests": [
                        {
                            "title": "Income Feild should be 12600    allow.value ==-15000",
                            "fullTitle": "NetIncome_Line122_6--Create a loss relating to F12200. F23600 must be a negative amount (if negative or zero, it will not build in .ws file). Ensure software requires an entry at F67840, regardless of taxable income in the year and regardless if AMT applies.   \\(TP divorced, T776; Income 0, Interest Expenses = $ 15,000) Income Feild should be 12600    allow.value ==-15000",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let netRentalIncomelossFeild = getFieldId('12600');\n\t\tlet  netRentalIncomeloss = savedForm[ netRentalIncomelossFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+ netRentalIncomeloss;\nassert.equal( netRentalIncomeloss, '-15000', 'Income Feild should be built.');",
                            "err": {},
                            "uuid": "9100a576-a230-43bf-ad0c-a6af5b492d83",
                            "parentUUID": "1fd27f62-adc7-4dee-84e6-f91753c49579",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F67830 should be  allowed with amount    allow.value ==6000",
                            "fullTitle": "NetIncome_Line122_6--Create a loss relating to F12200. F23600 must be a negative amount (if negative or zero, it will not build in .ws file). Ensure software requires an entry at F67840, regardless of taxable income in the year and regardless if AMT applies.   \\(TP divorced, T776; Income 0, Interest Expenses = $ 15,000)  F67830 should be  allowed with amount    allow.value ==6000",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let amountOflossCreatedOrIncreasedByCCAAndCarryingChargesOnRentalAndleasingPropertyFeild = getFieldId('67830');\n\t\tlet  amountOflossCreatedOrIncreasedByCCAAndCarryingChargesOnRentalAndleasingProperty = savedForm[ amountOflossCreatedOrIncreasedByCCAAndCarryingChargesOnRentalAndleasingPropertyFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+amountOflossCreatedOrIncreasedByCCAAndCarryingChargesOnRentalAndleasingProperty;\nassert.equal(  amountOflossCreatedOrIncreasedByCCAAndCarryingChargesOnRentalAndleasingProperty, '6000', ' Feild should be built');",
                            "err": {},
                            "uuid": "6da8852c-fdd5-41d5-88d5-fba0420de8f8",
                            "parentUUID": "1fd27f62-adc7-4dee-84e6-f91753c49579",
                            "isHook": false,
                            "skipped": false
                        }
                    ],
                    "suites": [],
                    "passes": [
                        "9100a576-a230-43bf-ad0c-a6af5b492d83",
                        "6da8852c-fdd5-41d5-88d5-fba0420de8f8"
                    ],
                    "failures": [],
                    "pending": [],
                    "skipped": [],
                    "duration": 0,
                    "root": false,
                    "rootEmpty": false,
                    "_timeout": 150000
                },
                {
                    "uuid": "5779fd0e-8122-4f8b-a45c-b3dae76e62a4",
                    "title": "NetIncome_Line122_7--Create a loss relating to F12200. F23600 must be a negative amount (if negative or zero, it will not build in .ws file). Ensure software requires an entry at F67840, regardless of taxable income in the year and regardless if AMT applies.   \\(TP divorced, T776; Income 0, Interest Expenses = $ 15,000)",
                    "fullFile": "E:\\Rita\\Taxtron\\WebTest\\my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_Line122_7.js",
                    "file": "\\my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_Line122_7.js",
                    "beforeHooks": [
                        {
                            "title": "\"before all\" hook",
                            "fullTitle": "NetIncome_Line122_7--Create a loss relating to F12200. F23600 must be a negative amount (if negative or zero, it will not build in .ws file). Ensure software requires an entry at F67840, regardless of taxable income in the year and regardless if AMT applies.   \\(TP divorced, T776; Income 0, Interest Expenses = $ 15,000) \"before all\" hook",
                            "timedOut": false,
                            "duration": 59069,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "driver = new Builder()\n\t.withCapabilities(Capabilities.chrome().setAcceptInsecureCerts(true))\n\t.build();\ndriver.manage().window().setRect({ width: 1366, height: 768 });\nawait login(driver, 'ritakumar@outlook.com', 'rishu12rashi');\nawait selectNewReturn(driver,province);\nawait switchToastOff(driver);\nawait setInputById(driver, 'Firstnames0', 'BOB ');\nawait setInputById(driver, 'Surname0', 'KUM');\nawait selectDateById(driver, 'DOB0', '1961/10/10');\nawait setInputById(driver, 'SIN0', '222222226');    \n        await selectComboById(driver, 'MaritalStatus0', 'Divorced');\n\t    await selectToggleById(driver, 'didyoumove0', '0');\nawait selectToggleById(driver, 'HomeAddressSame0', '1');\nawait nextClick(driver);\nawait setInputById(driver, 'fullAdd0', '880 21 St NE, Salmon Arm, BC V1E 2K9, Canada');\nawait selectToggleById(driver, 'addChange0', '0');\nawait selectToggleById(driver, 'bDisabled0', '0');\nawait selectToggleById(driver, 'quesFP0', '0');\nawait selectToggleById(driver, 'qCitizen0', '0');\nawait nextClick(driver);\n        await selectTab(driver, 'Income');\n        await selectToggleById(driver, 'SelfEmployed0', '1');\n        await nextClick(driver);\n        await selectTab(driver, 'SelfEmployment');\n        await selectToggleById(driver, 'rental0', '1'); \n        await nextClick(driver);\nawait selectSFDDateById(driver, 'FromDate0tp',  Fed.TaxYear,'0','/03/01');\nawait selectSFDDateById(driver, 'ToDate0tp', Fed.TaxYear,'0','/12/31');\n        await setInputById(driver, 'T776fullAdd0', '1125 Colonel By Dr, Ottawa, ON K1S 5B6, Canada');\n        await addressExpandClick(driver, 't76fullAdd');\nawait setInputById(driver, 'T776Number0', '1125');\nawait setInputById(driver, 'Address10', 'Colonel By Dr, Ottawa');\nawait setInputById(driver, 'T776City0', 'etobicoke');\n\t    await setInputById(driver, 'RentalPCode0', 'K1S 5B6');\n        await setInputById(driver, 'Rent10', '10000');\nawait setInputById(driver, 'ExpensesA30tp', '6000');\n        await nextClick(driver);\n        await selectToggleById(driver, 'S8Q10tp', '1'); \n        await selectComboById(driver, 'T776_Combo10tp', 'Class-8 Furniture & Non manufacturing equipment');\n        await setInputById(driver, 'Cost10tp', '2000');\n        await nextClick(driver);\n        savedForm = await getServerFile(driver);",
                            "err": {},
                            "uuid": "24b3d8e4-2900-4371-91ca-e72a997afc5f",
                            "parentUUID": "5779fd0e-8122-4f8b-a45c-b3dae76e62a4",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "afterHooks": [],
                    "tests": [
                        {
                            "title": "Income Feild should be 12600    allow.value ==3600",
                            "fullTitle": "NetIncome_Line122_7--Create a loss relating to F12200. F23600 must be a negative amount (if negative or zero, it will not build in .ws file). Ensure software requires an entry at F67840, regardless of taxable income in the year and regardless if AMT applies.   \\(TP divorced, T776; Income 0, Interest Expenses = $ 15,000) Income Feild should be 12600    allow.value ==3600",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let netRentalIncomelossFeild = getFieldId('12600');\n\t\tlet  netRentalIncomeloss = savedForm[ netRentalIncomelossFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+ netRentalIncomeloss;\nassert.equal( netRentalIncomeloss, '3600', 'Income Feild should be built.');",
                            "err": {},
                            "uuid": "bed66e3e-1e03-420e-bf2a-320f558c1fda",
                            "parentUUID": "5779fd0e-8122-4f8b-a45c-b3dae76e62a4",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F67830 should be  allowed with amount    allow.value ==undefined",
                            "fullTitle": "NetIncome_Line122_7--Create a loss relating to F12200. F23600 must be a negative amount (if negative or zero, it will not build in .ws file). Ensure software requires an entry at F67840, regardless of taxable income in the year and regardless if AMT applies.   \\(TP divorced, T776; Income 0, Interest Expenses = $ 15,000)  F67830 should be  allowed with amount    allow.value ==undefined",
                            "timedOut": false,
                            "duration": 1,
                            "state": "failed",
                            "speed": null,
                            "pass": false,
                            "fail": true,
                            "pending": false,
                            "context": null,
                            "code": "let amountOflossCreatedOrIncreasedByCCAAndCarryingChargesOnRentalAndleasingPropertyFeild = getFieldId('67830');\n\t\tlet  amountOflossCreatedOrIncreasedByCCAAndCarryingChargesOnRentalAndleasingProperty = savedForm[ amountOflossCreatedOrIncreasedByCCAAndCarryingChargesOnRentalAndleasingPropertyFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+amountOflossCreatedOrIncreasedByCCAAndCarryingChargesOnRentalAndleasingProperty;\nassert.equal(  amountOflossCreatedOrIncreasedByCCAAndCarryingChargesOnRentalAndleasingProperty, '1', ' Feild should be built');",
                            "err": {
                                "message": "AssertionError:  Feild should be built",
                                "estack": "AssertionError [ERR_ASSERTION]:  Feild should be built\n    at Context.<anonymous> (my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_Line122_7.js:71:16)\n    at processImmediate (internal/timers.js:456:21)",
                                "diff": null
                            },
                            "uuid": "4cd583dd-9e64-490c-b9cf-59cf49e52793",
                            "parentUUID": "5779fd0e-8122-4f8b-a45c-b3dae76e62a4",
                            "isHook": false,
                            "skipped": false
                        }
                    ],
                    "suites": [],
                    "passes": [
                        "bed66e3e-1e03-420e-bf2a-320f558c1fda"
                    ],
                    "failures": [
                        "4cd583dd-9e64-490c-b9cf-59cf49e52793"
                    ],
                    "pending": [],
                    "skipped": [],
                    "duration": 1,
                    "root": false,
                    "rootEmpty": false,
                    "_timeout": 150000
                },
                {
                    "uuid": "cd8b1a3a-9991-4ff5-83e9-8a5247bc79ba",
                    "title": "NetIncome_Line122_8--Create a loss relating to F12200. F23600 must be a negative amount (if negative or zero, it will not build in .ws file). Ensure software requires an entry at F67840, regardless of taxable income in the year and regardless if AMT applies.   \\(TP divorced, T4 (box 14) =$50,000Investmnt Expenses: Do you have resource, exploration and development expenses that qualify for investment tax credit? /under CCEE, Balance at the beginning of the year == $ 30,000)",
                    "fullFile": "E:\\Rita\\Taxtron\\WebTest\\my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_Line122_8.js",
                    "file": "\\my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_Line122_8.js",
                    "beforeHooks": [
                        {
                            "title": "\"before all\" hook",
                            "fullTitle": "NetIncome_Line122_8--Create a loss relating to F12200. F23600 must be a negative amount (if negative or zero, it will not build in .ws file). Ensure software requires an entry at F67840, regardless of taxable income in the year and regardless if AMT applies.   \\(TP divorced, T4 (box 14) =$50,000Investmnt Expenses: Do you have resource, exploration and development expenses that qualify for investment tax credit? /under CCEE, Balance at the beginning of the year == $ 30,000) \"before all\" hook",
                            "timedOut": false,
                            "duration": 68659,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "driver = new Builder()\n\t.withCapabilities(Capabilities.chrome().setAcceptInsecureCerts(true))\n\t.build();\ndriver.manage().window().setRect({ width: 1366, height: 768 });\nawait login(driver, 'ritakumar@outlook.com', 'rishu12rashi');\nawait selectNewReturn(driver,province);\nawait switchToastOff(driver);\nawait setInputById(driver, 'Firstnames0', 'BOB ');\nawait setInputById(driver, 'Surname0', 'KUM');\nawait selectDateById(driver, 'DOB0', '1961/10/10');\nawait setInputById(driver, 'SIN0', '222222226');    \n        await selectComboById(driver, 'MaritalStatus0', 'Divorced');\n\t    await selectToggleById(driver, 'didyoumove0', '0');\nawait selectToggleById(driver, 'HomeAddressSame0', '1');\nawait nextClick(driver);\nawait setInputById(driver, 'fullAdd0', '880 21 St NE, Salmon Arm, BC V1E 2K9, Canada');\nawait selectToggleById(driver, 'addChange0', '0');\nawait selectToggleById(driver, 'bDisabled0', '0');\nawait selectToggleById(driver, 'quesFP0', '0');\nawait selectToggleById(driver, 'qCitizen0', '0');\nawait nextClick(driver);\n        await selectTab(driver, 'Income');\nawait selectTab(driver, 'IncomeProfile');\nawait selectToggleById(driver, 'WorkedInYOR0tp', '1');\n        await clickDivById(driver, 'T40tp');\nawait nextClick(driver);\nawait setInputById(driver, 'T4B140', '50000');\n        await selectComboById(driver, 'T4_Box100tp', 'ON');\n        await nextClick(driver);\n        await nextClick(driver);\n        await selectTab(driver, 'Deduction');\n        await selectTab(driver, 'Investment_Main');\n        await selectToggleById(driver, 'qInvest0tp', '1');\n        await selectToggleById(driver, 'qT12290tp', '1');\n        await nextClick(driver);\n        await nextClick(driver);\n        await setInputById(driver, 'T1229_1070tp', '30000');\n        await nextClick(driver);\n        await nextClick(driver);\n        savedForm = await getServerFile(driver);",
                            "err": {},
                            "uuid": "acd8ff0a-41ce-4d84-a4f8-355bce05c25e",
                            "parentUUID": "cd8b1a3a-9991-4ff5-83e9-8a5247bc79ba",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "afterHooks": [
                        {
                            "title": "\"after all\" hook",
                            "fullTitle": "NetIncome_Line122_8--Create a loss relating to F12200. F23600 must be a negative amount (if negative or zero, it will not build in .ws file). Ensure software requires an entry at F67840, regardless of taxable income in the year and regardless if AMT applies.   \\(TP divorced, T4 (box 14) =$50,000Investmnt Expenses: Do you have resource, exploration and development expenses that qualify for investment tax credit? /under CCEE, Balance at the beginning of the year == $ 30,000) \"after all\" hook",
                            "timedOut": false,
                            "duration": 5790,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "await logoutById(driver);\nawait driver.quit();",
                            "err": {},
                            "uuid": "099ce378-d0b0-475d-9bc1-1ac81bf452f4",
                            "parentUUID": "cd8b1a3a-9991-4ff5-83e9-8a5247bc79ba",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "tests": [
                        {
                            "title": "IncomeFeild should be 10100    allow.value ==50000",
                            "fullTitle": "NetIncome_Line122_8--Create a loss relating to F12200. F23600 must be a negative amount (if negative or zero, it will not build in .ws file). Ensure software requires an entry at F67840, regardless of taxable income in the year and regardless if AMT applies.   \\(TP divorced, T4 (box 14) =$50,000Investmnt Expenses: Do you have resource, exploration and development expenses that qualify for investment tax credit? /under CCEE, Balance at the beginning of the year == $ 30,000) IncomeFeild should be 10100    allow.value ==50000",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let employmentIncomeFromT4SlipsFeild = getFieldId('10100');\n\t\tlet  employmentIncomeFromT4Slips = savedForm[ employmentIncomeFromT4SlipsFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+ employmentIncomeFromT4Slips;\nassert.equal( employmentIncomeFromT4Slips, '50000', 'Income Feild should be built.');",
                            "err": {},
                            "uuid": "8edf57da-7c84-4869-9f94-adc0f3a8fe0a",
                            "parentUUID": "cd8b1a3a-9991-4ff5-83e9-8a5247bc79ba",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": "IncomeFeild should be 22400    allow.value ==30000",
                            "fullTitle": "NetIncome_Line122_8--Create a loss relating to F12200. F23600 must be a negative amount (if negative or zero, it will not build in .ws file). Ensure software requires an entry at F67840, regardless of taxable income in the year and regardless if AMT applies.   \\(TP divorced, T4 (box 14) =$50,000Investmnt Expenses: Do you have resource, exploration and development expenses that qualify for investment tax credit? /under CCEE, Balance at the beginning of the year == $ 30,000) IncomeFeild should be 22400    allow.value ==30000",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let explorationAndDevelopmentExpensesFeild = getFieldId('22400');\n\t\tlet  explorationAndDevelopmentExpenses = savedForm[  explorationAndDevelopmentExpensesFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+  explorationAndDevelopmentExpenses;\nassert.equal(  explorationAndDevelopmentExpenses, '30000', 'Income Feild should be built.');",
                            "err": {},
                            "uuid": "f332adf8-4d46-411d-afe7-47ff5beeb32b",
                            "parentUUID": "cd8b1a3a-9991-4ff5-83e9-8a5247bc79ba",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F67860 should be  allowed with amount    allow.value ==30000",
                            "fullTitle": "NetIncome_Line122_8--Create a loss relating to F12200. F23600 must be a negative amount (if negative or zero, it will not build in .ws file). Ensure software requires an entry at F67840, regardless of taxable income in the year and regardless if AMT applies.   \\(TP divorced, T4 (box 14) =$50,000Investmnt Expenses: Do you have resource, exploration and development expenses that qualify for investment tax credit? /under CCEE, Balance at the beginning of the year == $ 30,000)  F67860 should be  allowed with amount    allow.value ==30000",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let resourcePropertyAndFlowThroughSharesExpendituresDepletionAllowancesAndCarryingchargesFeild = getFieldId('67860');\n\t\tlet  resourcePropertyAndFlowThroughSharesExpendituresDepletionAllowancesAndCarryingcharges = savedForm[  resourcePropertyAndFlowThroughSharesExpendituresDepletionAllowancesAndCarryingchargesFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+ resourcePropertyAndFlowThroughSharesExpendituresDepletionAllowancesAndCarryingcharges;\nassert.equal(  resourcePropertyAndFlowThroughSharesExpendituresDepletionAllowancesAndCarryingcharges, '30000', ' Feild should be built');",
                            "err": {},
                            "uuid": "563252b0-01a3-4fa3-9364-0a00e7d836f5",
                            "parentUUID": "cd8b1a3a-9991-4ff5-83e9-8a5247bc79ba",
                            "isHook": false,
                            "skipped": false
                        }
                    ],
                    "suites": [],
                    "passes": [
                        "8edf57da-7c84-4869-9f94-adc0f3a8fe0a",
                        "f332adf8-4d46-411d-afe7-47ff5beeb32b",
                        "563252b0-01a3-4fa3-9364-0a00e7d836f5"
                    ],
                    "failures": [],
                    "pending": [],
                    "skipped": [],
                    "duration": 0,
                    "root": false,
                    "rootEmpty": false,
                    "_timeout": 150000
                },
                {
                    "uuid": "5d6bdaea-539c-413b-b3b3-c9a9c57d8db6",
                    "title": "NetIncome_Line122_9--Create a loss relating to F12200. F23600 must be a negative amount (if negative or zero, it will not build in .ws file). Ensure software requires an entry at F67840, regardless of taxable income in the year and regardless if AMT applies.   \\(TP divorced, T4 (box 14) =$50,000 Investmnt Expenses: Do you have resource, exploration and development expenses that qualify for investment tax credit? /Carrying charges on resource properties == $ 30,000)",
                    "fullFile": "E:\\Rita\\Taxtron\\WebTest\\my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_Line122_9.js",
                    "file": "\\my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_Line122_9.js",
                    "beforeHooks": [
                        {
                            "title": "\"before all\" hook",
                            "fullTitle": "NetIncome_Line122_9--Create a loss relating to F12200. F23600 must be a negative amount (if negative or zero, it will not build in .ws file). Ensure software requires an entry at F67840, regardless of taxable income in the year and regardless if AMT applies.   \\(TP divorced, T4 (box 14) =$50,000 Investmnt Expenses: Do you have resource, exploration and development expenses that qualify for investment tax credit? /Carrying charges on resource properties == $ 30,000) \"before all\" hook",
                            "timedOut": false,
                            "duration": 69962,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "driver = new Builder()\n\t.withCapabilities(Capabilities.chrome().setAcceptInsecureCerts(true))\n\t.build();\ndriver.manage().window().setRect({ width: 1366, height: 768 });\nawait login(driver, 'ritakumar@outlook.com', 'rishu12rashi');\nawait selectNewReturn(driver,province);\nawait switchToastOff(driver);\nawait setInputById(driver, 'Firstnames0', 'BOB ');\nawait setInputById(driver, 'Surname0', 'KUM');\nawait selectDateById(driver, 'DOB0', '1961/10/10');\nawait setInputById(driver, 'SIN0', '222222226');    \n        await selectComboById(driver, 'MaritalStatus0', 'Divorced');\n\t    await selectToggleById(driver, 'didyoumove0', '0');\nawait selectToggleById(driver, 'HomeAddressSame0', '1');\nawait nextClick(driver);\nawait setInputById(driver, 'fullAdd0', '880 21 St NE, Salmon Arm, BC V1E 2K9, Canada');\nawait selectToggleById(driver, 'addChange0', '0');\nawait selectToggleById(driver, 'bDisabled0', '0');\nawait selectToggleById(driver, 'quesFP0', '0');\nawait selectToggleById(driver, 'qCitizen0', '0');\nawait nextClick(driver);\n        await selectTab(driver, 'Income');\nawait selectTab(driver, 'IncomeProfile');\nawait selectToggleById(driver, 'WorkedInYOR0tp', '1');\n        await clickDivById(driver, 'T40tp');\nawait nextClick(driver);\nawait setInputById(driver, 'T4B140', '50000');\n        await selectComboById(driver, 'T4_Box100tp', 'ON');\n        await nextClick(driver);\n        await nextClick(driver);\n        await selectTab(driver, 'Deduction');\n        await selectTab(driver, 'Investment_Main');\n        await selectToggleById(driver, 'qInvest0tp', '0');\n        await selectToggleById(driver, 'qT12290tp', '1');\n        await nextClick(driver);\nawait setInputById(driver, 'T1229_1490tp', '30000');\nawait setInputById(driver, 'CCResources0tp', '30000');\n        await nextClick(driver);\n        await nextClick(driver);\n        savedForm = await getServerFile(driver);",
                            "err": {},
                            "uuid": "f9fd31d3-6656-4900-bb5a-bf8b4c885fa2",
                            "parentUUID": "5d6bdaea-539c-413b-b3b3-c9a9c57d8db6",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "afterHooks": [
                        {
                            "title": "\"after all\" hook",
                            "fullTitle": "NetIncome_Line122_9--Create a loss relating to F12200. F23600 must be a negative amount (if negative or zero, it will not build in .ws file). Ensure software requires an entry at F67840, regardless of taxable income in the year and regardless if AMT applies.   \\(TP divorced, T4 (box 14) =$50,000 Investmnt Expenses: Do you have resource, exploration and development expenses that qualify for investment tax credit? /Carrying charges on resource properties == $ 30,000) \"after all\" hook",
                            "timedOut": false,
                            "duration": 5357,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "await logoutById(driver);\nawait driver.quit();",
                            "err": {},
                            "uuid": "af8654de-d440-43cf-a944-6c06a81e142c",
                            "parentUUID": "5d6bdaea-539c-413b-b3b3-c9a9c57d8db6",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "tests": [
                        {
                            "title": "IncomeFeild should be 10100    allow.value ==50000",
                            "fullTitle": "NetIncome_Line122_9--Create a loss relating to F12200. F23600 must be a negative amount (if negative or zero, it will not build in .ws file). Ensure software requires an entry at F67840, regardless of taxable income in the year and regardless if AMT applies.   \\(TP divorced, T4 (box 14) =$50,000 Investmnt Expenses: Do you have resource, exploration and development expenses that qualify for investment tax credit? /Carrying charges on resource properties == $ 30,000) IncomeFeild should be 10100    allow.value ==50000",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let employmentIncomeFromT4SlipsFeild = getFieldId('10100');\n\t\tlet  employmentIncomeFromT4Slips = savedForm[ employmentIncomeFromT4SlipsFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+ employmentIncomeFromT4Slips;\nassert.equal( employmentIncomeFromT4Slips, '50000', 'Income Feild should be built.');",
                            "err": {},
                            "uuid": "8074d4af-da8d-4a4e-a1aa-5546badd753c",
                            "parentUUID": "5d6bdaea-539c-413b-b3b3-c9a9c57d8db6",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": "IncomeFeild should be 22400    allow.value ==30000",
                            "fullTitle": "NetIncome_Line122_9--Create a loss relating to F12200. F23600 must be a negative amount (if negative or zero, it will not build in .ws file). Ensure software requires an entry at F67840, regardless of taxable income in the year and regardless if AMT applies.   \\(TP divorced, T4 (box 14) =$50,000 Investmnt Expenses: Do you have resource, exploration and development expenses that qualify for investment tax credit? /Carrying charges on resource properties == $ 30,000) IncomeFeild should be 22400    allow.value ==30000",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let explorationAndDevelopmentExpensesFeild = getFieldId('22400');\n\t\tlet  explorationAndDevelopmentExpenses = savedForm[  explorationAndDevelopmentExpensesFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+  explorationAndDevelopmentExpenses;\nassert.equal(  explorationAndDevelopmentExpenses, '30000', 'Income Feild should be built.');",
                            "err": {},
                            "uuid": "f7827bf9-ad9a-4f21-bd9b-3f534a708fbd",
                            "parentUUID": "5d6bdaea-539c-413b-b3b3-c9a9c57d8db6",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F67860 should be  allowed with amount    allow.value ==60000",
                            "fullTitle": "NetIncome_Line122_9--Create a loss relating to F12200. F23600 must be a negative amount (if negative or zero, it will not build in .ws file). Ensure software requires an entry at F67840, regardless of taxable income in the year and regardless if AMT applies.   \\(TP divorced, T4 (box 14) =$50,000 Investmnt Expenses: Do you have resource, exploration and development expenses that qualify for investment tax credit? /Carrying charges on resource properties == $ 30,000)  F67860 should be  allowed with amount    allow.value ==60000",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let resourcePropertyAndFlowThroughSharesExpendituresDepletionAllowancesAndCarryingchargesFeild = getFieldId('67860');\n\t\tlet  resourcePropertyAndFlowThroughSharesExpendituresDepletionAllowancesAndCarryingcharges = savedForm[  resourcePropertyAndFlowThroughSharesExpendituresDepletionAllowancesAndCarryingchargesFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+ resourcePropertyAndFlowThroughSharesExpendituresDepletionAllowancesAndCarryingcharges;\nassert.equal(  resourcePropertyAndFlowThroughSharesExpendituresDepletionAllowancesAndCarryingcharges, '60000', ' Feild should be built');",
                            "err": {},
                            "uuid": "42c1c648-56fe-457d-b14a-9477c064ba04",
                            "parentUUID": "5d6bdaea-539c-413b-b3b3-c9a9c57d8db6",
                            "isHook": false,
                            "skipped": false
                        }
                    ],
                    "suites": [],
                    "passes": [
                        "8074d4af-da8d-4a4e-a1aa-5546badd753c",
                        "f7827bf9-ad9a-4f21-bd9b-3f534a708fbd",
                        "42c1c648-56fe-457d-b14a-9477c064ba04"
                    ],
                    "failures": [],
                    "pending": [],
                    "skipped": [],
                    "duration": 0,
                    "root": false,
                    "rootEmpty": false,
                    "_timeout": 150000
                },
                {
                    "uuid": "0ec9cbb4-64df-4485-9303-42408e19fee3",
                    "title": "NetIncome_Line206_1---Input F20700 (Registered pension plan deduction) without either F20600 (pension adjustment) or F9922 (no pension adjustment indicator).  Software must not allow.  Also try building F20700 from a slip other than a T4.  //(TP single, T4 Box 14 =$60,000, Box 20: $ 5,000)",
                    "fullFile": "E:\\Rita\\Taxtron\\WebTest\\my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_Line206_1.js",
                    "file": "\\my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_Line206_1.js",
                    "beforeHooks": [
                        {
                            "title": "\"before all\" hook",
                            "fullTitle": "NetIncome_Line206_1---Input F20700 (Registered pension plan deduction) without either F20600 (pension adjustment) or F9922 (no pension adjustment indicator).  Software must not allow.  Also try building F20700 from a slip other than a T4.  //(TP single, T4 Box 14 =$60,000, Box 20: $ 5,000) \"before all\" hook",
                            "timedOut": false,
                            "duration": 48818,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "driver = new Builder()\n\t.withCapabilities(Capabilities.chrome().setAcceptInsecureCerts(true))\n\t.build();\ndriver.manage().window().setRect({ width: 1366, height: 768 });\nawait login(driver, 'ritakumar@outlook.com', 'rishu12rashi');\nawait selectNewReturn(driver,province);\nawait switchToastOff(driver);\nawait setInputById(driver, 'Firstnames0', 'BOB ');\nawait setInputById(driver, 'Surname0', 'KUM');\nawait selectDateById(driver, 'DOB0', '1961/10/10');\nawait setInputById(driver, 'SIN0', '222222226');    \n        await selectComboById(driver, 'MaritalStatus0', 'Single');\n\t    await selectToggleById(driver, 'didyoumove0', '0');\nawait selectToggleById(driver, 'HomeAddressSame0', '1');\nawait selectToggleById(driver, 'ResidencyCode0', '1');\nawait selectAgeDateById(driver, 'ImmigrationDate0tp',Fed.TaxYear,'0', '/06/30');\nawait setInputById(driver, 'IMMI_CDNIncomeIncluded0', '0');\nawait setInputById(driver, 'IMMI_TotalIncome0', '0');\nawait nextClick(driver);\nawait setInputById(driver, 'fullAdd0', '880 21 St NE, Salmon Arm, BC V1E 2K9, Canada');\nawait selectToggleById(driver, 'addChange0', '0');\nawait selectToggleById(driver, 'bDisabled0', '0');\nawait selectToggleById(driver, 'quesFP0', '0');\nawait selectToggleById(driver, 'qCitizen0', '0');\nawait nextClick(driver);\n        await selectTab(driver, 'Income');\nawait selectToggleById(driver, 'WorkedInYOR0', '1');\n        await clickDivById(driver, 'T40tp');\n        await nextClick(driver);\n        await setInputById(driver, 'T4B140', '60000');\n        await setInputById(driver, 'T4B200', '5000');\nawait selectComboById(driver, 'T4_Box100', 'MB');\n\t    savedForm = await getServerFile(driver);",
                            "err": {},
                            "uuid": "51253a27-3106-4e86-aa7d-791f131b4e61",
                            "parentUUID": "0ec9cbb4-64df-4485-9303-42408e19fee3",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "afterHooks": [
                        {
                            "title": "\"after all\" hook",
                            "fullTitle": "NetIncome_Line206_1---Input F20700 (Registered pension plan deduction) without either F20600 (pension adjustment) or F9922 (no pension adjustment indicator).  Software must not allow.  Also try building F20700 from a slip other than a T4.  //(TP single, T4 Box 14 =$60,000, Box 20: $ 5,000) \"after all\" hook",
                            "timedOut": false,
                            "duration": 1381,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "await logoutById(driver);\nawait driver.quit();",
                            "err": {},
                            "uuid": "a4c388e9-3dd3-4dd2-9c0a-8e1c0fd2ed11",
                            "parentUUID": "0ec9cbb4-64df-4485-9303-42408e19fee3",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "tests": [
                        {
                            "title": "error should be display",
                            "fullTitle": "NetIncome_Line206_1---Input F20700 (Registered pension plan deduction) without either F20600 (pension adjustment) or F9922 (no pension adjustment indicator).  Software must not allow.  Also try building F20700 from a slip other than a T4.  //(TP single, T4 Box 14 =$60,000, Box 20: $ 5,000) error should be display",
                            "timedOut": false,
                            "duration": 17,
                            "state": "failed",
                            "speed": null,
                            "pass": false,
                            "fail": true,
                            "pending": false,
                            "context": null,
                            "code": "let errDisplayed = await driver.findElement(By.css('#box520')).isDisplayed();\nassert.equal(errDisplayed, true, 'RRP amount entered and no pension adjustment amount is entered.');",
                            "err": {
                                "message": "NoSuchElementError: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"#box520\"}\n  (Session info: chrome=86.0.4240.198)\n  (Driver info: chromedriver=2.40.565498 (ea082db3280dd6843ebfb08a625e3eb905c4f5ab),platform=Windows NT 10.0.19041 x86_64)",
                                "estack": "NoSuchElementError: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"#box520\"}\n  (Session info: chrome=86.0.4240.198)\n  (Driver info: chromedriver=2.40.565498 (ea082db3280dd6843ebfb08a625e3eb905c4f5ab),platform=Windows NT 10.0.19041 x86_64)\n    at Object.checkLegacyResponse (node_modules\\selenium-webdriver\\lib\\error.js:585:15)\n    at parseHttpResponse (node_modules\\selenium-webdriver\\lib\\http.js:556:13)\n    at Executor.execute (node_modules\\selenium-webdriver\\lib\\http.js:491:26)\n    at runMicrotasks (<anonymous>)\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)\n    at async thenableWebDriverProxy.execute (node_modules\\selenium-webdriver\\lib\\webdriver.js:700:17)\n    at async toWireValue (node_modules\\selenium-webdriver\\lib\\webdriver.js:139:15)\n    at async E:\\Rita\\Taxtron\\WebTest\\node_modules\\selenium-webdriver\\lib\\webdriver.js:190:16\n    at async forEachKey (node_modules\\selenium-webdriver\\lib\\webdriver.js:184:9)\n    at async convertKeys (node_modules\\selenium-webdriver\\lib\\webdriver.js:189:3)\n    at async thenableWebDriverProxy.execute (node_modules\\selenium-webdriver\\lib\\webdriver.js:698:22)\n    at async Context.<anonymous> (my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_Line206_1.js:51:22)",
                                "diff": null
                            },
                            "uuid": "91c29e5f-6d7d-45dd-9f94-2ac48054f34c",
                            "parentUUID": "0ec9cbb4-64df-4485-9303-42408e19fee3",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": "IncomeFeild should be 20700    allow.value ==5000",
                            "fullTitle": "NetIncome_Line206_1---Input F20700 (Registered pension plan deduction) without either F20600 (pension adjustment) or F9922 (no pension adjustment indicator).  Software must not allow.  Also try building F20700 from a slip other than a T4.  //(TP single, T4 Box 14 =$60,000, Box 20: $ 5,000) IncomeFeild should be 20700    allow.value ==5000",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let IncomeFeild = getFieldId('20700');\n\t\tlet Income = savedForm[IncomeFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+Income;\nassert.equal(Income, '5000', 'IncomeFeild should be built.');",
                            "err": {},
                            "uuid": "48b88d1b-5f46-4669-b8ce-7c18c11f3727",
                            "parentUUID": "0ec9cbb4-64df-4485-9303-42408e19fee3",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": "IncomeFeild should be 9922    allow.value ==1",
                            "fullTitle": "NetIncome_Line206_1---Input F20700 (Registered pension plan deduction) without either F20600 (pension adjustment) or F9922 (no pension adjustment indicator).  Software must not allow.  Also try building F20700 from a slip other than a T4.  //(TP single, T4 Box 14 =$60,000, Box 20: $ 5,000) IncomeFeild should be 9922    allow.value ==1",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let IncomeFeild = getFieldId('9922');\n\t\tlet Income = savedForm[IncomeFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+Income;\nassert.equal(Income, '1', 'IncomeFeild should be built.');",
                            "err": {},
                            "uuid": "312676ba-47b3-4496-af51-1fb8707dc8f4",
                            "parentUUID": "0ec9cbb4-64df-4485-9303-42408e19fee3",
                            "isHook": false,
                            "skipped": false
                        }
                    ],
                    "suites": [],
                    "passes": [
                        "48b88d1b-5f46-4669-b8ce-7c18c11f3727",
                        "312676ba-47b3-4496-af51-1fb8707dc8f4"
                    ],
                    "failures": [
                        "91c29e5f-6d7d-45dd-9f94-2ac48054f34c"
                    ],
                    "pending": [],
                    "skipped": [],
                    "duration": 17,
                    "root": false,
                    "rootEmpty": false,
                    "_timeout": 150000
                },
                {
                    "uuid": "abdf8c98-e5e6-41fb-9243-935f2a14c955",
                    "title": "NetIncome_Line206_2---Input F20700 (Registered pension plan deduction) without either F20600 (pension adjustment) or F9922 (no pension adjustment indicator).  Software must not allow.  Also try building F20700 from a slip other than a T4.  //(TP single, T4 Box 14 =$60,000, Box 20: $ 5,000; Box 52: $ 1,000)",
                    "fullFile": "E:\\Rita\\Taxtron\\WebTest\\my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_Line206_2.js",
                    "file": "\\my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_Line206_2.js",
                    "beforeHooks": [
                        {
                            "title": "\"before all\" hook",
                            "fullTitle": "NetIncome_Line206_2---Input F20700 (Registered pension plan deduction) without either F20600 (pension adjustment) or F9922 (no pension adjustment indicator).  Software must not allow.  Also try building F20700 from a slip other than a T4.  //(TP single, T4 Box 14 =$60,000, Box 20: $ 5,000; Box 52: $ 1,000) \"before all\" hook",
                            "timedOut": false,
                            "duration": 47340,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "driver = new Builder()\n\t.withCapabilities(Capabilities.chrome().setAcceptInsecureCerts(true))\n\t.build();\ndriver.manage().window().setRect({ width: 1366, height: 768 });\nawait login(driver, 'ritakumar@outlook.com', 'rishu12rashi');\nawait selectNewReturn(driver,province);\nawait switchToastOff(driver);\nawait setInputById(driver, 'Firstnames0', 'BOB ');\nawait setInputById(driver, 'Surname0', 'KUM');\nawait selectDateById(driver, 'DOB0', '1961/10/10');\nawait setInputById(driver, 'SIN0', '222222226');    \n        await selectComboById(driver, 'MaritalStatus0', 'Single');\n\t    await selectToggleById(driver, 'didyoumove0', '0');\nawait selectToggleById(driver, 'HomeAddressSame0', '1');\nawait nextClick(driver);\nawait setInputById(driver, 'fullAdd0', '880 21 St NE, Salmon Arm, BC V1E 2K9, Canada');\nawait selectToggleById(driver, 'addChange0', '0');\nawait selectToggleById(driver, 'bDisabled0', '0');\nawait selectToggleById(driver, 'quesFP0', '0');\nawait selectToggleById(driver, 'qCitizen0', '0');\nawait nextClick(driver);\n        await selectTab(driver, 'Income');\nawait selectToggleById(driver, 'WorkedInYOR0', '1');\n        await clickDivById(driver, 'T40tp');\n        await nextClick(driver);\n        await setInputById(driver, 'T4B140', '60000');\n        await setInputById(driver, 'T4B200', '5000');\n        await setInputById(driver, 'T4B520', '1000');\nawait selectComboById(driver, 'T4_Box100', 'MB');\n\t    savedForm = await getServerFile(driver);",
                            "err": {},
                            "uuid": "665a77a4-3372-47f4-be6c-466347d3a52d",
                            "parentUUID": "abdf8c98-e5e6-41fb-9243-935f2a14c955",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "afterHooks": [
                        {
                            "title": "\"after all\" hook",
                            "fullTitle": "NetIncome_Line206_2---Input F20700 (Registered pension plan deduction) without either F20600 (pension adjustment) or F9922 (no pension adjustment indicator).  Software must not allow.  Also try building F20700 from a slip other than a T4.  //(TP single, T4 Box 14 =$60,000, Box 20: $ 5,000; Box 52: $ 1,000) \"after all\" hook",
                            "timedOut": false,
                            "duration": 5570,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "await logoutById(driver);\nawait driver.quit();",
                            "err": {},
                            "uuid": "05cd0818-8662-4476-aadc-1a737b97b909",
                            "parentUUID": "abdf8c98-e5e6-41fb-9243-935f2a14c955",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "tests": [
                        {
                            "title": "IncomeFeild should be 20700    allow.value ==5000",
                            "fullTitle": "NetIncome_Line206_2---Input F20700 (Registered pension plan deduction) without either F20600 (pension adjustment) or F9922 (no pension adjustment indicator).  Software must not allow.  Also try building F20700 from a slip other than a T4.  //(TP single, T4 Box 14 =$60,000, Box 20: $ 5,000; Box 52: $ 1,000) IncomeFeild should be 20700    allow.value ==5000",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let IncomeFeild = getFieldId('20700');\n\t\tlet Income = savedForm[IncomeFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+Income;\nassert.equal(Income, '5000', 'Income Feild should be built.');",
                            "err": {},
                            "uuid": "3059d018-3aab-48a1-8a1d-da1261b16267",
                            "parentUUID": "abdf8c98-e5e6-41fb-9243-935f2a14c955",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": "IncomeFeild should be 20600    allow.value ==1000",
                            "fullTitle": "NetIncome_Line206_2---Input F20700 (Registered pension plan deduction) without either F20600 (pension adjustment) or F9922 (no pension adjustment indicator).  Software must not allow.  Also try building F20700 from a slip other than a T4.  //(TP single, T4 Box 14 =$60,000, Box 20: $ 5,000; Box 52: $ 1,000) IncomeFeild should be 20600    allow.value ==1000",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let IncomeFeild = getFieldId('20600');\n\t\tlet Income = savedForm[IncomeFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+Income;\nassert.equal(Income, '1000', 'Income Feild should be built.');",
                            "err": {},
                            "uuid": "d619c76b-cd3d-4a4f-830e-c7cd2fdaf604",
                            "parentUUID": "abdf8c98-e5e6-41fb-9243-935f2a14c955",
                            "isHook": false,
                            "skipped": false
                        }
                    ],
                    "suites": [],
                    "passes": [
                        "3059d018-3aab-48a1-8a1d-da1261b16267",
                        "d619c76b-cd3d-4a4f-830e-c7cd2fdaf604"
                    ],
                    "failures": [],
                    "pending": [],
                    "skipped": [],
                    "duration": 0,
                    "root": false,
                    "rootEmpty": false,
                    "_timeout": 150000
                },
                {
                    "uuid": "461962ce-2016-4c32-a704-ab7ab7ed74ed",
                    "title": "NetIncome_Line206_3---Input F20700 (Registered pension plan deduction) without either F20600 (pension adjustment) or F9922 (no pension adjustment indicator).  Software must not allow.  Also try building F20700 from a slip other than a T4.  //(TP single,  T4A  Box 32=$5,000 )",
                    "fullFile": "E:\\Rita\\Taxtron\\WebTest\\my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_Line206_3.js",
                    "file": "\\my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_Line206_3.js",
                    "beforeHooks": [
                        {
                            "title": "\"before all\" hook",
                            "fullTitle": "NetIncome_Line206_3---Input F20700 (Registered pension plan deduction) without either F20600 (pension adjustment) or F9922 (no pension adjustment indicator).  Software must not allow.  Also try building F20700 from a slip other than a T4.  //(TP single,  T4A  Box 32=$5,000 ) \"before all\" hook",
                            "timedOut": false,
                            "duration": 45354,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "driver = new Builder()\n\t.withCapabilities(Capabilities.chrome().setAcceptInsecureCerts(true))\n\t.build();\ndriver.manage().window().setRect({ width: 1366, height: 768 });\nawait login(driver, 'ritakumar@outlook.com', 'rishu12rashi');\nawait selectNewReturn(driver,province);\nawait switchToastOff(driver);\nawait setInputById(driver, 'Firstnames0', 'BOB ');\nawait setInputById(driver, 'Surname0', 'KUM');\nawait selectDateById(driver, 'DOB0', '1961/10/10');\nawait setInputById(driver, 'SIN0', '222222226');    \n        await selectComboById(driver, 'MaritalStatus0', 'Single');\n\t    await selectToggleById(driver, 'didyoumove0', '0');\nawait selectToggleById(driver, 'HomeAddressSame0', '1');\nawait nextClick(driver);\nawait setInputById(driver, 'fullAdd0', '880 21 St NE, Salmon Arm, BC V1E 2K9, Canada');\nawait selectToggleById(driver, 'addChange0', '0');\nawait selectToggleById(driver, 'bDisabled0', '0');\nawait selectToggleById(driver, 'quesFP0', '0');\nawait selectToggleById(driver, 'qCitizen0', '0');\nawait nextClick(driver);\n        await selectTab(driver, 'Income');\nawait selectToggleById(driver, 'WorkedInYOR0', '1');\n        await clickDivById(driver, 'T4Aa');\n        await nextClick(driver);\n       // await selectComboById(driver, 'T4AOtherCombo10tp', '32');\nawait selectComboById(driver, 'T4AOtherCombo10tp','32',false);\n\t    await driver.findElement(By.css('#T4AOtherCombo10tp > div > ul > li[title=\"32\"]')).click();\n        await setInputById(driver, 'T4AOtherBox10tp', '5000');\n\t    savedForm = await getServerFile(driver);",
                            "err": {},
                            "uuid": "0cb0f81f-d076-4672-b61b-92cdd1efd53e",
                            "parentUUID": "461962ce-2016-4c32-a704-ab7ab7ed74ed",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "afterHooks": [
                        {
                            "title": "\"after all\" hook",
                            "fullTitle": "NetIncome_Line206_3---Input F20700 (Registered pension plan deduction) without either F20600 (pension adjustment) or F9922 (no pension adjustment indicator).  Software must not allow.  Also try building F20700 from a slip other than a T4.  //(TP single,  T4A  Box 32=$5,000 ) \"after all\" hook",
                            "timedOut": false,
                            "duration": 6276,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "await logoutById(driver);\nawait driver.quit();",
                            "err": {},
                            "uuid": "53333707-9e07-4964-8def-e20627084c01",
                            "parentUUID": "461962ce-2016-4c32-a704-ab7ab7ed74ed",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "tests": [
                        {
                            "title": "error should be display",
                            "fullTitle": "NetIncome_Line206_3---Input F20700 (Registered pension plan deduction) without either F20600 (pension adjustment) or F9922 (no pension adjustment indicator).  Software must not allow.  Also try building F20700 from a slip other than a T4.  //(TP single,  T4A  Box 32=$5,000 ) error should be display",
                            "timedOut": false,
                            "duration": 71,
                            "state": "passed",
                            "speed": "medium",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let errDisplayed = await driver.findElement(By.css('#box520')).isDisplayed();\nassert.equal(errDisplayed, true, 'RRP amount entered and no pension adjustment amount is entered.');",
                            "err": {},
                            "uuid": "4faddcd9-46b5-4d85-9a04-a42f9b3ce9e1",
                            "parentUUID": "461962ce-2016-4c32-a704-ab7ab7ed74ed",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": "IncomeFeild should be 20700    allow.value ==undefined",
                            "fullTitle": "NetIncome_Line206_3---Input F20700 (Registered pension plan deduction) without either F20600 (pension adjustment) or F9922 (no pension adjustment indicator).  Software must not allow.  Also try building F20700 from a slip other than a T4.  //(TP single,  T4A  Box 32=$5,000 ) IncomeFeild should be 20700    allow.value ==undefined",
                            "timedOut": false,
                            "duration": 1,
                            "state": "failed",
                            "speed": null,
                            "pass": false,
                            "fail": true,
                            "pending": false,
                            "context": null,
                            "code": "let IncomeFeild = getFieldId('20700');\n\t\tlet Income = savedForm[IncomeFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+Income;\nassert.equal(Income, '5000', 'IncomeFeild should be built.');",
                            "err": {
                                "message": "AssertionError: IncomeFeild should be built.",
                                "estack": "AssertionError [ERR_ASSERTION]: IncomeFeild should be built.\n    at Context.<anonymous> (my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_Line206_3.js:55:16)\n    at processImmediate (internal/timers.js:456:21)",
                                "diff": null
                            },
                            "uuid": "ce279b84-60a3-4d9f-976b-af9ff94ac7cf",
                            "parentUUID": "461962ce-2016-4c32-a704-ab7ab7ed74ed",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": "IncomeFeild should be 9922    allow.value ==undefined",
                            "fullTitle": "NetIncome_Line206_3---Input F20700 (Registered pension plan deduction) without either F20600 (pension adjustment) or F9922 (no pension adjustment indicator).  Software must not allow.  Also try building F20700 from a slip other than a T4.  //(TP single,  T4A  Box 32=$5,000 ) IncomeFeild should be 9922    allow.value ==undefined",
                            "timedOut": false,
                            "duration": 1,
                            "state": "failed",
                            "speed": null,
                            "pass": false,
                            "fail": true,
                            "pending": false,
                            "context": null,
                            "code": "let IncomeFeild = getFieldId('9922');\n\t\tlet Income = savedForm[IncomeFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+Income;\nassert.equal(Income, '1', 'IncomeFeild should be built.');",
                            "err": {
                                "message": "AssertionError: IncomeFeild should be built.",
                                "estack": "AssertionError [ERR_ASSERTION]: IncomeFeild should be built.\n    at Context.<anonymous> (my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_Line206_3.js:61:16)\n    at processImmediate (internal/timers.js:456:21)",
                                "diff": null
                            },
                            "uuid": "07419ca9-a7dd-41c8-8648-aaa66530f9df",
                            "parentUUID": "461962ce-2016-4c32-a704-ab7ab7ed74ed",
                            "isHook": false,
                            "skipped": false
                        }
                    ],
                    "suites": [],
                    "passes": [
                        "4faddcd9-46b5-4d85-9a04-a42f9b3ce9e1"
                    ],
                    "failures": [
                        "ce279b84-60a3-4d9f-976b-af9ff94ac7cf",
                        "07419ca9-a7dd-41c8-8648-aaa66530f9df"
                    ],
                    "pending": [],
                    "skipped": [],
                    "duration": 73,
                    "root": false,
                    "rootEmpty": false,
                    "_timeout": 150000
                },
                {
                    "uuid": "75f2beb8-18f2-4aa6-acf4-d33a403adee1",
                    "title": "NetIncome_Line206_4---Input F20700 (Registered pension plan deduction) without either F20600 (pension adjustment) or F9922 (no pension adjustment indicator).  Software must not allow.  Also try building F20700 from a slip other than a T4.  //(TP single,  T4A  Box 32=$5,000; Box 34: $ 1,000)",
                    "fullFile": "E:\\Rita\\Taxtron\\WebTest\\my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_Line206_4.js",
                    "file": "\\my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_Line206_4.js",
                    "beforeHooks": [
                        {
                            "title": "\"before all\" hook",
                            "fullTitle": "NetIncome_Line206_4---Input F20700 (Registered pension plan deduction) without either F20600 (pension adjustment) or F9922 (no pension adjustment indicator).  Software must not allow.  Also try building F20700 from a slip other than a T4.  //(TP single,  T4A  Box 32=$5,000; Box 34: $ 1,000) \"before all\" hook",
                            "timedOut": false,
                            "duration": 47697,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "driver = new Builder()\n\t.withCapabilities(Capabilities.chrome().setAcceptInsecureCerts(true))\n\t.build();\ndriver.manage().window().setRect({ width: 1366, height: 768 });\nawait login(driver, 'ritakumar@outlook.com', 'rishu12rashi');\nawait selectNewReturn(driver,province);\nawait switchToastOff(driver);\nawait setInputById(driver, 'Firstnames0', 'BOB ');\nawait setInputById(driver, 'Surname0', 'KUM');\nawait selectDateById(driver, 'DOB0', '1961/10/10');\nawait setInputById(driver, 'SIN0', '222222226');    \n        await selectComboById(driver, 'MaritalStatus0', 'Single');\n\t    await selectToggleById(driver, 'didyoumove0', '0');\nawait selectToggleById(driver, 'HomeAddressSame0', '1');\nawait nextClick(driver);\nawait setInputById(driver, 'fullAdd0', '880 21 St NE, Salmon Arm, BC V1E 2K9, Canada');\nawait selectToggleById(driver, 'addChange0', '0');\nawait selectToggleById(driver, 'bDisabled0', '0');\nawait selectToggleById(driver, 'quesFP0', '0');\nawait selectToggleById(driver, 'qCitizen0', '0');\nawait nextClick(driver);\n        await selectTab(driver, 'Income');\nawait selectToggleById(driver, 'WorkedInYOR0', '1');\n        await clickDivById(driver, 'T4Aa');\n        await nextClick(driver);\nawait selectComboById(driver, 'T4AOtherCombo10tp','32',false);\n\t    await driver.findElement(By.css('#T4AOtherCombo10tp > div > ul > li[title=\"32\"]')).click();\n        await setInputById(driver, 'T4AOtherBox10tp', '5000');\n        await selectComboById(driver, 'T4AOtherCombo11tp','34',false);\n\t    await driver.findElement(By.css('#T4AOtherCombo11tp > div > ul > li[title=\"34\"]')).click();\n        await setInputById(driver, 'T4AOtherBox11tp', '1000');\n        savedForm = await getServerFile(driver);",
                            "err": {},
                            "uuid": "0a51a2d9-202c-4b7f-9f33-1e9d39a26dd8",
                            "parentUUID": "75f2beb8-18f2-4aa6-acf4-d33a403adee1",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "afterHooks": [
                        {
                            "title": "\"after all\" hook",
                            "fullTitle": "NetIncome_Line206_4---Input F20700 (Registered pension plan deduction) without either F20600 (pension adjustment) or F9922 (no pension adjustment indicator).  Software must not allow.  Also try building F20700 from a slip other than a T4.  //(TP single,  T4A  Box 32=$5,000; Box 34: $ 1,000) \"after all\" hook",
                            "timedOut": false,
                            "duration": 1429,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "await logoutById(driver);\nawait driver.quit();",
                            "err": {},
                            "uuid": "cc784b5a-505f-4a53-b62e-72954c65e0b8",
                            "parentUUID": "75f2beb8-18f2-4aa6-acf4-d33a403adee1",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "tests": [
                        {
                            "title": "IncomeFeild should be 20700    allow.value ==5000",
                            "fullTitle": "NetIncome_Line206_4---Input F20700 (Registered pension plan deduction) without either F20600 (pension adjustment) or F9922 (no pension adjustment indicator).  Software must not allow.  Also try building F20700 from a slip other than a T4.  //(TP single,  T4A  Box 32=$5,000; Box 34: $ 1,000) IncomeFeild should be 20700    allow.value ==5000",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let IncomeFeild = getFieldId('20700');\n\t\tlet Income = savedForm[IncomeFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+Income;\nassert.equal(Income, '5000', 'IncomeFeild should be built.');",
                            "err": {},
                            "uuid": "ad9a321a-79d5-4a4b-8a64-7593cb621f4e",
                            "parentUUID": "75f2beb8-18f2-4aa6-acf4-d33a403adee1",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": "Income Feild should be 20600    allow.value ==undefined",
                            "fullTitle": "NetIncome_Line206_4---Input F20700 (Registered pension plan deduction) without either F20600 (pension adjustment) or F9922 (no pension adjustment indicator).  Software must not allow.  Also try building F20700 from a slip other than a T4.  //(TP single,  T4A  Box 32=$5,000; Box 34: $ 1,000) Income Feild should be 20600    allow.value ==undefined",
                            "timedOut": false,
                            "duration": 1,
                            "state": "failed",
                            "speed": null,
                            "pass": false,
                            "fail": true,
                            "pending": false,
                            "context": null,
                            "code": "let IncomeFeild = getFieldId('20600');\n\t\tlet Income = savedForm[IncomeFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+Income;\nassert.equal(Income, '1000', 'Income Feild should be built.');",
                            "err": {
                                "message": "AssertionError: Income Feild should be built.",
                                "estack": "AssertionError [ERR_ASSERTION]: Income Feild should be built.\n    at Context.<anonymous> (my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_Line206_4.js:59:16)\n    at processImmediate (internal/timers.js:456:21)",
                                "diff": null
                            },
                            "uuid": "c5e7e09b-9aa4-48b8-931c-0d69f69bf523",
                            "parentUUID": "75f2beb8-18f2-4aa6-acf4-d33a403adee1",
                            "isHook": false,
                            "skipped": false
                        }
                    ],
                    "suites": [],
                    "passes": [
                        "ad9a321a-79d5-4a4b-8a64-7593cb621f4e"
                    ],
                    "failures": [
                        "c5e7e09b-9aa4-48b8-931c-0d69f69bf523"
                    ],
                    "pending": [],
                    "skipped": [],
                    "duration": 1,
                    "root": false,
                    "rootEmpty": false,
                    "_timeout": 150000
                },
                {
                    "uuid": "527b0bf7-46cc-41e1-8b05-15ce9e9da364",
                    "title": "NetIncome_Line206_5---Input F20700 (Registered pension plan deduction) without either F20600 (pension adjustment) or F9922 (no pension adjustment indicator).  Software must not allow.  Also try building F20700 from a slip other than a T4.  //(TP single,  T4A  Box 126=$5,000)",
                    "fullFile": "E:\\Rita\\Taxtron\\WebTest\\my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_Line206_5.js",
                    "file": "\\my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_Line206_5.js",
                    "beforeHooks": [
                        {
                            "title": "\"before all\" hook",
                            "fullTitle": "NetIncome_Line206_5---Input F20700 (Registered pension plan deduction) without either F20600 (pension adjustment) or F9922 (no pension adjustment indicator).  Software must not allow.  Also try building F20700 from a slip other than a T4.  //(TP single,  T4A  Box 126=$5,000) \"before all\" hook",
                            "timedOut": false,
                            "duration": 46888,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "driver = new Builder()\n\t.withCapabilities(Capabilities.chrome().setAcceptInsecureCerts(true))\n\t.build();\ndriver.manage().window().setRect({ width: 1366, height: 768 });\nawait login(driver, 'ritakumar@outlook.com', 'rishu12rashi');\nawait selectNewReturn(driver,province);\nawait switchToastOff(driver);\nawait setInputById(driver, 'Firstnames0', 'BOB ');\nawait setInputById(driver, 'Surname0', 'KUM');\nawait selectDateById(driver, 'DOB0', '1961/10/10');\nawait setInputById(driver, 'SIN0', '222222226');    \n        await selectComboById(driver, 'MaritalStatus0', 'Single');\n\t    await selectToggleById(driver, 'didyoumove0', '0');\nawait selectToggleById(driver, 'HomeAddressSame0', '1');\nawait nextClick(driver);\nawait setInputById(driver, 'fullAdd0', '880 21 St NE, Salmon Arm, BC V1E 2K9, Canada');\nawait selectToggleById(driver, 'addChange0', '0');\nawait selectToggleById(driver, 'bDisabled0', '0');\nawait selectToggleById(driver, 'quesFP0', '0');\nawait selectToggleById(driver, 'qCitizen0', '0');\nawait nextClick(driver);\n        await selectTab(driver, 'Income');\nawait selectToggleById(driver, 'WorkedInYOR0', '1');\n        await clickDivById(driver, 'T4Aa');\n        await nextClick(driver);\n        await selectComboById(driver, 'T4AOtherCombo10tp', '126');\nawait setInputById(driver, 'T4AOtherBox10tp', '5000');\nsavedForm = await getServerFile(driver);",
                            "err": {},
                            "uuid": "3aa7fc39-6350-495f-af90-132c38aa2a4d",
                            "parentUUID": "527b0bf7-46cc-41e1-8b05-15ce9e9da364",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "afterHooks": [],
                    "tests": [
                        {
                            "title": "error should be display",
                            "fullTitle": "NetIncome_Line206_5---Input F20700 (Registered pension plan deduction) without either F20600 (pension adjustment) or F9922 (no pension adjustment indicator).  Software must not allow.  Also try building F20700 from a slip other than a T4.  //(TP single,  T4A  Box 126=$5,000) error should be display",
                            "timedOut": false,
                            "duration": 57,
                            "state": "failed",
                            "speed": null,
                            "pass": false,
                            "fail": true,
                            "pending": false,
                            "context": null,
                            "code": "let errDisplayed = await driver.findElement(By.css('#box520')).isDisplayed();\nassert.equal(errDisplayed, true, 'RRP amount entered and no pension adjustment amount is entered.');",
                            "err": {
                                "message": "AssertionError: RRP amount entered and no pension adjustment amount is entered.",
                                "estack": "AssertionError [ERR_ASSERTION]: RRP amount entered and no pension adjustment amount is entered.\n    at Context.<anonymous> (my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_Line206_5.js:46:10)\n    at runMicrotasks (<anonymous>)\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)",
                                "diff": "- false\n+ true\n"
                            },
                            "uuid": "0e285b10-11f9-4cf0-b25f-cbc7f91631f7",
                            "parentUUID": "527b0bf7-46cc-41e1-8b05-15ce9e9da364",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": "IncomeFeild should be 20700    allow.value ==undefined",
                            "fullTitle": "NetIncome_Line206_5---Input F20700 (Registered pension plan deduction) without either F20600 (pension adjustment) or F9922 (no pension adjustment indicator).  Software must not allow.  Also try building F20700 from a slip other than a T4.  //(TP single,  T4A  Box 126=$5,000) IncomeFeild should be 20700    allow.value ==undefined",
                            "timedOut": false,
                            "duration": 0,
                            "state": "failed",
                            "speed": null,
                            "pass": false,
                            "fail": true,
                            "pending": false,
                            "context": null,
                            "code": "let IncomeFeild = getFieldId('20700');\n\t\tlet Income = savedForm[IncomeFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+Income;\nassert.equal(Income, '5000', 'IncomeFeild should be built.');",
                            "err": {
                                "message": "AssertionError: IncomeFeild should be built.",
                                "estack": "AssertionError [ERR_ASSERTION]: IncomeFeild should be built.\n    at Context.<anonymous> (my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_Line206_5.js:52:16)\n    at processImmediate (internal/timers.js:456:21)",
                                "diff": null
                            },
                            "uuid": "92866631-db20-43e9-85a3-3ed3cf9df16b",
                            "parentUUID": "527b0bf7-46cc-41e1-8b05-15ce9e9da364",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": "IncomeFeild should be 9922    allow.value ==undefined",
                            "fullTitle": "NetIncome_Line206_5---Input F20700 (Registered pension plan deduction) without either F20600 (pension adjustment) or F9922 (no pension adjustment indicator).  Software must not allow.  Also try building F20700 from a slip other than a T4.  //(TP single,  T4A  Box 126=$5,000) IncomeFeild should be 9922    allow.value ==undefined",
                            "timedOut": false,
                            "duration": 0,
                            "state": "failed",
                            "speed": null,
                            "pass": false,
                            "fail": true,
                            "pending": false,
                            "context": null,
                            "code": "let IncomeFeild = getFieldId('9922');\n\t\tlet Income = savedForm[IncomeFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+Income;\nassert.equal(Income, '1', 'IncomeFeild should be built.');",
                            "err": {
                                "message": "AssertionError: IncomeFeild should be built.",
                                "estack": "AssertionError [ERR_ASSERTION]: IncomeFeild should be built.\n    at Context.<anonymous> (my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_Line206_5.js:58:16)\n    at processImmediate (internal/timers.js:456:21)",
                                "diff": null
                            },
                            "uuid": "de4ee7f8-0b0e-442a-b9e7-65065ce0219b",
                            "parentUUID": "527b0bf7-46cc-41e1-8b05-15ce9e9da364",
                            "isHook": false,
                            "skipped": false
                        }
                    ],
                    "suites": [],
                    "passes": [],
                    "failures": [
                        "0e285b10-11f9-4cf0-b25f-cbc7f91631f7",
                        "92866631-db20-43e9-85a3-3ed3cf9df16b",
                        "de4ee7f8-0b0e-442a-b9e7-65065ce0219b"
                    ],
                    "pending": [],
                    "skipped": [],
                    "duration": 57,
                    "root": false,
                    "rootEmpty": false,
                    "_timeout": 150000
                },
                {
                    "uuid": "2ee2e742-ff87-4f5b-9b5f-c12a03da8b83",
                    "title": "NetIncome_Line206_6---Input F20700 (Registered pension plan deduction) without either F20600 (pension adjustment) or F9922 (no pension adjustment indicator).  Software must not allow.  Also try building F20700 from a slip other than a T4.  //(TP single,  T4A  Box 162=$5,000)",
                    "fullFile": "E:\\Rita\\Taxtron\\WebTest\\my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_Line206_6.js",
                    "file": "\\my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_Line206_6.js",
                    "beforeHooks": [
                        {
                            "title": "\"before all\" hook",
                            "fullTitle": "NetIncome_Line206_6---Input F20700 (Registered pension plan deduction) without either F20600 (pension adjustment) or F9922 (no pension adjustment indicator).  Software must not allow.  Also try building F20700 from a slip other than a T4.  //(TP single,  T4A  Box 162=$5,000) \"before all\" hook",
                            "timedOut": false,
                            "duration": 48430,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "driver = new Builder()\n\t.withCapabilities(Capabilities.chrome().setAcceptInsecureCerts(true))\n\t.build();\ndriver.manage().window().setRect({ width: 1366, height: 768 });\nawait login(driver, 'ritakumar@outlook.com', 'rishu12rashi');\nawait selectNewReturn(driver,province);\nawait switchToastOff(driver);\nawait setInputById(driver, 'Firstnames0', 'BOB ');\nawait setInputById(driver, 'Surname0', 'KUM');\nawait selectDateById(driver, 'DOB0', '1961/10/10');\nawait setInputById(driver, 'SIN0', '222222226');    \n        await selectComboById(driver, 'MaritalStatus0', 'Single');\n\t    await selectToggleById(driver, 'didyoumove0', '0');\nawait selectToggleById(driver, 'HomeAddressSame0', '1');\nawait nextClick(driver);\nawait setInputById(driver, 'fullAdd0', '880 21 St NE, Salmon Arm, BC V1E 2K9, Canada');\nawait selectToggleById(driver, 'addChange0', '0');\nawait selectToggleById(driver, 'bDisabled0', '0');\nawait selectToggleById(driver, 'quesFP0', '0');\nawait selectToggleById(driver, 'qCitizen0', '0');\nawait nextClick(driver);\n        await selectTab(driver, 'Income');\nawait selectToggleById(driver, 'WorkedInYOR0', '1');\n        await clickDivById(driver, 'T4Aa');\n        await nextClick(driver);\n        await selectComboById(driver, 'T4AOtherCombo10tp', '162');\n        await setInputById(driver, 'T4AOtherBox10tp', '5000');\n        savedForm = await getServerFile(driver);",
                            "err": {},
                            "uuid": "061b2538-0044-457c-8778-803ba228fb4b",
                            "parentUUID": "2ee2e742-ff87-4f5b-9b5f-c12a03da8b83",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "afterHooks": [
                        {
                            "title": "\"after all\" hook",
                            "fullTitle": "NetIncome_Line206_6---Input F20700 (Registered pension plan deduction) without either F20600 (pension adjustment) or F9922 (no pension adjustment indicator).  Software must not allow.  Also try building F20700 from a slip other than a T4.  //(TP single,  T4A  Box 162=$5,000) \"after all\" hook",
                            "timedOut": false,
                            "duration": 5413,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "await logoutById(driver);\nawait driver.quit();",
                            "err": {},
                            "uuid": "06cd71dc-aba5-49f7-a39d-9bc14877d58e",
                            "parentUUID": "2ee2e742-ff87-4f5b-9b5f-c12a03da8b83",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "tests": [
                        {
                            "title": "error should be display",
                            "fullTitle": "NetIncome_Line206_6---Input F20700 (Registered pension plan deduction) without either F20600 (pension adjustment) or F9922 (no pension adjustment indicator).  Software must not allow.  Also try building F20700 from a slip other than a T4.  //(TP single,  T4A  Box 162=$5,000) error should be display",
                            "timedOut": false,
                            "duration": 44,
                            "state": "failed",
                            "speed": null,
                            "pass": false,
                            "fail": true,
                            "pending": false,
                            "context": null,
                            "code": "let errDisplayed = await driver.findElement(By.css('#box520')).isDisplayed();\nassert.equal(errDisplayed, true, 'RRP amount entered and no pension adjustment amount is entered.');",
                            "err": {
                                "message": "AssertionError: RRP amount entered and no pension adjustment amount is entered.",
                                "estack": "AssertionError [ERR_ASSERTION]: RRP amount entered and no pension adjustment amount is entered.\n    at Context.<anonymous> (my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_Line206_6.js:46:10)\n    at runMicrotasks (<anonymous>)\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)",
                                "diff": "- false\n+ true\n"
                            },
                            "uuid": "62f5670d-3d6d-4f5f-a721-1ba8237d391f",
                            "parentUUID": "2ee2e742-ff87-4f5b-9b5f-c12a03da8b83",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": "IncomeFeild should be 20700    allow.value ==undefined",
                            "fullTitle": "NetIncome_Line206_6---Input F20700 (Registered pension plan deduction) without either F20600 (pension adjustment) or F9922 (no pension adjustment indicator).  Software must not allow.  Also try building F20700 from a slip other than a T4.  //(TP single,  T4A  Box 162=$5,000) IncomeFeild should be 20700    allow.value ==undefined",
                            "timedOut": false,
                            "duration": 1,
                            "state": "failed",
                            "speed": null,
                            "pass": false,
                            "fail": true,
                            "pending": false,
                            "context": null,
                            "code": "let IncomeFeild = getFieldId('20700');\n\t\tlet Income = savedForm[IncomeFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+Income;\nassert.equal(Income, '5000', 'IncomeFeild should be built.');",
                            "err": {
                                "message": "AssertionError: IncomeFeild should be built.",
                                "estack": "AssertionError [ERR_ASSERTION]: IncomeFeild should be built.\n    at Context.<anonymous> (my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_Line206_6.js:52:16)\n    at processImmediate (internal/timers.js:456:21)",
                                "diff": null
                            },
                            "uuid": "88cc18ad-214c-48c7-812c-dc2399987837",
                            "parentUUID": "2ee2e742-ff87-4f5b-9b5f-c12a03da8b83",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": "IncomeFeild should be 9922    allow.value ==undefined",
                            "fullTitle": "NetIncome_Line206_6---Input F20700 (Registered pension plan deduction) without either F20600 (pension adjustment) or F9922 (no pension adjustment indicator).  Software must not allow.  Also try building F20700 from a slip other than a T4.  //(TP single,  T4A  Box 162=$5,000) IncomeFeild should be 9922    allow.value ==undefined",
                            "timedOut": false,
                            "duration": 0,
                            "state": "failed",
                            "speed": null,
                            "pass": false,
                            "fail": true,
                            "pending": false,
                            "context": null,
                            "code": "let IncomeFeild = getFieldId('9922');\n\t\tlet Income = savedForm[IncomeFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+Income;\nassert.equal(Income, '1', 'IncomeFeild should be built.');",
                            "err": {
                                "message": "AssertionError: IncomeFeild should be built.",
                                "estack": "AssertionError [ERR_ASSERTION]: IncomeFeild should be built.\n    at Context.<anonymous> (my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_Line206_6.js:58:16)\n    at processImmediate (internal/timers.js:456:21)",
                                "diff": null
                            },
                            "uuid": "1e391e4b-e6c9-4eb0-91fa-703fed7cddc3",
                            "parentUUID": "2ee2e742-ff87-4f5b-9b5f-c12a03da8b83",
                            "isHook": false,
                            "skipped": false
                        }
                    ],
                    "suites": [],
                    "passes": [],
                    "failures": [
                        "62f5670d-3d6d-4f5f-a721-1ba8237d391f",
                        "88cc18ad-214c-48c7-812c-dc2399987837",
                        "1e391e4b-e6c9-4eb0-91fa-703fed7cddc3"
                    ],
                    "pending": [],
                    "skipped": [],
                    "duration": 45,
                    "root": false,
                    "rootEmpty": false,
                    "_timeout": 150000
                },
                {
                    "uuid": "18144e3c-7622-478d-9136-654a9c35c0ab",
                    "title": "NetIncome_Line206_RC267---Input F20700 (Registered pension plan deduction) without either F20600 (pension adjustment) or F9922 (no pension adjustment indicator).  Software must not allow.  Also try building F20700 from a slip other than a T4.   //(TP single,  RRSP, CHOOSE Did you contribute to Pooled Registered Pension Plan (PRPP)? RC267. Row 1 (contributions), enter $ 5,000, Row 2 (amount excluded), enter $ 5,000.)",
                    "fullFile": "E:\\Rita\\Taxtron\\WebTest\\my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_Line206_RC267.js",
                    "file": "\\my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_Line206_RC267.js",
                    "beforeHooks": [
                        {
                            "title": "\"before all\" hook",
                            "fullTitle": "NetIncome_Line206_RC267---Input F20700 (Registered pension plan deduction) without either F20600 (pension adjustment) or F9922 (no pension adjustment indicator).  Software must not allow.  Also try building F20700 from a slip other than a T4.   //(TP single,  RRSP, CHOOSE Did you contribute to Pooled Registered Pension Plan (PRPP)? RC267. Row 1 (contributions), enter $ 5,000, Row 2 (amount excluded), enter $ 5,000.) \"before all\" hook",
                            "timedOut": false,
                            "duration": 53129,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "driver = new Builder()\n\t.withCapabilities(Capabilities.chrome().setAcceptInsecureCerts(true))\n\t.build();\ndriver.manage().window().setRect({ width: 1366, height: 768 });\nawait login(driver, 'ritakumar@outlook.com', 'rishu12rashi');\nawait selectNewReturn(driver,province);\nawait switchToastOff(driver);\nawait setInputById(driver, 'Firstnames0', 'BOB ');\nawait setInputById(driver, 'Surname0', 'KUM');\nawait selectDateById(driver, 'DOB0', '1961/10/10');\nawait setInputById(driver, 'SIN0', '222222226');    \n        await selectComboById(driver, 'MaritalStatus0', 'Single');\n\t    await selectToggleById(driver, 'didyoumove0', '0');\nawait selectToggleById(driver, 'HomeAddressSame0', '1');\nawait nextClick(driver);\nawait setInputById(driver, 'fullAdd0', '880 21 St NE, Salmon Arm, BC V1E 2K9, Canada');\nawait selectToggleById(driver, 'addChange0', '0');\nawait selectToggleById(driver, 'bDisabled0', '0');\nawait selectToggleById(driver, 'quesFP0', '0');\nawait selectToggleById(driver, 'qCitizen0', '0');\n        await nextClick(driver);\n        await selectTab(driver, 'Income');\nawait selectToggleById(driver, 'WorkedInYOR0', '1');\n        await clickDivById(driver, 'T40tp');\n        await nextClick(driver);\n        await setInputById(driver, 'T4B140', '60000');\n        await setInputById(driver, 'T4B200', '5000');\n        await nextClick(driver);\n        await selectTab(driver, 'Deduction');\n        await selectToggleById(driver, 'EmployeeCont0tp', '1');\n        await selectToggleById(driver, 'RC2670tp', '1');\n        await nextClick(driver);\n        await setInputById(driver, 'RC267Line10tp', '5000');\n        await setInputById(driver, 'RC267Line20tp', '5000');\n        savedForm = await getServerFile(driver);",
                            "err": {},
                            "uuid": "ca2da99c-fa4c-461d-a976-6c6bff6ae26f",
                            "parentUUID": "18144e3c-7622-478d-9136-654a9c35c0ab",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "afterHooks": [],
                    "tests": [
                        {
                            "title": "error should be display",
                            "fullTitle": "NetIncome_Line206_RC267---Input F20700 (Registered pension plan deduction) without either F20600 (pension adjustment) or F9922 (no pension adjustment indicator).  Software must not allow.  Also try building F20700 from a slip other than a T4.   //(TP single,  RRSP, CHOOSE Did you contribute to Pooled Registered Pension Plan (PRPP)? RC267. Row 1 (contributions), enter $ 5,000, Row 2 (amount excluded), enter $ 5,000.) error should be display",
                            "timedOut": false,
                            "duration": 65,
                            "state": "passed",
                            "speed": "medium",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let errDisplayed = await driver.findElement(By.css('#box520')).isDisplayed();\nassert.strictEqual(errDisplayed, true, 'RRP amount entered and no pension adjustment amount is entered.');",
                            "err": {},
                            "uuid": "8984ee14-c8fe-4d29-ae98-db15024bfff7",
                            "parentUUID": "18144e3c-7622-478d-9136-654a9c35c0ab",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": "IncomeFeild should be 20700    allow.value ==5000",
                            "fullTitle": "NetIncome_Line206_RC267---Input F20700 (Registered pension plan deduction) without either F20600 (pension adjustment) or F9922 (no pension adjustment indicator).  Software must not allow.  Also try building F20700 from a slip other than a T4.   //(TP single,  RRSP, CHOOSE Did you contribute to Pooled Registered Pension Plan (PRPP)? RC267. Row 1 (contributions), enter $ 5,000, Row 2 (amount excluded), enter $ 5,000.) IncomeFeild should be 20700    allow.value ==5000",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let IncomeFeild = getFieldId('20700');\n\t\tlet Income = savedForm[IncomeFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+Income;\nassert.strictEqual(Income, '5000', 'IncomeFeild should be built.');",
                            "err": {},
                            "uuid": "128525fe-eb53-4595-9f80-7c828b2bb9f6",
                            "parentUUID": "18144e3c-7622-478d-9136-654a9c35c0ab",
                            "isHook": false,
                            "skipped": false
                        }
                    ],
                    "suites": [],
                    "passes": [
                        "8984ee14-c8fe-4d29-ae98-db15024bfff7",
                        "128525fe-eb53-4595-9f80-7c828b2bb9f6"
                    ],
                    "failures": [],
                    "pending": [],
                    "skipped": [],
                    "duration": 65,
                    "root": false,
                    "rootEmpty": false,
                    "_timeout": 150000
                },
                {
                    "uuid": "37c396f5-863c-40ad-b246-52edd517a3ae",
                    "title": "NetIncome_Line206_RC268---Input F20700 (Registered pension plan deduction) without either F20600 (pension adjustment) or F9922 (no pension adjustment indicator).  Software must not allow.  Also try building F20700 from a slip other than a T4.   //(TP single,  RRSP, CHOOSE Did you contribute to Pooled Registered Pension Plan (PRPP)? RC267. Row 1 (contributions), enter $ 5,000, Row 2 (amount excluded), enter $ 5,000.)",
                    "fullFile": "E:\\Rita\\Taxtron\\WebTest\\my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_Line206_RC268.js",
                    "file": "\\my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_Line206_RC268.js",
                    "beforeHooks": [
                        {
                            "title": "\"before all\" hook",
                            "fullTitle": "NetIncome_Line206_RC268---Input F20700 (Registered pension plan deduction) without either F20600 (pension adjustment) or F9922 (no pension adjustment indicator).  Software must not allow.  Also try building F20700 from a slip other than a T4.   //(TP single,  RRSP, CHOOSE Did you contribute to Pooled Registered Pension Plan (PRPP)? RC267. Row 1 (contributions), enter $ 5,000, Row 2 (amount excluded), enter $ 5,000.) \"before all\" hook",
                            "timedOut": false,
                            "duration": 54405,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "driver = new Builder()\n\t.withCapabilities(Capabilities.chrome().setAcceptInsecureCerts(true))\n\t.build();\ndriver.manage().window().setRect({ width: 1366, height: 768 });\nawait login(driver, 'ritakumar@outlook.com', 'rishu12rashi');\nawait selectNewReturn(driver,province);\nawait switchToastOff(driver);\nawait setInputById(driver, 'Firstnames0', 'BOB ');\nawait setInputById(driver, 'Surname0', 'KUM');\nawait selectDateById(driver, 'DOB0', '1961/10/10');\nawait setInputById(driver, 'SIN0', '222222226');    \n        await selectComboById(driver, 'MaritalStatus0', 'Single');\n\t    await selectToggleById(driver, 'didyoumove0', '0');\nawait selectToggleById(driver, 'HomeAddressSame0', '1');\nawait nextClick(driver);\nawait setInputById(driver, 'fullAdd0', '880 21 St NE, Salmon Arm, BC V1E 2K9, Canada');\nawait selectToggleById(driver, 'addChange0', '0');\nawait selectToggleById(driver, 'bDisabled0', '0');\nawait selectToggleById(driver, 'quesFP0', '0');\nawait selectToggleById(driver, 'qCitizen0', '0');\n        await nextClick(driver);\n        await selectTab(driver, 'Income');\nawait selectToggleById(driver, 'WorkedInYOR0', '1');\n        await clickDivById(driver, 'T40tp');\n        await nextClick(driver);\n        await setInputById(driver, 'T4B140', '60000');\n        await setInputById(driver, 'T4B200', '5000');\n        await nextClick(driver);\n        await selectTab(driver, 'Deduction');\n        await selectToggleById(driver, 'EmployeeCont0tp', '1');\n        await selectToggleById(driver, 'RC2680tp', '1');\n        await nextClick(driver);\n        await setInputById(driver, 'RC268_51250tp', '5000');\n        await setInputById(driver, 'RC268_Line20tp', '5000');\n        savedForm = await getServerFile(driver);",
                            "err": {},
                            "uuid": "fe9d677f-9d81-4f17-8091-65b859f9c069",
                            "parentUUID": "37c396f5-863c-40ad-b246-52edd517a3ae",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "afterHooks": [
                        {
                            "title": "\"after all\" hook",
                            "fullTitle": "NetIncome_Line206_RC268---Input F20700 (Registered pension plan deduction) without either F20600 (pension adjustment) or F9922 (no pension adjustment indicator).  Software must not allow.  Also try building F20700 from a slip other than a T4.   //(TP single,  RRSP, CHOOSE Did you contribute to Pooled Registered Pension Plan (PRPP)? RC267. Row 1 (contributions), enter $ 5,000, Row 2 (amount excluded), enter $ 5,000.) \"after all\" hook",
                            "timedOut": false,
                            "duration": 5772,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "await logoutById(driver);\nawait driver.quit();",
                            "err": {},
                            "uuid": "d71dc29b-70da-4e9c-9a57-debc63f0a1d7",
                            "parentUUID": "37c396f5-863c-40ad-b246-52edd517a3ae",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "tests": [
                        {
                            "title": "error should be display",
                            "fullTitle": "NetIncome_Line206_RC268---Input F20700 (Registered pension plan deduction) without either F20600 (pension adjustment) or F9922 (no pension adjustment indicator).  Software must not allow.  Also try building F20700 from a slip other than a T4.   //(TP single,  RRSP, CHOOSE Did you contribute to Pooled Registered Pension Plan (PRPP)? RC267. Row 1 (contributions), enter $ 5,000, Row 2 (amount excluded), enter $ 5,000.) error should be display",
                            "timedOut": false,
                            "duration": 35,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let errDisplayed = await driver.findElement(By.css('#box520')).isDisplayed();\nassert.strictEqual(errDisplayed, true, 'RRP amount entered and no pension adjustment amount is entered.');",
                            "err": {},
                            "uuid": "b524f398-4158-44ce-91f9-f6d736744b3b",
                            "parentUUID": "37c396f5-863c-40ad-b246-52edd517a3ae",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": "IncomeFeild should be 20700    allow.value ==5000",
                            "fullTitle": "NetIncome_Line206_RC268---Input F20700 (Registered pension plan deduction) without either F20600 (pension adjustment) or F9922 (no pension adjustment indicator).  Software must not allow.  Also try building F20700 from a slip other than a T4.   //(TP single,  RRSP, CHOOSE Did you contribute to Pooled Registered Pension Plan (PRPP)? RC267. Row 1 (contributions), enter $ 5,000, Row 2 (amount excluded), enter $ 5,000.) IncomeFeild should be 20700    allow.value ==5000",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let IncomeFeild = getFieldId('20700');\n\t\tlet Income = savedForm[IncomeFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+Income;\nassert.strictEqual(Income, '5000', 'IncomeFeild should be built.');",
                            "err": {},
                            "uuid": "f930fb2b-0ea5-41c4-bf73-7e7530cd09c1",
                            "parentUUID": "37c396f5-863c-40ad-b246-52edd517a3ae",
                            "isHook": false,
                            "skipped": false
                        }
                    ],
                    "suites": [],
                    "passes": [
                        "b524f398-4158-44ce-91f9-f6d736744b3b",
                        "f930fb2b-0ea5-41c4-bf73-7e7530cd09c1"
                    ],
                    "failures": [],
                    "pending": [],
                    "skipped": [],
                    "duration": 35,
                    "root": false,
                    "rootEmpty": false,
                    "_timeout": 150000
                },
                {
                    "uuid": "fcb68ea0-a5e6-47c2-8c9b-e5d57a4702cf",
                    "title": "NetIncome_Line206_RC269---Input F20700 (Registered pension plan deduction) without either F20600 (pension adjustment) or F9922 (no pension adjustment indicator).  Software must not allow.  Also try building F20700 from a slip other than a T4.   //(TP single,  RRSP, CHOOSE Did you contribute to Pooled Registered Pension Plan (PRPP)? RC267. Row 1 (contributions), enter $ 5,000, Row 2 (amount excluded), enter $ 5,000.)",
                    "fullFile": "E:\\Rita\\Taxtron\\WebTest\\my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_Line206_RC269.js",
                    "file": "\\my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_Line206_RC269.js",
                    "beforeHooks": [
                        {
                            "title": "\"before all\" hook",
                            "fullTitle": "NetIncome_Line206_RC269---Input F20700 (Registered pension plan deduction) without either F20600 (pension adjustment) or F9922 (no pension adjustment indicator).  Software must not allow.  Also try building F20700 from a slip other than a T4.   //(TP single,  RRSP, CHOOSE Did you contribute to Pooled Registered Pension Plan (PRPP)? RC267. Row 1 (contributions), enter $ 5,000, Row 2 (amount excluded), enter $ 5,000.) \"before all\" hook",
                            "timedOut": false,
                            "duration": 55771,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "driver = new Builder()\n\t.withCapabilities(Capabilities.chrome().setAcceptInsecureCerts(true))\n\t.build();\ndriver.manage().window().setRect({ width: 1366, height: 768 });\nawait login(driver, 'ritakumar@outlook.com', 'rishu12rashi');\nawait selectNewReturn(driver,province);\nawait switchToastOff(driver);\nawait setInputById(driver, 'Firstnames0', 'BOB ');\nawait setInputById(driver, 'Surname0', 'KUM');\nawait selectDateById(driver, 'DOB0', '1961/10/10');\nawait setInputById(driver, 'SIN0', '222222226');    \n        await selectComboById(driver, 'MaritalStatus0', 'Single');\n\t    await selectToggleById(driver, 'didyoumove0', '0');\nawait selectToggleById(driver, 'HomeAddressSame0', '1');\nawait nextClick(driver);\nawait setInputById(driver, 'fullAdd0', '880 21 St NE, Salmon Arm, BC V1E 2K9, Canada');\nawait selectToggleById(driver, 'addChange0', '0');\nawait selectToggleById(driver, 'bDisabled0', '0');\nawait selectToggleById(driver, 'quesFP0', '0');\nawait selectToggleById(driver, 'qCitizen0', '0');\n        await nextClick(driver);\n        await selectTab(driver, 'Income');\nawait selectToggleById(driver, 'WorkedInYOR0', '1');\n        await clickDivById(driver, 'T40tp');\n        await nextClick(driver);\n        await setInputById(driver, 'T4B140', '60000');\n        await setInputById(driver, 'T4B200', '5000');\n        await nextClick(driver);\n        await selectTab(driver, 'Deduction');\n        await selectToggleById(driver, 'EmployeeCont0tp', '1');\n        await selectToggleById(driver, 'RC2690tp', '1');\n        await nextClick(driver);\n        await setInputById(driver, 'RC269_51180tp', '5000');\n        await setInputById(driver, 'RC269_Field51190tp', '5000');\n        await setInputById(driver, 'RC269_51210tp', '5000');\n        savedForm = await getServerFile(driver);",
                            "err": {},
                            "uuid": "69cd04ce-3e77-4f34-9c96-725ea8648cb6",
                            "parentUUID": "fcb68ea0-a5e6-47c2-8c9b-e5d57a4702cf",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "afterHooks": [
                        {
                            "title": "\"after all\" hook",
                            "fullTitle": "NetIncome_Line206_RC269---Input F20700 (Registered pension plan deduction) without either F20600 (pension adjustment) or F9922 (no pension adjustment indicator).  Software must not allow.  Also try building F20700 from a slip other than a T4.   //(TP single,  RRSP, CHOOSE Did you contribute to Pooled Registered Pension Plan (PRPP)? RC267. Row 1 (contributions), enter $ 5,000, Row 2 (amount excluded), enter $ 5,000.) \"after all\" hook",
                            "timedOut": false,
                            "duration": 1434,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "await logoutById(driver);\nawait driver.quit();",
                            "err": {},
                            "uuid": "29a16c82-4d7c-461c-97df-a05ce391d71a",
                            "parentUUID": "fcb68ea0-a5e6-47c2-8c9b-e5d57a4702cf",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "tests": [
                        {
                            "title": "error should be display",
                            "fullTitle": "NetIncome_Line206_RC269---Input F20700 (Registered pension plan deduction) without either F20600 (pension adjustment) or F9922 (no pension adjustment indicator).  Software must not allow.  Also try building F20700 from a slip other than a T4.   //(TP single,  RRSP, CHOOSE Did you contribute to Pooled Registered Pension Plan (PRPP)? RC267. Row 1 (contributions), enter $ 5,000, Row 2 (amount excluded), enter $ 5,000.) error should be display",
                            "timedOut": false,
                            "duration": 59,
                            "state": "passed",
                            "speed": "medium",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let errDisplayed = await driver.findElement(By.css('#box520')).isDisplayed();\nassert.strictEqual(errDisplayed, true, 'RRP amount entered and no pension adjustment amount is entered.');",
                            "err": {},
                            "uuid": "68cd9b1f-2d1d-44e5-aa89-e5401fb0bef8",
                            "parentUUID": "fcb68ea0-a5e6-47c2-8c9b-e5d57a4702cf",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": "IncomeFeild should be 20700    allow.value ==5000",
                            "fullTitle": "NetIncome_Line206_RC269---Input F20700 (Registered pension plan deduction) without either F20600 (pension adjustment) or F9922 (no pension adjustment indicator).  Software must not allow.  Also try building F20700 from a slip other than a T4.   //(TP single,  RRSP, CHOOSE Did you contribute to Pooled Registered Pension Plan (PRPP)? RC267. Row 1 (contributions), enter $ 5,000, Row 2 (amount excluded), enter $ 5,000.) IncomeFeild should be 20700    allow.value ==5000",
                            "timedOut": false,
                            "duration": 1,
                            "state": "failed",
                            "speed": null,
                            "pass": false,
                            "fail": true,
                            "pending": false,
                            "context": null,
                            "code": "let IncomeFeild = getFieldId('20700');\n\t\tlet Income = savedForm[IncomeFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+Income;\nassert.strictEqual(Income, '1350', 'IncomeFeild should be built.');",
                            "err": {
                                "message": "AssertionError: IncomeFeild should be built.",
                                "estack": "AssertionError [ERR_ASSERTION]: IncomeFeild should be built.\n    at Context.<anonymous> (my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_Line206_RC269.js:60:16)\n    at processImmediate (internal/timers.js:456:21)",
                                "diff": "- 5000\n+ 1350\n"
                            },
                            "uuid": "a5b457f7-51ab-409c-bc89-5623079a4f44",
                            "parentUUID": "fcb68ea0-a5e6-47c2-8c9b-e5d57a4702cf",
                            "isHook": false,
                            "skipped": false
                        }
                    ],
                    "suites": [],
                    "passes": [
                        "68cd9b1f-2d1d-44e5-aa89-e5401fb0bef8"
                    ],
                    "failures": [
                        "a5b457f7-51ab-409c-bc89-5623079a4f44"
                    ],
                    "pending": [],
                    "skipped": [],
                    "duration": 60,
                    "root": false,
                    "rootEmpty": false,
                    "_timeout": 150000
                },
                {
                    "uuid": "144a4eb5-c6af-402c-a257-d311bbd93490",
                    "title": "NetIncome_Line210_1SP---Input F21000 without an entry at F68020.  Software must not allow.  //(TP married, LINKED RTS, both 65+ TP T4A pesnion of $50,000).  ",
                    "fullFile": "E:\\Rita\\Taxtron\\WebTest\\my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_Line210_1SP.js",
                    "file": "\\my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_Line210_1SP.js",
                    "beforeHooks": [
                        {
                            "title": "\"before all\" hook",
                            "fullTitle": "NetIncome_Line210_1SP---Input F21000 without an entry at F68020.  Software must not allow.  //(TP married, LINKED RTS, both 65+ TP T4A pesnion of $50,000).   \"before all\" hook",
                            "timedOut": false,
                            "duration": 74134,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "driver = new Builder()\n    .withCapabilities(Capabilities.chrome().setAcceptInsecureCerts(true))\n    .build();\ndriver.manage().window().setRect({ width: 1366, height: 768 });\nawait login(driver, 'ritakumar@outlook.com', 'rishu12rashi');\nawait selectNewReturn(driver,province);\nawait switchToastOff(driver);\n    \nawait nextClick(driver);\nawait setInputById(driver, 'Firstnames0', 'king');\nawait setInputById(driver, 'Surname0', 'smith');\nawait selectDateById(driver, 'DOB0', '1954/10/10');\nawait setInputById(driver, 'SIN0', '100000009');\nawait selectComboById(driver, 'MaritalStatus0', 'Common-law');\nawait selectToggleById(driver, 'domchanged0', '0');\nawait selectToggleById(driver, 'IsLinkedReturn0', '1');\nawait nextClick(driver);\nawait setInputById(driver, 'fullAdd0', '880 21 St NE, Salmon Arm, YT M2M 3X4, Canada');\nawait selectToggleById(driver, 'quesFP0', '0');\nawait selectToggleById(driver, 'quesPrinResi0', '0');\nawait nextClick(driver);\nawait nextClick(driver);\nawait setInputById(driver, 'Firstnames0sp', 'jone');\nawait setInputById(driver, 'Surname0sp', 'smith');\nawait selectDateById(driver, 'DOB0sp', '1954/10/10');\nawait setInputById(driver, 'SIN0sp', '100000017');\nawait selectComboById(driver, 'Province0sp', 'British Columbia');\nawait nextClick(driver);\nawait selectTab(driver, 'Income');\n\t\t    await selectToggleById(driver, 'WorkedInYOR0tp', '1');\nawait clickDivById(driver, 'T4Aa');\nawait nextClick(driver);\nawait selectToggleById(driver, 'WorkedInYOR0sp', '1');\nawait clickDivById(driver, 'T4Aa');\nawait nextClick(driver);\nawait setInputById(driver, 'T4ABox160tp', '50000');\nawait nextClick(driver);\nawait setInputById(driver, 'T4ABox160sp', '50000');\nawait nextClick(driver);\nawait selectTab(driver, 'Review');\nawait selectTab(driver, 'PensionSplit');\nawait selectToggleById(driver, 'qPension0tp', '1');\nawait selectToggleById(driver, 'PensionSplitComboT0tp', '1');\nawait setInputById(driver, 'PSplit_100tp', '20000');\nawait nextClick(driver);\nsavedForm = await getServerFileSp(driver,'sp');",
                            "err": {},
                            "uuid": "987486ee-c8bc-47eb-9ac5-9a5527ad4a57",
                            "parentUUID": "144a4eb5-c6af-402c-a257-d311bbd93490",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "afterHooks": [
                        {
                            "title": "\"after all\" hook",
                            "fullTitle": "NetIncome_Line210_1SP---Input F21000 without an entry at F68020.  Software must not allow.  //(TP married, LINKED RTS, both 65+ TP T4A pesnion of $50,000).   \"after all\" hook",
                            "timedOut": false,
                            "duration": 5448,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "await logoutById(driver);\nawait driver.quit();",
                            "err": {},
                            "uuid": "0378a50a-0619-4f62-ad12-c5cbfbc3093e",
                            "parentUUID": "144a4eb5-c6af-402c-a257-d311bbd93490",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "tests": [
                        {
                            "title": "software requires a response for  F11600 should be bulit .   allow.value ==20000",
                            "fullTitle": "NetIncome_Line210_1SP---Input F21000 without an entry at F68020.  Software must not allow.  //(TP married, LINKED RTS, both 65+ TP T4A pesnion of $50,000).   software requires a response for  F11600 should be bulit .   allow.value ==20000",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let  deductionForElectedSplitPensionAmountFeild = getFieldId('11600');\nlet deductionForElectedSplitPensionAmount = savedForm[deductionForElectedSplitPensionAmountFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+deductionForElectedSplitPensionAmount;\nassert.strictEqual(deductionForElectedSplitPensionAmount ,'20000',' Software requires a response for  F11600 should be bulit .');",
                            "err": {},
                            "uuid": "db74e6ca-3f43-40f1-8757-40a51b06ae93",
                            "parentUUID": "144a4eb5-c6af-402c-a257-d311bbd93490",
                            "isHook": false,
                            "skipped": false
                        }
                    ],
                    "suites": [],
                    "passes": [
                        "db74e6ca-3f43-40f1-8757-40a51b06ae93"
                    ],
                    "failures": [],
                    "pending": [],
                    "skipped": [],
                    "duration": 0,
                    "root": false,
                    "rootEmpty": false,
                    "_timeout": 150000
                },
                {
                    "uuid": "db6d28f4-cb34-4fc5-87ea-f52ed4c04466",
                    "title": "NetIncome_Line210_1TP---Input F21000 without an entry at F68020.  Software must not allow.  //(TP married, LINKED RTS, both 65+ TP T4A pesnion of $50,000).  ",
                    "fullFile": "E:\\Rita\\Taxtron\\WebTest\\my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_Line210_1TP.js",
                    "file": "\\my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_Line210_1TP.js",
                    "beforeHooks": [
                        {
                            "title": "\"before all\" hook",
                            "fullTitle": "NetIncome_Line210_1TP---Input F21000 without an entry at F68020.  Software must not allow.  //(TP married, LINKED RTS, both 65+ TP T4A pesnion of $50,000).   \"before all\" hook",
                            "timedOut": false,
                            "duration": 72371,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "driver = new Builder()\n    .withCapabilities(Capabilities.chrome().setAcceptInsecureCerts(true))\n    .build();\ndriver.manage().window().setRect({ width: 1366, height: 768 });\nawait login(driver, 'ritakumar@outlook.com', 'rishu12rashi');\nawait selectNewReturn(driver,province);\nawait switchToastOff(driver);\n    \nawait nextClick(driver);\nawait setInputById(driver, 'Firstnames0', 'king');\nawait setInputById(driver, 'Surname0', 'smith');\nawait selectDateById(driver, 'DOB0', '1954/10/10');\nawait setInputById(driver, 'SIN0', '100000009');\nawait selectComboById(driver, 'MaritalStatus0', 'Common-law');\nawait selectToggleById(driver, 'domchanged0', '0');\nawait selectToggleById(driver, 'IsLinkedReturn0', '1');\nawait nextClick(driver);\nawait setInputById(driver, 'fullAdd0', '880 21 St NE, Salmon Arm, YT M2M 3X4, Canada');\nawait selectToggleById(driver, 'quesFP0', '0');\nawait selectToggleById(driver, 'quesPrinResi0', '0');\nawait nextClick(driver);\nawait nextClick(driver);\nawait setInputById(driver, 'Firstnames0sp', 'jone');\nawait setInputById(driver, 'Surname0sp', 'smith');\nawait selectDateById(driver, 'DOB0sp', '1954/10/10');\nawait setInputById(driver, 'SIN0sp', '100000017');\nawait selectComboById(driver, 'Province0sp', 'British Columbia');\nawait nextClick(driver);\nawait selectTab(driver, 'Income');\n\t\t    await selectToggleById(driver, 'WorkedInYOR0tp', '1');\nawait clickDivById(driver, 'T4Aa');\nawait nextClick(driver);\nawait selectToggleById(driver, 'WorkedInYOR0sp', '1');\nawait clickDivById(driver, 'T4Aa');\nawait nextClick(driver);\nawait setInputById(driver, 'T4ABox160tp', '50000');\nawait nextClick(driver);\nawait setInputById(driver, 'T4ABox160sp', '50000');\nawait nextClick(driver);\nawait selectTab(driver, 'Review');\nawait selectTab(driver, 'PensionSplit');\nawait selectToggleById(driver, 'qPension0tp', '1');\nawait selectToggleById(driver, 'PensionSplitComboT0tp', '1');\nawait setInputById(driver, 'PSplit_100tp', '20000');\nawait nextClick(driver);\nsavedForm = await getServerFile(driver);",
                            "err": {},
                            "uuid": "c8e5e763-60da-4b5c-88f2-10b184d57995",
                            "parentUUID": "db6d28f4-cb34-4fc5-87ea-f52ed4c04466",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "afterHooks": [
                        {
                            "title": "\"after all\" hook",
                            "fullTitle": "NetIncome_Line210_1TP---Input F21000 without an entry at F68020.  Software must not allow.  //(TP married, LINKED RTS, both 65+ TP T4A pesnion of $50,000).   \"after all\" hook",
                            "timedOut": false,
                            "duration": 5841,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "await logoutById(driver);\nawait driver.quit();",
                            "err": {},
                            "uuid": "fb04a32d-2c6b-4ce2-8731-a09c6b5f4163",
                            "parentUUID": "db6d28f4-cb34-4fc5-87ea-f52ed4c04466",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "tests": [
                        {
                            "title": "software requires a response for  F11500 should be bulit .   allow.value ==50000",
                            "fullTitle": "NetIncome_Line210_1TP---Input F21000 without an entry at F68020.  Software must not allow.  //(TP married, LINKED RTS, both 65+ TP T4A pesnion of $50,000).   software requires a response for  F11500 should be bulit .   allow.value ==50000",
                            "timedOut": false,
                            "duration": 1,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let  deductionForElectedSplitPensionAmountFeild = getFieldId('11500');\nlet deductionForElectedSplitPensionAmount = savedForm[deductionForElectedSplitPensionAmountFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+deductionForElectedSplitPensionAmount;\nassert.strictEqual(deductionForElectedSplitPensionAmount ,'50000',' Software requires a response for  F11500 should be bulit .');",
                            "err": {},
                            "uuid": "83cd5330-ac1f-41e6-a163-46540f4bf866",
                            "parentUUID": "db6d28f4-cb34-4fc5-87ea-f52ed4c04466",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": "software requires a response for  F21000 should be bulit .   allow.value ==20000",
                            "fullTitle": "NetIncome_Line210_1TP---Input F21000 without an entry at F68020.  Software must not allow.  //(TP married, LINKED RTS, both 65+ TP T4A pesnion of $50,000).   software requires a response for  F21000 should be bulit .   allow.value ==20000",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let  deductionForElectedSplitPensionAmountFeild = getFieldId('21000');\nlet deductionForElectedSplitPensionAmount = savedForm[deductionForElectedSplitPensionAmountFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+deductionForElectedSplitPensionAmount;\nassert.strictEqual(deductionForElectedSplitPensionAmount ,'20000',' Software requires a response for  F21000 should be bulit .');",
                            "err": {},
                            "uuid": "ee587895-c6d1-4ed7-89c5-ed9b16ee2f25",
                            "parentUUID": "db6d28f4-cb34-4fc5-87ea-f52ed4c04466",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": "software requires a response for  F68020 should be bulit .   allow.value ==50000",
                            "fullTitle": "NetIncome_Line210_1TP---Input F21000 without an entry at F68020.  Software must not allow.  //(TP married, LINKED RTS, both 65+ TP T4A pesnion of $50,000).   software requires a response for  F68020 should be bulit .   allow.value ==50000",
                            "timedOut": false,
                            "duration": 1,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let totalEligiblePensionsOrSuperannuationAnnuityAndRRSPRRIFPaymentsIncludinglifeIncomeFundReceivedFeild = getFieldId('68020');\nlet totalEligiblePensionsOrSuperannuationAnnuityAndRRSPRRIFPaymentsIncludinglifeIncomeFundReceived = savedForm[totalEligiblePensionsOrSuperannuationAnnuityAndRRSPRRIFPaymentsIncludinglifeIncomeFundReceivedFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+totalEligiblePensionsOrSuperannuationAnnuityAndRRSPRRIFPaymentsIncludinglifeIncomeFundReceived;\nassert.strictEqual(totalEligiblePensionsOrSuperannuationAnnuityAndRRSPRRIFPaymentsIncludinglifeIncomeFundReceived ,'50000',' Software requires a response for  F68020 should be bulit .');",
                            "err": {},
                            "uuid": "a6827400-2b48-4df3-bfb4-9d5791286211",
                            "parentUUID": "db6d28f4-cb34-4fc5-87ea-f52ed4c04466",
                            "isHook": false,
                            "skipped": false
                        }
                    ],
                    "suites": [],
                    "passes": [
                        "83cd5330-ac1f-41e6-a163-46540f4bf866",
                        "ee587895-c6d1-4ed7-89c5-ed9b16ee2f25",
                        "a6827400-2b48-4df3-bfb4-9d5791286211"
                    ],
                    "failures": [],
                    "pending": [],
                    "skipped": [],
                    "duration": 2,
                    "root": false,
                    "rootEmpty": false,
                    "_timeout": 150000
                },
                {
                    "uuid": "ef0d822b-bccd-4793-9b9d-c41b7a7d4125",
                    "title": "NetIncome_Line210_2SP Input F21000 without an entry at F68020.  Software must not allow.  //(TP married, Not Linked, TP under 65, SP under 65TP T4A (Box 16) $ 50,000. Elected Pension Split =$ 30,000. Red Diag should appear and wont let you chose more than 50% of Maximum pension split)",
                    "fullFile": "E:\\Rita\\Taxtron\\WebTest\\my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_Line210_2SP.js",
                    "file": "\\my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_Line210_2SP.js",
                    "beforeHooks": [
                        {
                            "title": "\"before all\" hook",
                            "fullTitle": "NetIncome_Line210_2SP Input F21000 without an entry at F68020.  Software must not allow.  //(TP married, Not Linked, TP under 65, SP under 65TP T4A (Box 16) $ 50,000. Elected Pension Split =$ 30,000. Red Diag should appear and wont let you chose more than 50% of Maximum pension split) \"before all\" hook",
                            "timedOut": false,
                            "duration": 70851,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "driver = new Builder()\n\t.withCapabilities(Capabilities.chrome().setAcceptInsecureCerts(true))\n\t.build();\n//driver.manage().window().setRect({ width: 1366, height: 768 });\nawait login(driver, 'ritakumar@outlook.com', 'rishu12rashi');\nawait selectNewReturn(driver,province);\nawait switchToastOff(driver);\n        await setInputById(driver, 'Firstnames0', 'king');\nawait setInputById(driver, 'Surname0', 'smith');\nawait selectDateById(driver, 'DOB0', '1955/10/10');\nawait setInputById(driver, 'SIN0', '100000009');\nawait selectComboById(driver, 'MaritalStatus0', 'Common-law');\nawait selectToggleById(driver, 'domchanged0', '0');\n        await selectToggleById(driver, 'IsLinkedReturn0','0');\n        await nextClick(driver);\n        await addressExpandClick(driver, 'fullAdd');\nawait setInputById(driver, 'StreetNo0', '25');\nawait setInputById(driver, 'StreetName0', 'jaen st');\nawait setInputById(driver, 'City0', 'etobicoke');\nawait selectComboById(driver, 'ProvinceOfRes0', 'Northwest Territories');\n        await setInputById(driver, 'PCodeC0', 'X1A 0A1');\n        await selectToggleById(driver, 'FirsttimeFiler0tp', '1');\nawait selectToggleById(driver, 'quesFP0', '0');\nawait selectToggleById(driver, 'quesPrinResi0', '0');\n        await nextClick(driver);\n        await selectToggleById(driver, 'spPartYear0tp', '0');\n        await setInputById(driver, 'SpName0', 'jone');\nawait setInputById(driver, 'SpSurname0', 'smith');\nawait selectDateById(driver, 'SpDOB0', '1955/10/10');\n        await setInputById(driver, 'SpSIN0', '100000025');\n        await selectToggleById(driver, 'bSpDisabled0tp', '0');\n        await selectToggleById(driver, 'SpouseFamilyCaregiver0tp', '0');\n        await nextClick(driver);\n        await nextClick(driver);\n        await selectTab(driver, 'Income');\nawait selectTab(driver, 'IncomeProfile');\nawait selectToggleById(driver, 'WorkedInYOR0', '1');\n        await clickDivById(driver, 'T4Aa');\n        await nextClick(driver);\n        await setInputById(driver, 'T4ABox160tp', '50000');\n        await nextClick(driver);\n        await selectTab(driver, 'Review');\n        await selectTab(driver, 'PensionSplit');\n        await selectToggleById(driver, 'qPension0tp', '1');\n        await selectToggleById(driver, 'PensionSplitComboT0tp', '1');\n        await setInputById(driver, 'PSplit_100tp', '25000');\n        await selectToggleById(driver, 'psplitQuesPension0tp', '0');\n        await nextClick(driver);\n        await nextClick(driver);\n        savedForm = await getServerFileSp(driver,'sp');",
                            "err": {},
                            "uuid": "1f9d2f34-e025-4934-9b3c-15b1c25693b2",
                            "parentUUID": "ef0d822b-bccd-4793-9b9d-c41b7a7d4125",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "afterHooks": [
                        {
                            "title": "\"after all\" hook",
                            "fullTitle": "NetIncome_Line210_2SP Input F21000 without an entry at F68020.  Software must not allow.  //(TP married, Not Linked, TP under 65, SP under 65TP T4A (Box 16) $ 50,000. Elected Pension Split =$ 30,000. Red Diag should appear and wont let you chose more than 50% of Maximum pension split) \"after all\" hook",
                            "timedOut": false,
                            "duration": 1416,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "await logoutById(driver);\nawait driver.quit();",
                            "err": {},
                            "uuid": "5bfa0b07-85d0-4ba5-8718-a722b9510ff3",
                            "parentUUID": "ef0d822b-bccd-4793-9b9d-c41b7a7d4125",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "tests": [
                        {
                            "title": "software requires a response for  F11600 should be bulit .   allow.value ==undefined",
                            "fullTitle": "NetIncome_Line210_2SP Input F21000 without an entry at F68020.  Software must not allow.  //(TP married, Not Linked, TP under 65, SP under 65TP T4A (Box 16) $ 50,000. Elected Pension Split =$ 30,000. Red Diag should appear and wont let you chose more than 50% of Maximum pension split) software requires a response for  F11600 should be bulit .   allow.value ==undefined",
                            "timedOut": false,
                            "duration": 1,
                            "state": "failed",
                            "speed": null,
                            "pass": false,
                            "fail": true,
                            "pending": false,
                            "context": null,
                            "code": "let  deductionForElectedSplitPensionAmountFeild = getFieldId('11600');\nlet deductionForElectedSplitPensionAmount = savedForm[deductionForElectedSplitPensionAmountFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+deductionForElectedSplitPensionAmount;\nassert.strictEqual(deductionForElectedSplitPensionAmount ,'25000',' Software requires a response for  F11600 should be bulit .');",
                            "err": {
                                "message": "AssertionError:  Software requires a response for  F11600 should be bulit .",
                                "estack": "AssertionError [ERR_ASSERTION]:  Software requires a response for  F11600 should be bulit .\n    at Context.<anonymous> (my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_Line210_2SP.js:72:20)\n    at processImmediate (internal/timers.js:456:21)",
                                "diff": null
                            },
                            "uuid": "91f194b2-0dc3-4eb5-a578-6c9e84e94e6f",
                            "parentUUID": "ef0d822b-bccd-4793-9b9d-c41b7a7d4125",
                            "isHook": false,
                            "skipped": false
                        }
                    ],
                    "suites": [],
                    "passes": [],
                    "failures": [
                        "91f194b2-0dc3-4eb5-a578-6c9e84e94e6f"
                    ],
                    "pending": [],
                    "skipped": [],
                    "duration": 1,
                    "root": false,
                    "rootEmpty": false,
                    "_timeout": 200000
                },
                {
                    "uuid": "41a14dc2-0f68-416f-949b-27ba1e25d345",
                    "title": "NetIncome_Line210_2TP Input F21000 without an entry at F68020.  Software must not allow.  //(TP married, Not Linked, TP under 65, SP under 65TP T4A (Box 16) $ 50,000. Elected Pension Split =$ 30,000. Red Diag should appear and wont let you chose more than 50% of Maximum pension split)",
                    "fullFile": "E:\\Rita\\Taxtron\\WebTest\\my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_Line210_2TP.js",
                    "file": "\\my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_Line210_2TP.js",
                    "beforeHooks": [
                        {
                            "title": "\"before all\" hook",
                            "fullTitle": "NetIncome_Line210_2TP Input F21000 without an entry at F68020.  Software must not allow.  //(TP married, Not Linked, TP under 65, SP under 65TP T4A (Box 16) $ 50,000. Elected Pension Split =$ 30,000. Red Diag should appear and wont let you chose more than 50% of Maximum pension split) \"before all\" hook",
                            "timedOut": false,
                            "duration": 70238,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "driver = new Builder()\n\t.withCapabilities(Capabilities.chrome().setAcceptInsecureCerts(true))\n\t.build();\n//driver.manage().window().setRect({ width: 1366, height: 768 });\nawait login(driver, 'ritakumar@outlook.com', 'rishu12rashi');\nawait selectNewReturn(driver,province);\nawait switchToastOff(driver);\n        await setInputById(driver, 'Firstnames0', 'king');\nawait setInputById(driver, 'Surname0', 'smith');\nawait selectDateById(driver, 'DOB0', '1955/10/10');\nawait setInputById(driver, 'SIN0', '100000009');\nawait selectComboById(driver, 'MaritalStatus0', 'Common-law');\nawait selectToggleById(driver, 'domchanged0', '0');\n        await selectToggleById(driver, 'IsLinkedReturn0','0');\n        await nextClick(driver);\n        await addressExpandClick(driver, 'fullAdd');\nawait setInputById(driver, 'StreetNo0', '25');\nawait setInputById(driver, 'StreetName0', 'jaen st');\nawait setInputById(driver, 'City0', 'etobicoke');\nawait selectComboById(driver, 'ProvinceOfRes0', 'Northwest Territories');\n        await setInputById(driver, 'PCodeC0', 'X1A 0A1');\n        await selectToggleById(driver, 'FirsttimeFiler0tp', '1');\nawait selectToggleById(driver, 'quesFP0', '0');\nawait selectToggleById(driver, 'quesPrinResi0', '0');\n        await nextClick(driver);\n        await selectToggleById(driver, 'spPartYear0tp', '0');\n        await setInputById(driver, 'SpName0', 'jone');\nawait setInputById(driver, 'SpSurname0', 'smith');\nawait selectDateById(driver, 'SpDOB0', '1955/10/10');\n        await setInputById(driver, 'SpSIN0', '100000025');\n        await selectToggleById(driver, 'bSpDisabled0tp', '0');\n        await selectToggleById(driver, 'SpouseFamilyCaregiver0tp', '0');\n        await nextClick(driver);\n        await nextClick(driver);\n        await selectTab(driver, 'Income');\nawait selectTab(driver, 'IncomeProfile');\nawait selectToggleById(driver, 'WorkedInYOR0', '1');\n        await clickDivById(driver, 'T4Aa');\n        await nextClick(driver);\n        await setInputById(driver, 'T4ABox160tp', '50000');\n        await nextClick(driver);\n        await selectTab(driver, 'Review');\n        await selectTab(driver, 'PensionSplit');\n        await selectToggleById(driver, 'qPension0tp', '1');\n        await selectToggleById(driver, 'PensionSplitComboT0tp', '1');\n        await setInputById(driver, 'PSplit_100tp', '25000');\n        await nextClick(driver);\n        await nextClick(driver);\n        savedForm = await getServerFile(driver);",
                            "err": {},
                            "uuid": "974c0c79-941f-446a-b410-f4a5be244554",
                            "parentUUID": "41a14dc2-0f68-416f-949b-27ba1e25d345",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "afterHooks": [
                        {
                            "title": "\"after all\" hook",
                            "fullTitle": "NetIncome_Line210_2TP Input F21000 without an entry at F68020.  Software must not allow.  //(TP married, Not Linked, TP under 65, SP under 65TP T4A (Box 16) $ 50,000. Elected Pension Split =$ 30,000. Red Diag should appear and wont let you chose more than 50% of Maximum pension split) \"after all\" hook",
                            "timedOut": false,
                            "duration": 5363,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "await logoutById(driver);\nawait driver.quit();",
                            "err": {},
                            "uuid": "29263e7d-3441-46cd-ba6e-911528e1790c",
                            "parentUUID": "41a14dc2-0f68-416f-949b-27ba1e25d345",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "tests": [
                        {
                            "title": "software requires a response for  F11500 should be bulit .   allow.value ==50000",
                            "fullTitle": "NetIncome_Line210_2TP Input F21000 without an entry at F68020.  Software must not allow.  //(TP married, Not Linked, TP under 65, SP under 65TP T4A (Box 16) $ 50,000. Elected Pension Split =$ 30,000. Red Diag should appear and wont let you chose more than 50% of Maximum pension split) software requires a response for  F11500 should be bulit .   allow.value ==50000",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let  deductionForElectedSplitPensionAmountFeild = getFieldId('11500');\nlet deductionForElectedSplitPensionAmount = savedForm[deductionForElectedSplitPensionAmountFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+deductionForElectedSplitPensionAmount;\nassert.strictEqual(deductionForElectedSplitPensionAmount ,'50000',' Software requires a response for  F11500 should be bulit .');",
                            "err": {},
                            "uuid": "7f9e9f46-a819-4682-92f5-0c2187f2aa24",
                            "parentUUID": "41a14dc2-0f68-416f-949b-27ba1e25d345",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": "software requires a response for  F21000 should be bulit .   allow.value ==25000",
                            "fullTitle": "NetIncome_Line210_2TP Input F21000 without an entry at F68020.  Software must not allow.  //(TP married, Not Linked, TP under 65, SP under 65TP T4A (Box 16) $ 50,000. Elected Pension Split =$ 30,000. Red Diag should appear and wont let you chose more than 50% of Maximum pension split) software requires a response for  F21000 should be bulit .   allow.value ==25000",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let  deductionForElectedSplitPensionAmountFeild = getFieldId('21000');\nlet deductionForElectedSplitPensionAmount = savedForm[deductionForElectedSplitPensionAmountFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+deductionForElectedSplitPensionAmount;\nassert.strictEqual(deductionForElectedSplitPensionAmount ,'25000',' Software requires a response for  F21000 should be bulit .');",
                            "err": {},
                            "uuid": "cdaad138-f9a0-460a-8ac8-3d11f9c14761",
                            "parentUUID": "41a14dc2-0f68-416f-949b-27ba1e25d345",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": "software requires a response for  F68020 should be bulit .   allow.value ==50000",
                            "fullTitle": "NetIncome_Line210_2TP Input F21000 without an entry at F68020.  Software must not allow.  //(TP married, Not Linked, TP under 65, SP under 65TP T4A (Box 16) $ 50,000. Elected Pension Split =$ 30,000. Red Diag should appear and wont let you chose more than 50% of Maximum pension split) software requires a response for  F68020 should be bulit .   allow.value ==50000",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let totalEligiblePensionsOrSuperannuationAnnuityAndRRSPRRIFPaymentsIncludinglifeIncomeFundReceivedFeild = getFieldId('68020');\nlet totalEligiblePensionsOrSuperannuationAnnuityAndRRSPRRIFPaymentsIncludinglifeIncomeFundReceived = savedForm[totalEligiblePensionsOrSuperannuationAnnuityAndRRSPRRIFPaymentsIncludinglifeIncomeFundReceivedFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+totalEligiblePensionsOrSuperannuationAnnuityAndRRSPRRIFPaymentsIncludinglifeIncomeFundReceived;\nassert.equal(totalEligiblePensionsOrSuperannuationAnnuityAndRRSPRRIFPaymentsIncludinglifeIncomeFundReceived ,'50000',' Software requires a response for  F68020 should be bulit .');",
                            "err": {},
                            "uuid": "327615e2-126c-4083-a37c-9e275630dfc4",
                            "parentUUID": "41a14dc2-0f68-416f-949b-27ba1e25d345",
                            "isHook": false,
                            "skipped": false
                        }
                    ],
                    "suites": [],
                    "passes": [
                        "7f9e9f46-a819-4682-92f5-0c2187f2aa24",
                        "cdaad138-f9a0-460a-8ac8-3d11f9c14761",
                        "327615e2-126c-4083-a37c-9e275630dfc4"
                    ],
                    "failures": [],
                    "pending": [],
                    "skipped": [],
                    "duration": 0,
                    "root": false,
                    "rootEmpty": false,
                    "_timeout": 200000
                },
                {
                    "uuid": "e07cf2d7-f756-4d6a-b48e-ea63a3e2d1a0",
                    "title": "NetIncome_Line210_3SP---Input F21000 without an entry at F68020.  Software must not allow..   //(Linked Return: TP married, both 65+TP T4A pesnion of $50,000,SP died 2019-01-01. Pension split)  ",
                    "fullFile": "E:\\Rita\\Taxtron\\WebTest\\my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_Line210_4SP.js",
                    "file": "\\my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_Line210_4SP.js",
                    "beforeHooks": [
                        {
                            "title": "\"before all\" hook",
                            "fullTitle": "NetIncome_Line210_3SP---Input F21000 without an entry at F68020.  Software must not allow..   //(Linked Return: TP married, both 65+TP T4A pesnion of $50,000,SP died 2019-01-01. Pension split)   \"before all\" hook",
                            "timedOut": false,
                            "duration": 76027,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "driver = new Builder()\n    .withCapabilities(Capabilities.chrome().setAcceptInsecureCerts(true))\n    .build();\ndriver.manage().window().setRect({ width: 1366, height: 768 });\nawait login(driver, 'ritakumar@outlook.com', 'rishu12rashi');\nawait selectNewReturn(driver,province);\nawait switchToastOff(driver);\n    \nawait nextClick(driver);\nawait setInputById(driver, 'Firstnames0', 'king');\nawait setInputById(driver, 'Surname0', 'smith');\nawait selectDateById(driver, 'DOB0', '1954/10/10');\nawait setInputById(driver, 'SIN0', '100000009');\nawait selectComboById(driver, 'MaritalStatus0', 'Widowed');\nawait selectToggleById(driver, 'domchanged0tp', '1');\nawait selectAgeDateById(driver, 'DOM0tp',Fed.TaxYear,'0', '/01/01');\nawait driver.findElement(By.name('DOM0tp')).sendKeys(Key.TAB);\nawait selectToggleById(driver, 'IsLinkedReturn0', '1');\nawait nextClick(driver);\nawait setInputById(driver, 'fullAdd0', '880 21 St NE, Salmon Arm, YT M2M 3X4, Canada');\nawait selectToggleById(driver, 'quesFP0', '0');\nawait selectToggleById(driver, 'quesPrinResi0', '0');\nawait nextClick(driver);\nawait nextClick(driver);\nawait setInputById(driver, 'Firstnames0sp', 'jone');\nawait setInputById(driver, 'Surname0sp', 'smith');\nawait selectDateById(driver, 'DOB0sp', '1954/10/10');\nawait setInputById(driver, 'SIN0sp', '100000017');\nawait selectComboById(driver, 'MaritalStatus0sp', 'Married');\nawait selectComboById(driver, 'Province0sp', 'New Brunswick');\nawait nextClick(driver);\nawait selectToggleById(driver, 'quesFP0sp', '0');\nawait selectToggleById(driver, 'bDeceased0sp', '1');\nawait selectDateById(driver, 'DeceasedDate0sp', '2020/01/01');\nawait nextClick(driver);\nawait selectTab(driver, 'Income');\n\t\t    await selectToggleById(driver, 'WorkedInYOR0tp', '1');\nawait clickDivById(driver, 'T4Aa');\nawait nextClick(driver);\nawait selectToggleById(driver, 'WorkedInYOR0sp', '0');\nawait nextClick(driver);\nawait setInputById(driver, 'T4ABox160tp', '50000');\nawait nextClick(driver);\nawait selectTab(driver, 'Review');\nawait selectTab(driver, 'PensionSplit');\nawait selectToggleById(driver, 'qPension0tp', '1');\nawait selectToggleById(driver, 'PensionSplitComboT0tp', '1');\nawait setInputById(driver, 'PSplit_100tp', '2083.34');\nawait nextClick(driver);\nsavedForm = await getServerFileSp(driver,'sp');",
                            "err": {},
                            "uuid": "36778245-17b9-41db-807f-1e74763b7ccc",
                            "parentUUID": "e07cf2d7-f756-4d6a-b48e-ea63a3e2d1a0",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "afterHooks": [
                        {
                            "title": "\"after all\" hook",
                            "fullTitle": "NetIncome_Line210_3SP---Input F21000 without an entry at F68020.  Software must not allow..   //(Linked Return: TP married, both 65+TP T4A pesnion of $50,000,SP died 2019-01-01. Pension split)   \"after all\" hook",
                            "timedOut": false,
                            "duration": 5510,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "await logoutById(driver);\nawait driver.quit();",
                            "err": {},
                            "uuid": "abce878a-b4b1-43dc-bb47-0b9c3927ea49",
                            "parentUUID": "e07cf2d7-f756-4d6a-b48e-ea63a3e2d1a0",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "tests": [
                        {
                            "title": "software requires a response for  F11600 should be bulit .   allow.value ==2083",
                            "fullTitle": "NetIncome_Line210_3SP---Input F21000 without an entry at F68020.  Software must not allow..   //(Linked Return: TP married, both 65+TP T4A pesnion of $50,000,SP died 2019-01-01. Pension split)   software requires a response for  F11600 should be bulit .   allow.value ==2083",
                            "timedOut": false,
                            "duration": 1,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let  deductionForElectedSplitPensionAmountFeild = getFieldId('11600');\nlet deductionForElectedSplitPensionAmount = savedForm[deductionForElectedSplitPensionAmountFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+deductionForElectedSplitPensionAmount;\nassert.strictEqual(deductionForElectedSplitPensionAmount ,'2083',' Software requires a response for  F11600 should be bulit .');",
                            "err": {},
                            "uuid": "fbd8d920-76f9-44a2-8dbf-70112102f95e",
                            "parentUUID": "e07cf2d7-f756-4d6a-b48e-ea63a3e2d1a0",
                            "isHook": false,
                            "skipped": false
                        }
                    ],
                    "suites": [],
                    "passes": [
                        "fbd8d920-76f9-44a2-8dbf-70112102f95e"
                    ],
                    "failures": [],
                    "pending": [],
                    "skipped": [],
                    "duration": 1,
                    "root": false,
                    "rootEmpty": false,
                    "_timeout": 150000
                },
                {
                    "uuid": "fccd8703-8d8d-4e05-8785-d15a5d86e918",
                    "title": "NetIncome_Line210_3TP---Input F21000 without an entry at F68020.  Software must not allow..   //(Linked Return: TP married, both 65+TP T4A pesnion of $50,000,SP died 2019-01-01. Pension split)  ",
                    "fullFile": "E:\\Rita\\Taxtron\\WebTest\\my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_Line210_4TP.js",
                    "file": "\\my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_Line210_4TP.js",
                    "beforeHooks": [
                        {
                            "title": "\"before all\" hook",
                            "fullTitle": "NetIncome_Line210_3TP---Input F21000 without an entry at F68020.  Software must not allow..   //(Linked Return: TP married, both 65+TP T4A pesnion of $50,000,SP died 2019-01-01. Pension split)   \"before all\" hook",
                            "timedOut": false,
                            "duration": 72862,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "driver = new Builder()\n    .withCapabilities(Capabilities.chrome().setAcceptInsecureCerts(true))\n    .build();\ndriver.manage().window().setRect({ width: 1366, height: 768 });\nawait login(driver, 'ritakumar@outlook.com', 'rishu12rashi');\nawait selectNewReturn(driver,province);\nawait switchToastOff(driver);\n    \nawait nextClick(driver);\nawait setInputById(driver, 'Firstnames0', 'king');\nawait setInputById(driver, 'Surname0', 'smith');\nawait selectDateById(driver, 'DOB0', '1954/10/10');\nawait setInputById(driver, 'SIN0', '100000009');\nawait selectComboById(driver, 'MaritalStatus0', 'Widowed');\nawait selectToggleById(driver, 'domchanged0tp', '1');\nawait selectAgeDateById(driver, 'DOM0tp',Fed.TaxYear,'0', '/01/01');\nawait driver.findElement(By.name('DOM0tp')).sendKeys(Key.TAB);\nawait selectToggleById(driver, 'IsLinkedReturn0', '1');\nawait nextClick(driver);\nawait setInputById(driver, 'fullAdd0', '880 21 St NE, Salmon Arm, YT M2M 3X4, Canada');\nawait selectToggleById(driver, 'quesFP0', '0');\nawait selectToggleById(driver, 'quesPrinResi0', '0');\nawait nextClick(driver);\nawait nextClick(driver);\nawait setInputById(driver, 'Firstnames0sp', 'jone');\nawait setInputById(driver, 'Surname0sp', 'smith');\nawait selectDateById(driver, 'DOB0sp', '1954/10/10');\nawait setInputById(driver, 'SIN0sp', '100000017');\nawait selectComboById(driver, 'MaritalStatus0sp', 'Married');\nawait selectComboById(driver, 'Province0sp', 'New Brunswick');\nawait nextClick(driver);\nawait selectToggleById(driver, 'quesFP0sp', '0');\nawait selectToggleById(driver, 'bDeceased0sp', '1');\nawait selectDateById(driver, 'DeceasedDate0sp', '2020/01/01');\nawait nextClick(driver);\nawait selectTab(driver, 'Income');\n\t\t    await selectToggleById(driver, 'WorkedInYOR0tp', '1');\nawait clickDivById(driver, 'T4Aa');\nawait nextClick(driver);\nawait selectToggleById(driver, 'WorkedInYOR0sp', '0');\nawait nextClick(driver);\nawait setInputById(driver, 'T4ABox160tp', '50000');\nawait nextClick(driver);\nawait selectTab(driver, 'Review');\nawait selectTab(driver, 'PensionSplit');\nawait selectToggleById(driver, 'qPension0tp', '1');\nawait selectToggleById(driver, 'PensionSplitComboT0tp', '1');\nawait setInputById(driver, 'PSplit_100tp', '2083.34');\nawait nextClick(driver);\nsavedForm = await getServerFile(driver);",
                            "err": {},
                            "uuid": "64af64b3-81ef-4020-806e-26da3b063791",
                            "parentUUID": "fccd8703-8d8d-4e05-8785-d15a5d86e918",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "afterHooks": [
                        {
                            "title": "\"after all\" hook",
                            "fullTitle": "NetIncome_Line210_3TP---Input F21000 without an entry at F68020.  Software must not allow..   //(Linked Return: TP married, both 65+TP T4A pesnion of $50,000,SP died 2019-01-01. Pension split)   \"after all\" hook",
                            "timedOut": false,
                            "duration": 1365,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "await logoutById(driver);\nawait driver.quit();",
                            "err": {},
                            "uuid": "9a335cd8-80e2-4924-90cc-137a0b2a3a4b",
                            "parentUUID": "fccd8703-8d8d-4e05-8785-d15a5d86e918",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "tests": [
                        {
                            "title": "software requires a response for  F11500 should be bulit .   allow.value ==50000",
                            "fullTitle": "NetIncome_Line210_3TP---Input F21000 without an entry at F68020.  Software must not allow..   //(Linked Return: TP married, both 65+TP T4A pesnion of $50,000,SP died 2019-01-01. Pension split)   software requires a response for  F11500 should be bulit .   allow.value ==50000",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let  deductionForElectedSplitPensionAmountFeild = getFieldId('11500');\nlet deductionForElectedSplitPensionAmount = savedForm[deductionForElectedSplitPensionAmountFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+deductionForElectedSplitPensionAmount;\nassert.strictEqual(deductionForElectedSplitPensionAmount ,'50000',' Software requires a response for  F11500 should be bulit .');",
                            "err": {},
                            "uuid": "2fda1cf8-2966-4bed-a2df-9b7e2dc29cc6",
                            "parentUUID": "fccd8703-8d8d-4e05-8785-d15a5d86e918",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": "software requires a response for  F21000 should be bulit .   allow.value ==2083",
                            "fullTitle": "NetIncome_Line210_3TP---Input F21000 without an entry at F68020.  Software must not allow..   //(Linked Return: TP married, both 65+TP T4A pesnion of $50,000,SP died 2019-01-01. Pension split)   software requires a response for  F21000 should be bulit .   allow.value ==2083",
                            "timedOut": false,
                            "duration": 1,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let  deductionForElectedSplitPensionAmountFeild = getFieldId('21000');\nlet deductionForElectedSplitPensionAmount = savedForm[deductionForElectedSplitPensionAmountFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+deductionForElectedSplitPensionAmount;\nassert.strictEqual(deductionForElectedSplitPensionAmount ,'2083',' Software requires a response for  F21000 should be bulit .');",
                            "err": {},
                            "uuid": "3de44021-43c1-41d1-bb1c-a8ca3595b0b4",
                            "parentUUID": "fccd8703-8d8d-4e05-8785-d15a5d86e918",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": "software requires a response for  F68030 should be bulit .   allow.value ==1",
                            "fullTitle": "NetIncome_Line210_3TP---Input F21000 without an entry at F68020.  Software must not allow..   //(Linked Return: TP married, both 65+TP T4A pesnion of $50,000,SP died 2019-01-01. Pension split)   software requires a response for  F68030 should be bulit .   allow.value ==1",
                            "timedOut": false,
                            "duration": 1,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let numberOfMonthsMarriedOrlivingCommonlawInTheCurrentTaxYearFeild = getFieldId('68030');\nlet numberOfMonthsMarriedOrlivingCommonlawInTheCurrentTaxYear = savedForm[numberOfMonthsMarriedOrlivingCommonlawInTheCurrentTaxYearFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+numberOfMonthsMarriedOrlivingCommonlawInTheCurrentTaxYear;\nassert.strictEqual(numberOfMonthsMarriedOrlivingCommonlawInTheCurrentTaxYear ,'1',' Software requires a response for  F68030 should be bulit .');",
                            "err": {},
                            "uuid": "bceca5c8-ab97-4227-a722-9520449f2e3d",
                            "parentUUID": "fccd8703-8d8d-4e05-8785-d15a5d86e918",
                            "isHook": false,
                            "skipped": false
                        }
                    ],
                    "suites": [],
                    "passes": [
                        "2fda1cf8-2966-4bed-a2df-9b7e2dc29cc6",
                        "3de44021-43c1-41d1-bb1c-a8ca3595b0b4",
                        "bceca5c8-ab97-4227-a722-9520449f2e3d"
                    ],
                    "failures": [],
                    "pending": [],
                    "skipped": [],
                    "duration": 2,
                    "root": false,
                    "rootEmpty": false,
                    "_timeout": 150000
                },
                {
                    "uuid": "22fc2787-d5c1-4b6a-bf27-7257f3c8626c",
                    "title": "NetIncome_Line210_5 Marital Status = married.  Input F21000 without providing the spouses social insurance number on Pg. 1 of the return.  Software must not allow.  //(TP married, both 65. TP T4A pesnion of $50,000Not Linked - SP No income, No SIN# for SP)",
                    "fullFile": "E:\\Rita\\Taxtron\\WebTest\\my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_Line210_5.js",
                    "file": "\\my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_Line210_5.js",
                    "beforeHooks": [
                        {
                            "title": "\"before all\" hook",
                            "fullTitle": "NetIncome_Line210_5 Marital Status = married.  Input F21000 without providing the spouses social insurance number on Pg. 1 of the return.  Software must not allow.  //(TP married, both 65. TP T4A pesnion of $50,000Not Linked - SP No income, No SIN# for SP) \"before all\" hook",
                            "timedOut": false,
                            "duration": 107010,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "driver = new Builder()\n\t.withCapabilities(Capabilities.chrome().setAcceptInsecureCerts(true))\n\t.build();\n//driver.manage().window().setRect({ width: 1366, height: 768 });\nawait login(driver, 'ritakumar@outlook.com', 'rishu12rashi');\nawait selectNewReturn(driver,province);\nawait switchToastOff(driver);\n        await setInputById(driver, 'Firstnames0', 'king');\nawait setInputById(driver, 'Surname0', 'smith');\n        await selectAgeDateById(driver, 'DOB0',Fed.TaxYear,'66', '/10/10');\nawait setInputById(driver, 'SIN0', '100000009');\nawait selectComboById(driver, 'MaritalStatus0', 'Common-law');\nawait selectToggleById(driver, 'domchanged0', '0');\n        await selectToggleById(driver, 'IsLinkedReturn0','0');\n        await nextClick(driver);\n        await addressExpandClick(driver, 'fullAdd');\nawait setInputById(driver, 'StreetNo0', '25');\nawait setInputById(driver, 'StreetName0', 'jaen st');\nawait setInputById(driver, 'City0', 'etobicoke');\nawait selectComboById(driver, 'ProvinceOfRes0', 'Newfoundland and Labrador');\n        await setInputById(driver, 'PCodeC0', 'A0A 1C0');\n        await selectToggleById(driver, 'quesFP0', '0');\nawait selectToggleById(driver, 'quesPrinResi0', '0');\n        await nextClick(driver);\n        await selectToggleById(driver, 'spPartYear0tp', '0');\n        await setInputById(driver, 'SpName0', 'jone');\nawait setInputById(driver, 'SpSurname0', 'smith');\n        await selectAgeDateById(driver, 'SpDOB0',Fed.TaxYear,'66', '/10/10');\n        await setInputById(driver, 'SpSIN0', '');\n        await setInputById(driver, 'spNIEntered0tp', '0');\n        await selectToggleById(driver, 'nilSpIncomeConfirmed0tp', '1');\n        await selectToggleById(driver, 'bSpDisabled0tp', '0');\n        await selectToggleById(driver, 'SpouseFamilyCaregiver0tp', '0');\n        await setInputById(driver, 'spS1Line45DE0tp', '0');\n        await setInputById(driver, 'spProvTax0tp', '0');\n        await nextClick(driver);\n        await nextClick(driver);\n        await selectTab(driver, 'Income');\nawait selectTab(driver, 'IncomeProfile');\nawait selectToggleById(driver, 'WorkedInYOR0', '1');\n        await clickDivById(driver, 'T4Aa');\n        await nextClick(driver);\n        await setInputById(driver, 'T4ABox160tp', '50000');\n        await nextClick(driver);\n        await selectTab(driver, 'Review');\n        await selectTab(driver, 'PensionSplit');\n        await selectToggleById(driver, 'qPension0tp', '1');\n        await selectToggleById(driver, 'PensionSplitComboT0tp', '1');\n        await setInputById(driver, 'PSplit_100tp', '25000');\n        await selectToggleById(driver, 'psplitQuesPension0tp', '0');\n        await nextClick(driver);\n        await nextClick(driver);\n        await selectToggleById(driver, 'Language0tp', '1');\n        await selectToggleById(driver, 'OASNR0tp', '0');\n        await nextClick(driver);\n        await selectComboById(driver, 'MailOptions0tp', 'Already registered');\n        await nextClick(driver);\n        await selectTab(driver, 'sReview');\n        await nextClick(driver);\n        await nextClick(driver);\n        await nextClick(driver);\n        await nextClick(driver);\n        await nextClick(driver);\n        await nextClick(driver);\n        await nextClick(driver);\n        await nextClick(driver);\n        await nextClick(driver);\n        await nextClick(driver);\n        await nextClick(driver);\n        await nextClick(driver);\n        await nextClick(driver);",
                            "err": {},
                            "uuid": "7a6f2843-cb34-4e73-8119-936ac37719c3",
                            "parentUUID": "22fc2787-d5c1-4b6a-bf27-7257f3c8626c",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "afterHooks": [
                        {
                            "title": "\"after all\" hook",
                            "fullTitle": "NetIncome_Line210_5 Marital Status = married.  Input F21000 without providing the spouses social insurance number on Pg. 1 of the return.  Software must not allow.  //(TP married, both 65. TP T4A pesnion of $50,000Not Linked - SP No income, No SIN# for SP) \"after all\" hook",
                            "timedOut": false,
                            "duration": 5491,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "await logoutById(driver);\nawait driver.quit();",
                            "err": {},
                            "uuid": "7a2754d2-9cf1-49c4-9ced-d20ea20d2d81",
                            "parentUUID": "22fc2787-d5c1-4b6a-bf27-7257f3c8626c",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "tests": [
                        {
                            "title": "error should be display",
                            "fullTitle": "NetIncome_Line210_5 Marital Status = married.  Input F21000 without providing the spouses social insurance number on Pg. 1 of the return.  Software must not allow.  //(TP married, both 65. TP T4A pesnion of $50,000Not Linked - SP No income, No SIN# for SP) error should be display",
                            "timedOut": false,
                            "duration": 69,
                            "state": "passed",
                            "speed": "medium",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let errDisplayed = await driver.findElement(By.css('#SpSIN0')).isDisplayed();\nassert.strictEqual(errDisplayed, true, 'Spouse or common law partners SIN missing.');",
                            "err": {},
                            "uuid": "cd9c9631-b949-4e9b-bc12-0e2a7f37550e",
                            "parentUUID": "22fc2787-d5c1-4b6a-bf27-7257f3c8626c",
                            "isHook": false,
                            "skipped": false
                        }
                    ],
                    "suites": [],
                    "passes": [
                        "cd9c9631-b949-4e9b-bc12-0e2a7f37550e"
                    ],
                    "failures": [],
                    "pending": [],
                    "skipped": [],
                    "duration": 69,
                    "root": false,
                    "rootEmpty": false,
                    "_timeout": 200000
                },
                {
                    "uuid": "387d68d3-2336-43de-a6ee-c827068a97e4",
                    "title": "NetIncome_Line210_6--Marital Status = married.  Input F21000 without providing the spouses social insurance number on Pg. 1 of the return.  Software must not allow.  //(TP married, both 65+TP T4A pesnion of $50,000 Linked Return - SP No income, No SIN# for SP).  ",
                    "fullFile": "E:\\Rita\\Taxtron\\WebTest\\my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_Line210_6.js",
                    "file": "\\my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_Line210_6.js",
                    "beforeHooks": [
                        {
                            "title": "\"before all\" hook",
                            "fullTitle": "NetIncome_Line210_6--Marital Status = married.  Input F21000 without providing the spouses social insurance number on Pg. 1 of the return.  Software must not allow.  //(TP married, both 65+TP T4A pesnion of $50,000 Linked Return - SP No income, No SIN# for SP).   \"before all\" hook",
                            "timedOut": false,
                            "duration": 122227,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "driver = new Builder()\n    .withCapabilities(Capabilities.chrome().setAcceptInsecureCerts(true))\n    .build();\ndriver.manage().window().setRect({ width: 1366, height: 768 });\nawait login(driver, 'ritakumar@outlook.com', 'rishu12rashi');\nawait selectNewReturn(driver,province);\nawait switchToastOff(driver);\n    \nawait nextClick(driver);\nawait setInputById(driver, 'Firstnames0', 'king');\nawait setInputById(driver, 'Surname0', 'smith');\nawait selectDateById(driver, 'DOB0', '1954/10/10');\nawait setInputById(driver, 'SIN0', '100000009');\nawait selectComboById(driver, 'MaritalStatus0', 'Common-law');\nawait selectToggleById(driver, 'domchanged0', '0');\nawait selectToggleById(driver, 'IsLinkedReturn0', '1');\nawait nextClick(driver);\nawait addressExpandClick(driver, 'fullAdd');\nawait setInputById(driver, 'StreetNo0', '25');\nawait setInputById(driver, 'StreetName0', 'JANE ST');\nawait setInputById(driver, 'City0', 'ETOBICOKE');\nawait selectComboById(driver, 'ProvinceOfRes0', 'Manitoba');\nawait setInputById(driver, 'PCodeC0', 'R0H 1N1');\nawait selectToggleById(driver, 'quesFP0', '0');\nawait selectToggleById(driver, 'quesPrinResi0', '0');\nawait selectToggleById(driver, 'qCitizen0', '0');\nawait nextClick(driver);\nawait nextClick(driver);\nawait setInputById(driver, 'Firstnames0sp', 'jone');\nawait setInputById(driver, 'Surname0sp', 'smith');\nawait selectAgeDateById(driver, 'DOB0sp',Fed.TaxYear,'66', '/10/10');\nawait setInputById(driver, 'SIN0sp', '');\nawait selectComboById(driver, 'Province0sp', 'British Columbia');\nawait nextClick(driver);\nawait selectTab(driver, 'Income');\n\t\t    await selectToggleById(driver, 'WorkedInYOR0tp', '1');\nawait clickDivById(driver, 'T4Aa');\nawait nextClick(driver);\nawait selectToggleById(driver, 'WorkedInYOR0sp', '0');\n//await clickDivById(driver, 'T4Aa');\nawait nextClick(driver);\nawait setInputById(driver, 'T4ABox160tp', '50000');\nawait nextClick(driver);\nawait selectTab(driver, 'Review');\nawait selectTab(driver, 'PensionSplit');\nawait selectToggleById(driver, 'qPension0tp', '1');\nawait selectToggleById(driver, 'PensionSplitComboT0tp', '1');\nawait setInputById(driver, 'PSplit_100tp', '20000');\nawait selectToggleById(driver, 'psplitQuesPension0tp', '0');\nawait nextClick(driver);\nawait nextClick(driver);\nawait selectToggleById(driver, 'Language0tp', '1');\nawait selectToggleById(driver, 'OASNR0tp', '0');\nawait nextClick(driver);\nawait selectComboById(driver, 'MailOptions0tp', 'Already registered');\nawait nextClick(driver);\nawait selectToggleById(driver, 'Language0sp', '1');\nawait selectToggleById(driver, 'OASNR0sp', '0');\nawait nextClick(driver);\nawait selectComboById(driver, 'MailOptions0sp', 'Already registered');\nawait nextClick(driver);\nawait selectTab(driver, 'sReview');\nawait nextClick(driver);\nawait nextClick(driver);\nawait nextClick(driver);\nawait nextClick(driver);\nawait nextClick(driver);\nawait nextClick(driver);\nawait nextClick(driver);\nawait nextClick(driver);\nawait nextClick(driver);\nawait nextClick(driver);\nawait nextClick(driver);\nawait nextClick(driver);\nawait nextClick(driver);\nawait nextClick(driver);\nawait nextClick(driver);\nawait nextClick(driver);\n//await nextClick(driver);",
                            "err": {},
                            "uuid": "3186a7a6-ed22-45b1-81c0-77c788d30a22",
                            "parentUUID": "387d68d3-2336-43de-a6ee-c827068a97e4",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "afterHooks": [
                        {
                            "title": "\"after all\" hook",
                            "fullTitle": "NetIncome_Line210_6--Marital Status = married.  Input F21000 without providing the spouses social insurance number on Pg. 1 of the return.  Software must not allow.  //(TP married, both 65+TP T4A pesnion of $50,000 Linked Return - SP No income, No SIN# for SP).   \"after all\" hook",
                            "timedOut": false,
                            "duration": 1453,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "await logoutById(driver);\nawait driver.quit();",
                            "err": {},
                            "uuid": "d0d5270e-c959-486f-83ec-883e605eb7be",
                            "parentUUID": "387d68d3-2336-43de-a6ee-c827068a97e4",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "tests": [
                        {
                            "title": "error should be display",
                            "fullTitle": "NetIncome_Line210_6--Marital Status = married.  Input F21000 without providing the spouses social insurance number on Pg. 1 of the return.  Software must not allow.  //(TP married, both 65+TP T4A pesnion of $50,000 Linked Return - SP No income, No SIN# for SP).   error should be display",
                            "timedOut": false,
                            "duration": 15,
                            "state": "failed",
                            "speed": null,
                            "pass": false,
                            "fail": true,
                            "pending": false,
                            "context": null,
                            "code": "let errDisplayed = await driver.findElement(By.css('#SpSIN0')).isDisplayed();\nassert.strictEqual(errDisplayed, true, 'Spouse or common law partners SIN missing.');",
                            "err": {
                                "message": "NoSuchElementError: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"#SpSIN0\"}\n  (Session info: chrome=86.0.4240.198)\n  (Driver info: chromedriver=2.40.565498 (ea082db3280dd6843ebfb08a625e3eb905c4f5ab),platform=Windows NT 10.0.19041 x86_64)",
                                "estack": "NoSuchElementError: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"#SpSIN0\"}\n  (Session info: chrome=86.0.4240.198)\n  (Driver info: chromedriver=2.40.565498 (ea082db3280dd6843ebfb08a625e3eb905c4f5ab),platform=Windows NT 10.0.19041 x86_64)\n    at Object.checkLegacyResponse (node_modules\\selenium-webdriver\\lib\\error.js:585:15)\n    at parseHttpResponse (node_modules\\selenium-webdriver\\lib\\http.js:556:13)\n    at Executor.execute (node_modules\\selenium-webdriver\\lib\\http.js:491:26)\n    at runMicrotasks (<anonymous>)\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)\n    at async thenableWebDriverProxy.execute (node_modules\\selenium-webdriver\\lib\\webdriver.js:700:17)\n    at async toWireValue (node_modules\\selenium-webdriver\\lib\\webdriver.js:139:15)\n    at async E:\\Rita\\Taxtron\\WebTest\\node_modules\\selenium-webdriver\\lib\\webdriver.js:190:16\n    at async forEachKey (node_modules\\selenium-webdriver\\lib\\webdriver.js:184:9)\n    at async convertKeys (node_modules\\selenium-webdriver\\lib\\webdriver.js:189:3)\n    at async thenableWebDriverProxy.execute (node_modules\\selenium-webdriver\\lib\\webdriver.js:698:22)\n    at async Context.<anonymous> (my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_Line210_6.js:97:32)",
                                "diff": null
                            },
                            "uuid": "cbd4bcf4-9251-44da-84e7-3a2ec07889f5",
                            "parentUUID": "387d68d3-2336-43de-a6ee-c827068a97e4",
                            "isHook": false,
                            "skipped": false
                        }
                    ],
                    "suites": [],
                    "passes": [],
                    "failures": [
                        "cbd4bcf4-9251-44da-84e7-3a2ec07889f5"
                    ],
                    "pending": [],
                    "skipped": [],
                    "duration": 15,
                    "root": false,
                    "rootEmpty": false,
                    "_timeout": 150000
                },
                {
                    "uuid": "7a390c66-c931-4898-a6d5-72546c7920b9",
                    "title": "NetIncome_Line214_1---Input F21400 to exceed 2/3 of the taxpayers earned income.  F67990 is not present for child care expenses.  Software must not allow.   //(TP single, TP T4 $6,000: T5, Box 13 =$ 30,000: T2202A == 12 Full time MonthsDepandant 3 yrs old, Care ex. of $15,000)  .",
                    "fullFile": "D:\\Rita\\taxtron\\code\\TaxTronWebTests\\my_work\\test_for_report_2020\\TCASES\\tcNetIncome_Line214_1.js",
                    "file": "\\my_work\\test_for_report_2020\\TCASES\\tcNetIncome_Line214_1.js",
                    "beforeHooks": [
                        {
                            "title": "\"before all\" hook",
                            "fullTitle": "NetIncome_Line214_1---Input F21400 to exceed 2/3 of the taxpayers earned income.  F67990 is not present for child care expenses.  Software must not allow.   //(TP single, TP T4 $6,000: T5, Box 13 =$ 30,000: T2202A == 12 Full time MonthsDepandant 3 yrs old, Care ex. of $15,000)  . \"before all\" hook",
                            "timedOut": false,
                            "duration": 93934,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "driver = new Builder()\n\t.withCapabilities(Capabilities.chrome().setAcceptInsecureCerts(true))\n\t.build();\ndriver.manage().window().setRect({ width: 1366, height: 768 });\nawait login(driver, 'ritakumar@outlook.com', 'rishu12rashi');\nawait selectNewReturn(driver,province);\nawait switchToastOff(driver);\n        await setInputById(driver, 'Firstnames0', 'FEE');\nawait setInputById(driver, 'Surname0', 'LEE');\nawait selectDateById(driver, 'DOB0', '1975/01/01');\nawait setInputById(driver, 'SIN0', '123123127');\n        await selectComboById(driver, 'MaritalStatus0', 'Single');\n        await selectToggleById(driver, 'domchanged0', '0');\nawait nextClick(driver);\nawait setInputById(driver, 'fullAdd0', '6464 Yonge St, North York, YT M2M 3X4, Canada');\nawait selectToggleById(driver, 'quesFP0', '0');\nawait selectToggleById(driver, 'quesPrinResi0', '0');\n        await nextClick(driver);\n        await selectTab(driver, 'Dependant');\nawait selectToggleById(driver, 'HaveDependants0', '1');\nawait nextClick(driver);\nawait setInputById(driver, 'DepFName10', 's');\nawait setInputById(driver, 'DepSurname10', 's');\nawait selectDateById(driver, 'DepDOB10', '2017/02/11');\nawait selectComboById(driver, 'DepLien10', 'son');\n        await setInputById(driver, 'DepIncomeExcess0', '0');\n        await selectToggleById(driver, 'QDepEligible10tp', '1');\n        await nextClick(driver);\n        await nextClick(driver);\n        await selectToggleById(driver, 'didYouPayCC0tp', '1');\nawait nextClick(driver);\nawait selectComboById(driver, 'CC_30tp', 's');\n        await setInputById(driver, 'CCWFederalUE0tp', '15000');\n        await nextClick(driver);\nawait selectTab(driver, 'Income');\nawait selectTab(driver, 'IncomeProfile');\nawait selectToggleById(driver, 'WorkedInYOR0tp', '1');\n        await clickDivById(driver, 'T40tp');\nawait selectToggleById(driver, 'InvestmentIncome0tp', '1');\nawait clickDivById(driver, 'T50tp');\nawait nextClick(driver);\nawait setInputById(driver, 'T4B140', '6000');\n        await selectComboById(driver, 'T4_Box100tp', 'ON');\n        await nextClick(driver);\n        await setInputById(driver, 'Box130tp', '30000');\n        await selectComboById(driver, 'T5_2540tp', 'Bank Interest');\n\t    await nextClick(driver);\n        await selectTab(driver, 'Deduction');\n        await selectTab(driver, 'Deduction_Main');\n        await selectToggleById(driver, 'qStudent0tp', '1');\n        await nextClick(driver);\n        await selectToggleById(driver, 'T2202AAttendedInst20tp', '1');\n        await nextClick(driver);\n        await setInputById(driver, 'T2202_B19_10tp', '2001');\n        await setInputById(driver, 'T2202_B20_10tp', '2012');\n        await setInputById(driver, 'T2202_B23_10tp', '5000');\n        await setInputById(driver, 'T2202_B22_10tp', '12');\n        await nextClick(driver);\n        await selectTab(driver, 'MiscDeductions');\n        await selectToggleById(driver, 'qAlimony0tp', '1');\n        await nextClick(driver);\n        await selectToggleById(driver, 'QT778_2_260tp', '1');\n        await selectToggleById(driver, 'T778_2_280tp', '1');\n        await selectToggleById(driver, 'FullPart0tp', '1');\n        await setInputById(driver, 'SchoolWeeks0tp', '48');\n        await nextClick(driver);\n        savedForm = await getServerFile(driver);",
                            "err": {},
                            "uuid": "03c9a412-37e5-4e8e-a1d8-e88c58352ab5",
                            "parentUUID": "7a390c66-c931-4898-a6d5-72546c7920b9",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "afterHooks": [
                        {
                            "title": "\"after all\" hook",
                            "fullTitle": "NetIncome_Line214_1---Input F21400 to exceed 2/3 of the taxpayers earned income.  F67990 is not present for child care expenses.  Software must not allow.   //(TP single, TP T4 $6,000: T5, Box 13 =$ 30,000: T2202A == 12 Full time MonthsDepandant 3 yrs old, Care ex. of $15,000)  . \"after all\" hook",
                            "timedOut": false,
                            "duration": 5560,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "await logoutById(driver);\nawait driver.quit();",
                            "err": {},
                            "uuid": "a4c214a8-d839-4ad2-ab5c-b96b4fbb9f1c",
                            "parentUUID": "7a390c66-c931-4898-a6d5-72546c7920b9",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "tests": [
                        {
                            "title": " F21400 should be  allowed with amount    allow.value ==8000",
                            "fullTitle": "NetIncome_Line214_1---Input F21400 to exceed 2/3 of the taxpayers earned income.  F67990 is not present for child care expenses.  Software must not allow.   //(TP single, TP T4 $6,000: T5, Box 13 =$ 30,000: T2202A == 12 Full time MonthsDepandant 3 yrs old, Care ex. of $15,000)  .  F21400 should be  allowed with amount    allow.value ==8000",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let  childCareExpensesFeild = getFieldId('21400');\n\t\tlet  childCareExpenses = savedForm[ childCareExpensesFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+  childCareExpenses;\nassert.strictEqual(   childCareExpenses, '8000', ' Feild should be built');",
                            "err": {},
                            "uuid": "897135f6-937a-40b2-9d44-59e9c58dd8bc",
                            "parentUUID": "7a390c66-c931-4898-a6d5-72546c7920b9",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F67990 should be  allowed with amount    allow.value ==9600",
                            "fullTitle": "NetIncome_Line214_1---Input F21400 to exceed 2/3 of the taxpayers earned income.  F67990 is not present for child care expenses.  Software must not allow.   //(TP single, TP T4 $6,000: T5, Box 13 =$ 30,000: T2202A == 12 Full time MonthsDepandant 3 yrs old, Care ex. of $15,000)  .  F67990 should be  allowed with amount    allow.value ==9600",
                            "timedOut": false,
                            "duration": 0,
                            "state": "failed",
                            "speed": null,
                            "pass": false,
                            "fail": true,
                            "pending": false,
                            "context": null,
                            "code": "let childCareExpensesPaidWhileEnrolledInAnEducationalProgramFeild = getFieldId('67990');\n\t\tlet    childCareExpensesPaidWhileEnrolledInAnEducationalProgram = savedForm[  childCareExpensesPaidWhileEnrolledInAnEducationalProgramFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+  childCareExpensesPaidWhileEnrolledInAnEducationalProgram;\nassert.strictEqual(  childCareExpensesPaidWhileEnrolledInAnEducationalProgram, '10400', ' Feild should be built');",
                            "err": {
                                "message": "AssertionError [ERR_ASSERTION]:  Feild should be built",
                                "estack": "AssertionError [ERR_ASSERTION]:  Feild should be built\n    at Context.<anonymous> (my_work\\test_for_report_2020\\TCASES\\tcNetIncome_Line214_1.js:94:16)",
                                "diff": "- 9600\n+ 10400\n"
                            },
                            "uuid": "384f1489-82ed-4c92-ac44-9cd466e10aad",
                            "parentUUID": "7a390c66-c931-4898-a6d5-72546c7920b9",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F67954 should be  allowed with amount    allow.value ==15000",
                            "fullTitle": "NetIncome_Line214_1---Input F21400 to exceed 2/3 of the taxpayers earned income.  F67990 is not present for child care expenses.  Software must not allow.   //(TP single, TP T4 $6,000: T5, Box 13 =$ 30,000: T2202A == 12 Full time MonthsDepandant 3 yrs old, Care ex. of $15,000)  .  F67954 should be  allowed with amount    allow.value ==15000",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let childCareExpensesIncurredForAChildAge6OrYoungerFeild = getFieldId('67954');\n\t\tlet   childCareExpensesIncurredForAChildAge6OrYounger = savedForm[ childCareExpensesIncurredForAChildAge6OrYoungerFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+ childCareExpensesIncurredForAChildAge6OrYounger;\nassert.strictEqual( childCareExpensesIncurredForAChildAge6OrYounger, '15000', ' Feild should be built');",
                            "err": {},
                            "uuid": "d3ce0a35-a3b5-4d07-9683-2928829ce32b",
                            "parentUUID": "7a390c66-c931-4898-a6d5-72546c7920b9",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F67950 should be  allowed with amount    allow.value ==15000",
                            "fullTitle": "NetIncome_Line214_1---Input F21400 to exceed 2/3 of the taxpayers earned income.  F67990 is not present for child care expenses.  Software must not allow.   //(TP single, TP T4 $6,000: T5, Box 13 =$ 30,000: T2202A == 12 Full time MonthsDepandant 3 yrs old, Care ex. of $15,000)  .  F67950 should be  allowed with amount    allow.value ==15000",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let totalChildCareExpensesPaidIntheYearFeild = getFieldId('67950');\n\t\tlet totalChildCareExpensesPaidIntheYear = savedForm[totalChildCareExpensesPaidIntheYearFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+totalChildCareExpensesPaidIntheYear;\nassert.strictEqual(  totalChildCareExpensesPaidIntheYear, '15000', 'Income Feild should be built');",
                            "err": {},
                            "uuid": "2d3ade44-0f1b-461a-9342-2b57a162064a",
                            "parentUUID": "7a390c66-c931-4898-a6d5-72546c7920b9",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F9902 should be  allowed with amount    allow.value ==1",
                            "fullTitle": "NetIncome_Line214_1---Input F21400 to exceed 2/3 of the taxpayers earned income.  F67990 is not present for child care expenses.  Software must not allow.   //(TP single, TP T4 $6,000: T5, Box 13 =$ 30,000: T2202A == 12 Full time MonthsDepandant 3 yrs old, Care ex. of $15,000)  .  F9902 should be  allowed with amount    allow.value ==1",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let  numberOfEligibleChildrenAge6OrYoungerForWhomTheDisabilityAmountCannotBeClaimedFeild = getFieldId('9902');\n\t\tlet  numberOfEligibleChildrenAge6OrYoungerForWhomTheDisabilityAmountCannotBeClaimed = savedForm[ numberOfEligibleChildrenAge6OrYoungerForWhomTheDisabilityAmountCannotBeClaimedFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+  numberOfEligibleChildrenAge6OrYoungerForWhomTheDisabilityAmountCannotBeClaimed;\nassert.strictEqual(  numberOfEligibleChildrenAge6OrYoungerForWhomTheDisabilityAmountCannotBeClaimed, '1', ' Feild should be built');",
                            "err": {},
                            "uuid": "32e0a6d2-5b35-4e34-837f-40570a833f4e",
                            "parentUUID": "7a390c66-c931-4898-a6d5-72546c7920b9",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F9903 should be  allowed with amount    allow.value ==15000",
                            "fullTitle": "NetIncome_Line214_1---Input F21400 to exceed 2/3 of the taxpayers earned income.  F67990 is not present for child care expenses.  Software must not allow.   //(TP single, TP T4 $6,000: T5, Box 13 =$ 30,000: T2202A == 12 Full time MonthsDepandant 3 yrs old, Care ex. of $15,000)  .  F9903 should be  allowed with amount    allow.value ==15000",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let childCareExpensesPaidforEligibleChildrenAge6OrYoungerForWhomTheDisabilityAmountCannotbeClaimedFeild = getFieldId('9903');\n\t\tlet  childCareExpensesPaidforEligibleChildrenAge6OrYoungerForWhomTheDisabilityAmountCannotbeClaimed = savedForm[ childCareExpensesPaidforEligibleChildrenAge6OrYoungerForWhomTheDisabilityAmountCannotbeClaimedFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+  childCareExpensesPaidforEligibleChildrenAge6OrYoungerForWhomTheDisabilityAmountCannotbeClaimed;\nassert.strictEqual(  childCareExpensesPaidforEligibleChildrenAge6OrYoungerForWhomTheDisabilityAmountCannotbeClaimed, '15000', ' Feild should be built');",
                            "err": {},
                            "uuid": "58fd432c-e930-4a34-b130-fb00b0e2c318",
                            "parentUUID": "7a390c66-c931-4898-a6d5-72546c7920b9",
                            "isHook": false,
                            "skipped": false
                        }
                    ],
                    "suites": [],
                    "passes": [
                        "897135f6-937a-40b2-9d44-59e9c58dd8bc",
                        "d3ce0a35-a3b5-4d07-9683-2928829ce32b",
                        "2d3ade44-0f1b-461a-9342-2b57a162064a",
                        "32e0a6d2-5b35-4e34-837f-40570a833f4e",
                        "58fd432c-e930-4a34-b130-fb00b0e2c318"
                    ],
                    "failures": [
                        "384f1489-82ed-4c92-ac44-9cd466e10aad"
                    ],
                    "pending": [],
                    "skipped": [],
                    "duration": 0,
                    "root": false,
                    "rootEmpty": false,
                    "_timeout": 150000
                },
                {
                    "uuid": "dcc890b3-1a77-487b-867e-e066d4644361",
                    "title": "NetIncome_Line214_10---Input F21400 to exceed 2/3 of the taxpayers earned income.  F67990 is not present for child care expenses.  Software must not allow.     //(TP Single TP T4 = $60,000 (Box 14)Depandant: 14 years old, care $ 15,000)  .",
                    "fullFile": "E:\\Rita\\Taxtron\\WebTest\\my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_Line214_10.js",
                    "file": "\\my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_Line214_10.js",
                    "beforeHooks": [
                        {
                            "title": "\"before all\" hook",
                            "fullTitle": "NetIncome_Line214_10---Input F21400 to exceed 2/3 of the taxpayers earned income.  F67990 is not present for child care expenses.  Software must not allow.     //(TP Single TP T4 = $60,000 (Box 14)Depandant: 14 years old, care $ 15,000)  . \"before all\" hook",
                            "timedOut": false,
                            "duration": 74901,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "driver = new Builder()\n\t.withCapabilities(Capabilities.chrome().setAcceptInsecureCerts(true))\n\t.build();\ndriver.manage().window().setRect({ width: 1366, height: 768 });\nawait login(driver, 'ritakumar@outlook.com', 'rishu12rashi');\nawait selectNewReturn(driver,province);\nawait switchToastOff(driver);\n        await setInputById(driver, 'Firstnames0', 'FEE');\nawait setInputById(driver, 'Surname0', 'LEE');\nawait selectDateById(driver, 'DOB0', '1975/01/01');\nawait setInputById(driver, 'SIN0', '123123127');\n        await selectComboById(driver, 'MaritalStatus0', 'Single');\n        await selectToggleById(driver, 'domchanged0', '0');\nawait nextClick(driver);\nawait setInputById(driver, 'fullAdd0', '6464 Yonge St, North York, YT M2M 3X4, Canada');\nawait selectToggleById(driver, 'quesFP0', '0');\nawait selectToggleById(driver, 'quesPrinResi0', '0');\n        await nextClick(driver);\n        await selectTab(driver, 'Dependant');\nawait selectToggleById(driver, 'HaveDependants0', '1');\nawait nextClick(driver);\nawait setInputById(driver, 'DepFName10', 's');\nawait setInputById(driver, 'DepSurname10', 's');\nawait selectDateById(driver, 'DepDOB10', '2006/02/11');\nawait selectComboById(driver, 'DepLien10', 'son');\n        await setInputById(driver, 'DepIncomeExcess0', '0');\n        await selectToggleById(driver, 'QDepEligible10tp', '1');\n        await nextClick(driver);\n        await nextClick(driver);\n        await selectToggleById(driver, 'didYouPayCC0tp', '1');\nawait nextClick(driver);\nawait selectComboById(driver, 'CC_30tp', 's');\n        await setInputById(driver, 'CCWFederalUE0tp', '15000');\n        await nextClick(driver);\nawait selectTab(driver, 'Income');\nawait selectTab(driver, 'IncomeProfile');\nawait selectToggleById(driver, 'WorkedInYOR0tp', '1');\n        await clickDivById(driver, 'T40tp');\nawait nextClick(driver);\nawait setInputById(driver, 'T4B140', '60000');\n        await selectComboById(driver, 'T4_Box100tp', 'ON');\n        await nextClick(driver);\n        await nextClick(driver);\n        savedForm = await getServerFile(driver);",
                            "err": {},
                            "uuid": "7123b7cc-4997-4fdd-bc77-d8b759919728",
                            "parentUUID": "dcc890b3-1a77-487b-867e-e066d4644361",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "afterHooks": [
                        {
                            "title": "\"after all\" hook",
                            "fullTitle": "NetIncome_Line214_10---Input F21400 to exceed 2/3 of the taxpayers earned income.  F67990 is not present for child care expenses.  Software must not allow.     //(TP Single TP T4 = $60,000 (Box 14)Depandant: 14 years old, care $ 15,000)  . \"after all\" hook",
                            "timedOut": false,
                            "duration": 5487,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "await logoutById(driver);\nawait driver.quit();",
                            "err": {},
                            "uuid": "878ba2fb-d640-4857-a782-913ee9bb4973",
                            "parentUUID": "dcc890b3-1a77-487b-867e-e066d4644361",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "tests": [
                        {
                            "title": " F21400 should be  allowed with amount    allow.value ==5000",
                            "fullTitle": "NetIncome_Line214_10---Input F21400 to exceed 2/3 of the taxpayers earned income.  F67990 is not present for child care expenses.  Software must not allow.     //(TP Single TP T4 = $60,000 (Box 14)Depandant: 14 years old, care $ 15,000)  .  F21400 should be  allowed with amount    allow.value ==5000",
                            "timedOut": false,
                            "duration": 1,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let  childCareExpensesFeild = getFieldId('21400');\n\t\tlet  childCareExpenses = savedForm[ childCareExpensesFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+  childCareExpenses;\nassert.strictEqual(   childCareExpenses, '5000', ' Feild should be built');",
                            "err": {},
                            "uuid": "0ef6484c-9605-4ecc-96d5-0c52657b759a",
                            "parentUUID": "dcc890b3-1a77-487b-867e-e066d4644361",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F9904 should be  allowed with amount    allow.value ==1",
                            "fullTitle": "NetIncome_Line214_10---Input F21400 to exceed 2/3 of the taxpayers earned income.  F67990 is not present for child care expenses.  Software must not allow.     //(TP Single TP T4 = $60,000 (Box 14)Depandant: 14 years old, care $ 15,000)  .  F9904 should be  allowed with amount    allow.value ==1",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let   numberOfEligibleChildrenBetweenAge7AndAge16AndEligibleChildrenAge17OrOlderWithAMentalOrPhysicalImpairmentForWhomTheFeild = getFieldId('9904');\n\t\tlet   numberOfEligibleChildrenBetweenAge7AndAge16AndEligibleChildrenAge17OrOlderWithAMentalOrPhysicalImpairmentForWhomThe = savedForm[   numberOfEligibleChildrenBetweenAge7AndAge16AndEligibleChildrenAge17OrOlderWithAMentalOrPhysicalImpairmentForWhomTheFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+  numberOfEligibleChildrenBetweenAge7AndAge16AndEligibleChildrenAge17OrOlderWithAMentalOrPhysicalImpairmentForWhomThe;\nassert.strictEqual(   numberOfEligibleChildrenBetweenAge7AndAge16AndEligibleChildrenAge17OrOlderWithAMentalOrPhysicalImpairmentForWhomThe, '1', ' Feild should be built');",
                            "err": {},
                            "uuid": "45a2680e-d66e-46d8-a578-a8dc329cb5f8",
                            "parentUUID": "dcc890b3-1a77-487b-867e-e066d4644361",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F9971 should be  allowed with amount    allow.value ==15000",
                            "fullTitle": "NetIncome_Line214_10---Input F21400 to exceed 2/3 of the taxpayers earned income.  F67990 is not present for child care expenses.  Software must not allow.     //(TP Single TP T4 = $60,000 (Box 14)Depandant: 14 years old, care $ 15,000)  .  F9971 should be  allowed with amount    allow.value ==15000",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let    childCareExpensesPaidForEligibleChildrenBetweenAge7AndAge16AndEligibleChildrenAge17OrOlderWithAMentalOrPhysicalImpairmentForWhomTheDisabilityAmountCannotbeClaimedFeild = getFieldId('9971');\n\t\tlet    childCareExpensesPaidForEligibleChildrenBetweenAge7AndAge16AndEligibleChildrenAge17OrOlderWithAMentalOrPhysicalImpairmentForWhomTheDisabilityAmountCannotbeClaimed = savedForm[    childCareExpensesPaidForEligibleChildrenBetweenAge7AndAge16AndEligibleChildrenAge17OrOlderWithAMentalOrPhysicalImpairmentForWhomTheDisabilityAmountCannotbeClaimedFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+   childCareExpensesPaidForEligibleChildrenBetweenAge7AndAge16AndEligibleChildrenAge17OrOlderWithAMentalOrPhysicalImpairmentForWhomTheDisabilityAmountCannotbeClaimed;\nassert.strictEqual(   childCareExpensesPaidForEligibleChildrenBetweenAge7AndAge16AndEligibleChildrenAge17OrOlderWithAMentalOrPhysicalImpairmentForWhomTheDisabilityAmountCannotbeClaimed, '15000', ' Feild should be built');",
                            "err": {},
                            "uuid": "af5b3a22-d900-45de-8d36-ba9babcb6b6e",
                            "parentUUID": "dcc890b3-1a77-487b-867e-e066d4644361",
                            "isHook": false,
                            "skipped": false
                        }
                    ],
                    "suites": [],
                    "passes": [
                        "0ef6484c-9605-4ecc-96d5-0c52657b759a",
                        "45a2680e-d66e-46d8-a578-a8dc329cb5f8",
                        "af5b3a22-d900-45de-8d36-ba9babcb6b6e"
                    ],
                    "failures": [],
                    "pending": [],
                    "skipped": [],
                    "duration": 1,
                    "root": false,
                    "rootEmpty": false,
                    "_timeout": 150000
                },
                {
                    "uuid": "14b49b54-26b1-4a42-9b39-b834d32762bd",
                    "title": "NetIncome_Line214_2---Input F21400 to exceed 2/3 of the taxpayers earned income.  F67990 is not present for child care expenses.  Software must not allow.   //(TP Married,Linked rts, TP T5 = $60,000 (Box 13): T2202A, 12 Months parttimeSP T5 (Box 13) = $15,000, T2202A, 12 Months parttimeDepandant 3 yrs old, Care of $10,000)  .",
                    "fullFile": "D:\\Rita\\taxtron\\code\\TaxTronWebTests\\my_work\\test_for_report_2020\\TCASES\\tcNetIncome_Line214_2.js",
                    "file": "\\my_work\\test_for_report_2020\\TCASES\\tcNetIncome_Line214_2.js",
                    "beforeHooks": [
                        {
                            "title": "\"before all\" hook",
                            "fullTitle": "NetIncome_Line214_2---Input F21400 to exceed 2/3 of the taxpayers earned income.  F67990 is not present for child care expenses.  Software must not allow.   //(TP Married,Linked rts, TP T5 = $60,000 (Box 13): T2202A, 12 Months parttimeSP T5 (Box 13) = $15,000, T2202A, 12 Months parttimeDepandant 3 yrs old, Care of $10,000)  . \"before all\" hook",
                            "timedOut": false,
                            "duration": 93249,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "driver = new Builder()\n\t.withCapabilities(Capabilities.chrome().setAcceptInsecureCerts(true))\n\t.build();\ndriver.manage().window().setRect({ width: 1366, height: 768 });\nawait login(driver, 'ritakumar@outlook.com', 'rishu12rashi');\nawait selectNewReturn(driver,province);\nawait switchToastOff(driver);\n        await setInputById(driver, 'Firstnames0', 'FEE');\nawait setInputById(driver, 'Surname0', 'LEE');\nawait selectDateById(driver, 'DOB0', '1975/01/01');\nawait setInputById(driver, 'SIN0', '123123127');\n        await selectComboById(driver, 'MaritalStatus0', 'Single');\n        await selectToggleById(driver, 'domchanged0', '0');\nawait nextClick(driver);\nawait setInputById(driver, 'fullAdd0', '6464 Yonge St, North York, YT M2M 3X4, Canada');\nawait selectToggleById(driver, 'quesFP0', '0');\nawait selectToggleById(driver, 'quesPrinResi0', '0');\n        await nextClick(driver);\n        await selectTab(driver, 'Dependant');\nawait selectToggleById(driver, 'HaveDependants0', '1');\nawait nextClick(driver);\nawait setInputById(driver, 'DepFName10', 's');\nawait setInputById(driver, 'DepSurname10', 's');\nawait selectDateById(driver, 'DepDOB10', '2017/02/11');\nawait selectComboById(driver, 'DepLien10', 'son');\n        await setInputById(driver, 'DepIncomeExcess0', '0');\n        await selectToggleById(driver, 'QDepEligible10tp', '1');\n        await nextClick(driver);\n        await nextClick(driver);\n        await selectToggleById(driver, 'didYouPayCC0tp', '1');\nawait nextClick(driver);\nawait selectComboById(driver, 'CC_30tp', 's');\n        await setInputById(driver, 'CCWFederalUE0tp', '15000');\n        await nextClick(driver);\nawait selectTab(driver, 'Income');\nawait selectTab(driver, 'IncomeProfile');\nawait selectToggleById(driver, 'WorkedInYOR0tp', '1');\n        await clickDivById(driver, 'T40tp');\nawait selectToggleById(driver, 'InvestmentIncome0tp', '1');\nawait clickDivById(driver, 'T50tp');\nawait nextClick(driver);\nawait setInputById(driver, 'T4B140', '6000');\n        await selectComboById(driver, 'T4_Box100tp', 'ON');\n        await nextClick(driver);\n        await setInputById(driver, 'Box130tp', '30000');\n        await selectComboById(driver, 'T5_2540tp', 'Bank Interest');\n\t    await nextClick(driver);\n        await selectTab(driver, 'Deduction');\n        await selectTab(driver, 'Deduction_Main');\n        await selectToggleById(driver, 'qStudent0tp', '1');\n        await nextClick(driver);\n        await selectToggleById(driver, 'T2202AAttendedInst20tp', '1');\n        await nextClick(driver);\n        await setInputById(driver, 'T2202_B19_10tp', '2001');\n        await setInputById(driver, 'T2202_B20_10tp', '2012');\n        await setInputById(driver, 'T2202_B23_10tp', '5000');\n        await setInputById(driver, 'T2202_B21_10tp', '12');\n        await nextClick(driver);\n        await selectTab(driver, 'MiscDeductions');\n        await selectToggleById(driver, 'qAlimony0tp', '1');\n        await nextClick(driver);\n        await selectToggleById(driver, 'QT778_2_260tp', '1');\n        await selectToggleById(driver, 'T778_2_280tp', '1');\n        await selectToggleById(driver, 'FullPart0tp', '0');\n        await setInputById(driver, 'SchoolMonths0tp', '12');\n        await nextClick(driver);\n        savedForm = await getServerFile(driver);",
                            "err": {},
                            "uuid": "2b4fd77f-03f2-40fe-8815-d35b7e0860ca",
                            "parentUUID": "14b49b54-26b1-4a42-9b39-b834d32762bd",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "afterHooks": [
                        {
                            "title": "\"after all\" hook",
                            "fullTitle": "NetIncome_Line214_2---Input F21400 to exceed 2/3 of the taxpayers earned income.  F67990 is not present for child care expenses.  Software must not allow.   //(TP Married,Linked rts, TP T5 = $60,000 (Box 13): T2202A, 12 Months parttimeSP T5 (Box 13) = $15,000, T2202A, 12 Months parttimeDepandant 3 yrs old, Care of $10,000)  . \"after all\" hook",
                            "timedOut": false,
                            "duration": 1612,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "await logoutById(driver);\nawait driver.quit();",
                            "err": {},
                            "uuid": "2a1885c5-b1f2-4bb5-8a73-c96207794316",
                            "parentUUID": "14b49b54-26b1-4a42-9b39-b834d32762bd",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "tests": [
                        {
                            "title": " F21400 should be  allowed with amount    allow.value ==6400",
                            "fullTitle": "NetIncome_Line214_2---Input F21400 to exceed 2/3 of the taxpayers earned income.  F67990 is not present for child care expenses.  Software must not allow.   //(TP Married,Linked rts, TP T5 = $60,000 (Box 13): T2202A, 12 Months parttimeSP T5 (Box 13) = $15,000, T2202A, 12 Months parttimeDepandant 3 yrs old, Care of $10,000)  .  F21400 should be  allowed with amount    allow.value ==6400",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let  childCareExpensesFeild = getFieldId('21400');\n\t\tlet  childCareExpenses = savedForm[ childCareExpensesFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+  childCareExpenses;\nassert.strictEqual(   childCareExpenses, '6400', ' Feild should be built');",
                            "err": {},
                            "uuid": "17fe4232-a09d-4f56-bd68-5dac444334bb",
                            "parentUUID": "14b49b54-26b1-4a42-9b39-b834d32762bd",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F67990 should be  allowed with amount    allow.value ==2400",
                            "fullTitle": "NetIncome_Line214_2---Input F21400 to exceed 2/3 of the taxpayers earned income.  F67990 is not present for child care expenses.  Software must not allow.   //(TP Married,Linked rts, TP T5 = $60,000 (Box 13): T2202A, 12 Months parttimeSP T5 (Box 13) = $15,000, T2202A, 12 Months parttimeDepandant 3 yrs old, Care of $10,000)  .  F67990 should be  allowed with amount    allow.value ==2400",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let childCareExpensesPaidWhileEnrolledInAnEducationalProgramFeild = getFieldId('67990');\n\t\tlet    childCareExpensesPaidWhileEnrolledInAnEducationalProgram = savedForm[  childCareExpensesPaidWhileEnrolledInAnEducationalProgramFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+  childCareExpensesPaidWhileEnrolledInAnEducationalProgram;\nassert.strictEqual(  childCareExpensesPaidWhileEnrolledInAnEducationalProgram, '2400', ' Feild should be built');",
                            "err": {},
                            "uuid": "a1bc0295-b434-42bf-be16-9cf5309af033",
                            "parentUUID": "14b49b54-26b1-4a42-9b39-b834d32762bd",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F9902 should be  allowed with amount    allow.value ==1",
                            "fullTitle": "NetIncome_Line214_2---Input F21400 to exceed 2/3 of the taxpayers earned income.  F67990 is not present for child care expenses.  Software must not allow.   //(TP Married,Linked rts, TP T5 = $60,000 (Box 13): T2202A, 12 Months parttimeSP T5 (Box 13) = $15,000, T2202A, 12 Months parttimeDepandant 3 yrs old, Care of $10,000)  .  F9902 should be  allowed with amount    allow.value ==1",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let  numberOfEligibleChildrenAge6OrYoungerForWhomTheDisabilityAmountCannotBeClaimedFeild = getFieldId('9902');\n\t\tlet  numberOfEligibleChildrenAge6OrYoungerForWhomTheDisabilityAmountCannotBeClaimed = savedForm[ numberOfEligibleChildrenAge6OrYoungerForWhomTheDisabilityAmountCannotBeClaimedFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+  numberOfEligibleChildrenAge6OrYoungerForWhomTheDisabilityAmountCannotBeClaimed;\nassert.strictEqual(  numberOfEligibleChildrenAge6OrYoungerForWhomTheDisabilityAmountCannotBeClaimed, '1', ' Feild should be built');",
                            "err": {},
                            "uuid": "1ba8d3d8-3dd5-4ab7-a43d-d6916020f5b3",
                            "parentUUID": "14b49b54-26b1-4a42-9b39-b834d32762bd",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F9903 should be  allowed with amount    allow.value ==15000",
                            "fullTitle": "NetIncome_Line214_2---Input F21400 to exceed 2/3 of the taxpayers earned income.  F67990 is not present for child care expenses.  Software must not allow.   //(TP Married,Linked rts, TP T5 = $60,000 (Box 13): T2202A, 12 Months parttimeSP T5 (Box 13) = $15,000, T2202A, 12 Months parttimeDepandant 3 yrs old, Care of $10,000)  .  F9903 should be  allowed with amount    allow.value ==15000",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let childCareExpensesPaidforEligibleChildrenAge6OrYoungerForWhomTheDisabilityAmountCannotbeClaimedFeild = getFieldId('9903');\n\t\tlet  childCareExpensesPaidforEligibleChildrenAge6OrYoungerForWhomTheDisabilityAmountCannotbeClaimed = savedForm[ childCareExpensesPaidforEligibleChildrenAge6OrYoungerForWhomTheDisabilityAmountCannotbeClaimedFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+  childCareExpensesPaidforEligibleChildrenAge6OrYoungerForWhomTheDisabilityAmountCannotbeClaimed;\nassert.strictEqual(  childCareExpensesPaidforEligibleChildrenAge6OrYoungerForWhomTheDisabilityAmountCannotbeClaimed, '15000', ' Feild should be built');",
                            "err": {},
                            "uuid": "cccc8640-ea67-460e-b55c-4a1c69ba70f9",
                            "parentUUID": "14b49b54-26b1-4a42-9b39-b834d32762bd",
                            "isHook": false,
                            "skipped": false
                        }
                    ],
                    "suites": [],
                    "passes": [
                        "17fe4232-a09d-4f56-bd68-5dac444334bb",
                        "a1bc0295-b434-42bf-be16-9cf5309af033",
                        "1ba8d3d8-3dd5-4ab7-a43d-d6916020f5b3",
                        "cccc8640-ea67-460e-b55c-4a1c69ba70f9"
                    ],
                    "failures": [],
                    "pending": [],
                    "skipped": [],
                    "duration": 0,
                    "root": false,
                    "rootEmpty": false,
                    "_timeout": 150000
                },
                {
                    "uuid": "88046367-ac5d-4024-b32c-459e55397990",
                    "title": "NetIncome_Line214_3---Input F21400 to exceed 2/3 of the taxpayers earned income.  F67990 is not present for child care expenses.  Software must not allow.   //(TP single, TP T4 $6,000: T5, Box 13 =$ 30,000: T2202A == 12 Part time Months Depandant 3 yrs old, Care ex. of $15,000: Child is disabled) .",
                    "fullFile": "D:\\Rita\\taxtron\\code\\TaxTronWebTests\\my_work\\test_for_report_2020\\TCASES\\tcNetIncome_Line214_3.js",
                    "file": "\\my_work\\test_for_report_2020\\TCASES\\tcNetIncome_Line214_3.js",
                    "beforeHooks": [
                        {
                            "title": "\"before all\" hook",
                            "fullTitle": "NetIncome_Line214_3---Input F21400 to exceed 2/3 of the taxpayers earned income.  F67990 is not present for child care expenses.  Software must not allow.   //(TP single, TP T4 $6,000: T5, Box 13 =$ 30,000: T2202A == 12 Part time Months Depandant 3 yrs old, Care ex. of $15,000: Child is disabled) . \"before all\" hook",
                            "timedOut": false,
                            "duration": 92459,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "driver = new Builder()\n\t.withCapabilities(Capabilities.chrome().setAcceptInsecureCerts(true))\n\t.build();\ndriver.manage().window().setRect({ width: 1366, height: 768 });\nawait login(driver, 'ritakumar@outlook.com', 'rishu12rashi');\nawait selectNewReturn(driver,province);\nawait switchToastOff(driver);\n        await setInputById(driver, 'Firstnames0', 'FEE');\nawait setInputById(driver, 'Surname0', 'LEE');\nawait selectDateById(driver, 'DOB0', '1975/01/01');\nawait setInputById(driver, 'SIN0', '123123127');\n        await selectComboById(driver, 'MaritalStatus0', 'Single');\n        await selectToggleById(driver, 'domchanged0', '0');\nawait nextClick(driver);\nawait setInputById(driver, 'fullAdd0', '6464 Yonge St, North York, YT M2M 3X4, Canada');\nawait selectToggleById(driver, 'quesFP0', '0');\nawait selectToggleById(driver, 'quesPrinResi0', '0');\n        await nextClick(driver);\n        await selectTab(driver, 'Dependant');\nawait selectToggleById(driver, 'HaveDependants0', '1');\nawait nextClick(driver);\nawait setInputById(driver, 'DepFName10', 's');\nawait setInputById(driver, 'DepSurname10', 's');\nawait selectDateById(driver, 'DepDOB10', '2017/02/11');\nawait selectComboById(driver, 'DepLien10', 'son');\n        await setInputById(driver, 'DepIncomeExcess0', '0');\n        await selectToggleById(driver, 'QDepEligible10tp', '1');\n        await selectToggleById(driver, 'disQuestion0tp', '1');\n        await nextClick(driver);\n        await nextClick(driver);\n        await selectToggleById(driver, 'didYouPayCC0tp', '1');\nawait nextClick(driver);\nawait selectComboById(driver, 'CC_30tp', 's');\n        await setInputById(driver, 'CCWFederalUE0tp', '15000');\n        await nextClick(driver);\nawait selectTab(driver, 'Income');\nawait selectTab(driver, 'IncomeProfile');\nawait selectToggleById(driver, 'WorkedInYOR0tp', '1');\n        await clickDivById(driver, 'T40tp');\nawait selectToggleById(driver, 'InvestmentIncome0tp', '1');\nawait clickDivById(driver, 'T50tp');\nawait nextClick(driver);\nawait setInputById(driver, 'T4B140', '6000');\n        await selectComboById(driver, 'T4_Box100tp', 'ON');\n        await nextClick(driver);\n        await setInputById(driver, 'Box130tp', '30000');\n        await selectComboById(driver, 'T5_2540tp', 'Bank Interest');\n\t    await nextClick(driver);\n        await selectTab(driver, 'Deduction');\n        await selectTab(driver, 'Deduction_Main');\n        await selectToggleById(driver, 'qStudent0tp', '1');\n        await nextClick(driver);\n        await selectToggleById(driver, 'T2202AAttendedInst20tp', '1');\n        await nextClick(driver);\n        await setInputById(driver, 'T2202_B19_10tp', '2001');\n        await setInputById(driver, 'T2202_B20_10tp', '2012');\n        await setInputById(driver, 'T2202_B23_10tp', '5000');\n        await setInputById(driver, 'T2202_B21_10tp', '12');\n        await nextClick(driver);\n        await selectTab(driver, 'MiscDeductions');\n        await selectToggleById(driver, 'qAlimony0tp', '1');\n        await nextClick(driver);\n        await selectToggleById(driver, 'QT778_2_260tp', '1');\n        await selectToggleById(driver, 'T778_2_280tp', '1');\n        await selectToggleById(driver, 'FullPart0tp', '0');\n        await setInputById(driver, 'SchoolMonths0tp', '12');\n        await nextClick(driver);\n        savedForm = await getServerFile(driver);",
                            "err": {},
                            "uuid": "29cfc38a-929a-4a21-a421-7aaeef63dced",
                            "parentUUID": "88046367-ac5d-4024-b32c-459e55397990",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "afterHooks": [
                        {
                            "title": "\"after all\" hook",
                            "fullTitle": "NetIncome_Line214_3---Input F21400 to exceed 2/3 of the taxpayers earned income.  F67990 is not present for child care expenses.  Software must not allow.   //(TP single, TP T4 $6,000: T5, Box 13 =$ 30,000: T2202A == 12 Part time Months Depandant 3 yrs old, Care ex. of $15,000: Child is disabled) . \"after all\" hook",
                            "timedOut": false,
                            "duration": 1369,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "await logoutById(driver);\nawait driver.quit();",
                            "err": {},
                            "uuid": "2114d483-d4ba-4b72-8d8c-c1ce8cd83fad",
                            "parentUUID": "88046367-ac5d-4024-b32c-459e55397990",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "tests": [
                        {
                            "title": " F21400 should be  allowed with amount    allow.value ==7300",
                            "fullTitle": "NetIncome_Line214_3---Input F21400 to exceed 2/3 of the taxpayers earned income.  F67990 is not present for child care expenses.  Software must not allow.   //(TP single, TP T4 $6,000: T5, Box 13 =$ 30,000: T2202A == 12 Part time Months Depandant 3 yrs old, Care ex. of $15,000: Child is disabled) .  F21400 should be  allowed with amount    allow.value ==7300",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let  childCareExpensesFeild = getFieldId('21400');\n\t\tlet  childCareExpenses = savedForm[ childCareExpensesFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+  childCareExpenses;\nassert.strictEqual(   childCareExpenses, '7300', ' Feild should be built');",
                            "err": {},
                            "uuid": "93207fbb-633a-4cb5-93b8-1ef9b468996d",
                            "parentUUID": "88046367-ac5d-4024-b32c-459e55397990",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F67990 should be  allowed with amount    allow.value ==3300",
                            "fullTitle": "NetIncome_Line214_3---Input F21400 to exceed 2/3 of the taxpayers earned income.  F67990 is not present for child care expenses.  Software must not allow.   //(TP single, TP T4 $6,000: T5, Box 13 =$ 30,000: T2202A == 12 Part time Months Depandant 3 yrs old, Care ex. of $15,000: Child is disabled) .  F67990 should be  allowed with amount    allow.value ==3300",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let childCareExpensesPaidWhileEnrolledInAnEducationalProgramFeild = getFieldId('67990');\n\t\tlet    childCareExpensesPaidWhileEnrolledInAnEducationalProgram = savedForm[  childCareExpensesPaidWhileEnrolledInAnEducationalProgramFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+  childCareExpensesPaidWhileEnrolledInAnEducationalProgram;\nassert.strictEqual(  childCareExpensesPaidWhileEnrolledInAnEducationalProgram, '3300', ' Feild should be built');",
                            "err": {},
                            "uuid": "945a4b46-b772-46b8-aecd-67939658f2ab",
                            "parentUUID": "88046367-ac5d-4024-b32c-459e55397990",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F67960 should be  allowed with amount    allow.value ==11000",
                            "fullTitle": "NetIncome_Line214_3---Input F21400 to exceed 2/3 of the taxpayers earned income.  F67990 is not present for child care expenses.  Software must not allow.   //(TP single, TP T4 $6,000: T5, Box 13 =$ 30,000: T2202A == 12 Part time Months Depandant 3 yrs old, Care ex. of $15,000: Child is disabled) .  F67960 should be  allowed with amount    allow.value ==11000",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let basiclimitForEligibleChildrenBornInTheCurrentTaxYearOrEarlierForWhomTheDisabilityAmountCanBeClaimedFeild = getFieldId('67960');\n\t\tlet basiclimitForEligibleChildrenBornInTheCurrentTaxYearOrEarlierForWhomTheDisabilityAmountCanBeClaimed = savedForm[basiclimitForEligibleChildrenBornInTheCurrentTaxYearOrEarlierForWhomTheDisabilityAmountCanBeClaimedFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+basiclimitForEligibleChildrenBornInTheCurrentTaxYearOrEarlierForWhomTheDisabilityAmountCanBeClaimed;\nassert.strictEqual(  basiclimitForEligibleChildrenBornInTheCurrentTaxYearOrEarlierForWhomTheDisabilityAmountCanBeClaimed, '11000', 'Income Feild should be built');",
                            "err": {},
                            "uuid": "74d48f0f-2bef-4ecd-889a-4531b256c0d0",
                            "parentUUID": "88046367-ac5d-4024-b32c-459e55397990",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F9921 should be  allowed with amount    allow.value ==1",
                            "fullTitle": "NetIncome_Line214_3---Input F21400 to exceed 2/3 of the taxpayers earned income.  F67990 is not present for child care expenses.  Software must not allow.   //(TP single, TP T4 $6,000: T5, Box 13 =$ 30,000: T2202A == 12 Part time Months Depandant 3 yrs old, Care ex. of $15,000: Child is disabled) .  F9921 should be  allowed with amount    allow.value ==1",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let numberOfEligibleChildrenBornInTheCurrentTaxYearOrEarlierforWhomTheDisabilityAmountCanBeClaimedFeild = getFieldId('9921');\n\t\tlet  numberOfEligibleChildrenBornInTheCurrentTaxYearOrEarlierforWhomTheDisabilityAmountCanBeClaimed = savedForm[ numberOfEligibleChildrenBornInTheCurrentTaxYearOrEarlierforWhomTheDisabilityAmountCanBeClaimedFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+numberOfEligibleChildrenBornInTheCurrentTaxYearOrEarlierforWhomTheDisabilityAmountCanBeClaimed;\nassert.strictEqual(  numberOfEligibleChildrenBornInTheCurrentTaxYearOrEarlierforWhomTheDisabilityAmountCanBeClaimed, '1', ' Feild should be built');",
                            "err": {},
                            "uuid": "2c07efb7-72c6-49b7-9017-61c369a30c6e",
                            "parentUUID": "88046367-ac5d-4024-b32c-459e55397990",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F9972 should be  allowed with amount    allow.value ==15000",
                            "fullTitle": "NetIncome_Line214_3---Input F21400 to exceed 2/3 of the taxpayers earned income.  F67990 is not present for child care expenses.  Software must not allow.   //(TP single, TP T4 $6,000: T5, Box 13 =$ 30,000: T2202A == 12 Part time Months Depandant 3 yrs old, Care ex. of $15,000: Child is disabled) .  F9972 should be  allowed with amount    allow.value ==15000",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let childCareExpensesPaidForEligibleChildrenBorninTheCurrentTaxYearOrEarlierForWhomTheDisabilityAmountCanBeClaimedFeild = getFieldId('9972');\n\t\tlet childCareExpensesPaidForEligibleChildrenBorninTheCurrentTaxYearOrEarlierForWhomTheDisabilityAmountCanBeClaimed = savedForm[ childCareExpensesPaidForEligibleChildrenBorninTheCurrentTaxYearOrEarlierForWhomTheDisabilityAmountCanBeClaimedFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+ childCareExpensesPaidForEligibleChildrenBorninTheCurrentTaxYearOrEarlierForWhomTheDisabilityAmountCanBeClaimed;\nassert.strictEqual( childCareExpensesPaidForEligibleChildrenBorninTheCurrentTaxYearOrEarlierForWhomTheDisabilityAmountCanBeClaimed, '15000', ' Feild should be built');",
                            "err": {},
                            "uuid": "6698cae3-11b8-4c7b-b5a3-7eb2b9770cec",
                            "parentUUID": "88046367-ac5d-4024-b32c-459e55397990",
                            "isHook": false,
                            "skipped": false
                        }
                    ],
                    "suites": [],
                    "passes": [
                        "93207fbb-633a-4cb5-93b8-1ef9b468996d",
                        "945a4b46-b772-46b8-aecd-67939658f2ab",
                        "74d48f0f-2bef-4ecd-889a-4531b256c0d0",
                        "2c07efb7-72c6-49b7-9017-61c369a30c6e",
                        "6698cae3-11b8-4c7b-b5a3-7eb2b9770cec"
                    ],
                    "failures": [],
                    "pending": [],
                    "skipped": [],
                    "duration": 0,
                    "root": false,
                    "rootEmpty": false,
                    "_timeout": 150000
                },
                {
                    "uuid": "ccc23dec-f839-4f28-851a-7764507b9e73",
                    "title": "NetIncome_Line214_4TP--Input F21400 to exceed 2/3 of the taxpayers earned income.  F67990 is not present for child care expenses.  Software must not allow.  //(TP Married,Linked rts, TP T5 = $60,000 (Box 13): T2202A, 12 Months parttimeSP T5 (Box 13) = $15,000, T2202A, 12 Months parttime Depandant 3 yrs old, Care of $10,000).",
                    "fullFile": "D:\\Rita\\taxtron\\code\\TaxTronWebTests\\my_work\\test_for_report_2020\\TCASES\\tcNetIncome_Line214_4.js",
                    "file": "\\my_work\\test_for_report_2020\\TCASES\\tcNetIncome_Line214_4.js",
                    "beforeHooks": [
                        {
                            "title": "\"before all\" hook",
                            "fullTitle": "NetIncome_Line214_4TP--Input F21400 to exceed 2/3 of the taxpayers earned income.  F67990 is not present for child care expenses.  Software must not allow.  //(TP Married,Linked rts, TP T5 = $60,000 (Box 13): T2202A, 12 Months parttimeSP T5 (Box 13) = $15,000, T2202A, 12 Months parttime Depandant 3 yrs old, Care of $10,000). \"before all\" hook",
                            "timedOut": false,
                            "duration": 115765,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "driver = new Builder()\n    .withCapabilities(Capabilities.chrome().setAcceptInsecureCerts(true))\n    .build();\ndriver.manage().window().setRect({ width: 1366, height: 768 });\nawait login(driver, 'ritakumar@outlook.com', 'rishu12rashi');\nawait selectNewReturn(driver,province);\nawait switchToastOff(driver);\n        \nawait setInputById(driver, 'Firstnames0', 'AMAM');\nawait setInputById(driver, 'Surname0', 'AMAMAM');\nawait selectDateById(driver, 'DOB0', '1965/01/01');\nawait setInputById(driver, 'SIN0', '123123127');\nawait selectComboById(driver, 'MaritalStatus0', 'Married');\nawait selectToggleById(driver, 'IsLinkedReturn0', '1');\nawait nextClick(driver);\nawait setAddressById(driver, 'fullAdd0', '6464 Yonge St, North York, ON  L6Y4E6, Canada');\nawait nextClick(driver);\nawait selectToggleById(driver, 'quesFP0', '0');\nawait selectToggleById(driver, 'quesPrinResi0', '0');\nawait nextClick(driver);\nawait setInputById(driver, 'Firstnames0sp', 'BABAB');\nawait setInputById(driver, 'Surname0sp', 'LLLALAL');\nawait selectDateById(driver, 'DOB0sp', '1968/01/01');\nawait setInputById(driver, 'SIN0sp', '430442848');\nawait selectComboById(driver, 'Province0sp', 'Ontario');\nawait nextClick(driver);\n//await setInputById(driver, 'StreetName0', '6464 Yonge St');\nawait selectToggleById(driver, 'quesFP0sp', '0');\nawait nextClick(driver);\nawait selectTab(driver, 'Dependant');\nawait selectToggleById(driver, 'HaveDependants0', '1');\nawait nextClick(driver);\nawait setInputById(driver, 'DepFName10', 'd');\nawait setInputById(driver, 'DepSurname10', 'd');\nawait selectDateById(driver, 'DepDOB10', '2017/07/13');\nawait selectComboById(driver, 'DepLien10', 'son');\nawait setInputById(driver, 'DepIncomeExcess0', '0');\nawait nextClick(driver);\nawait nextClick(driver);\nawait selectToggleById(driver, 'didYouPayCC0tp', '1');\n\t            await nextClick(driver);\n\t\t        await selectComboById(driver, 'CC_30tp', 'd');\nawait setInputById(driver, 'CCWFederalUE0tp', '10000');\nawait nextClick(driver);\nawait selectTab(driver, 'Income');\nawait selectToggleById(driver, 'InvestmentIncome0tp', '1');\nawait clickDivById(driver, 'T50tp');\nawait nextClick(driver);\nawait selectToggleById(driver, 'InvestmentIncome0sp', '1');\nawait clickDivById(driver, 'T50sp');\nawait nextClick(driver);\nawait setInputById(driver, 'Box130tp', '60000');\nawait selectComboById(driver, 'T5_2540tp', 'Bank Interest');\nawait nextClick(driver);\n              \nawait setInputById(driver, 'Box130sp', '15000');\nawait selectComboById(driver, 'T5_2540sp', 'Bank Interest');\nawait nextClick(driver);\nawait selectTab(driver, 'Deduction');\nawait selectTab(driver, 'Deduction_Main');\nawait selectToggleById(driver, 'qStudent0tp', '1');\nawait nextClick(driver);\nawait selectToggleById(driver, 'T2202AAttendedInst20tp', '1');\nawait nextClick(driver);\nawait setInputById(driver, 'T2202_B19_10tp', '2001');\nawait setInputById(driver, 'T2202_B20_10tp', '2012');\nawait setInputById(driver, 'T2202_B23_10tp', '5000');\nawait setInputById(driver, 'T2202_B21_10tp', '12');\nawait nextClick(driver);\nawait selectToggleById(driver, 'qStudent0sp', '1');\nawait nextClick(driver);\nawait selectToggleById(driver, 'T2202AAttendedInst20sp', '1');\nawait nextClick(driver);\nawait setInputById(driver, 'T2202_B23_10sp', '5000');\nawait setInputById(driver, 'T2202_B21_10sp', '12');\nawait nextClick(driver);\nawait selectTab(driver, 'MiscDeductions');\nawait selectToggleById(driver, 'qAlimony0tp', '1');\nawait nextClick(driver);\nawait selectToggleById(driver, 'CCPartCa0tp', '1');\nawait setInputById(driver, 'CMonths0tp', '12');\nawait selectToggleById(driver, 'QT778_2_260tp', '1');\nawait selectToggleById(driver, 'T778_2_280tp', '1');\nawait selectToggleById(driver, 'FullPart0tp', '0');\nawait setInputById(driver, 'SchoolMonths0tp', '12');\nawait selectToggleById(driver, 'T778_2_300tp', '1');\nawait nextClick(driver);\nawait nextClick(driver);\n               /* await selectToggleById(driver, 'qAlimony0sp', '1');\nawait nextClick(driver);\nawait selectToggleById(driver, 'QT778_2_260sp', '1');\nawait selectToggleById(driver, 'T778_2_280sp', '1');\nawait selectToggleById(driver, 'FullPart0sp', '0');\nawait setInputById(driver, 'SchoolMonths0sp', '12');\nawait nextClick(driver);*/\nawait nextClick(driver);\nsavedForm = await getServerFile(driver);",
                            "err": {},
                            "uuid": "b0962c7e-03e1-4565-8212-5c8aad4e31f2",
                            "parentUUID": "ccc23dec-f839-4f28-851a-7764507b9e73",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "afterHooks": [
                        {
                            "title": "\"after all\" hook",
                            "fullTitle": "NetIncome_Line214_4TP--Input F21400 to exceed 2/3 of the taxpayers earned income.  F67990 is not present for child care expenses.  Software must not allow.  //(TP Married,Linked rts, TP T5 = $60,000 (Box 13): T2202A, 12 Months parttimeSP T5 (Box 13) = $15,000, T2202A, 12 Months parttime Depandant 3 yrs old, Care of $10,000). \"after all\" hook",
                            "timedOut": false,
                            "duration": 1577,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "await logoutById(driver);\nawait driver.quit();",
                            "err": {},
                            "uuid": "7c4b9733-9528-4e2f-9677-b74ed3f95712",
                            "parentUUID": "ccc23dec-f839-4f28-851a-7764507b9e73",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "tests": [
                        {
                            "title": " F21400 should be  allowed with amount    allow.value ==2400",
                            "fullTitle": "NetIncome_Line214_4TP--Input F21400 to exceed 2/3 of the taxpayers earned income.  F67990 is not present for child care expenses.  Software must not allow.  //(TP Married,Linked rts, TP T5 = $60,000 (Box 13): T2202A, 12 Months parttimeSP T5 (Box 13) = $15,000, T2202A, 12 Months parttime Depandant 3 yrs old, Care of $10,000).  F21400 should be  allowed with amount    allow.value ==2400",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let  childCareExpensesFeild = getFieldId('21400');\nlet  childCareExpenses = savedForm[ childCareExpensesFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+  childCareExpenses;\nassert.strictEqual(   childCareExpenses, '2400', ' Feild should be built');",
                            "err": {},
                            "uuid": "3ee4c9ca-fd4f-4ee7-baa3-6f63c4d64f80",
                            "parentUUID": "ccc23dec-f839-4f28-851a-7764507b9e73",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F67990 should be  allowed with amount    allow.value ==2400",
                            "fullTitle": "NetIncome_Line214_4TP--Input F21400 to exceed 2/3 of the taxpayers earned income.  F67990 is not present for child care expenses.  Software must not allow.  //(TP Married,Linked rts, TP T5 = $60,000 (Box 13): T2202A, 12 Months parttimeSP T5 (Box 13) = $15,000, T2202A, 12 Months parttime Depandant 3 yrs old, Care of $10,000).  F67990 should be  allowed with amount    allow.value ==2400",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let childCareExpensesPaidWhileEnrolledInAnEducationalProgramFeild = getFieldId('67990');\nlet    childCareExpensesPaidWhileEnrolledInAnEducationalProgram = savedForm[  childCareExpensesPaidWhileEnrolledInAnEducationalProgramFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+  childCareExpensesPaidWhileEnrolledInAnEducationalProgram;\nassert.strictEqual(  childCareExpensesPaidWhileEnrolledInAnEducationalProgram, '2400', ' Feild should be built');",
                            "err": {},
                            "uuid": "90922b41-0c93-4ec5-aeec-920d0ea37b5d",
                            "parentUUID": "ccc23dec-f839-4f28-851a-7764507b9e73",
                            "isHook": false,
                            "skipped": false
                        }
                    ],
                    "suites": [],
                    "passes": [
                        "3ee4c9ca-fd4f-4ee7-baa3-6f63c4d64f80",
                        "90922b41-0c93-4ec5-aeec-920d0ea37b5d"
                    ],
                    "failures": [],
                    "pending": [],
                    "skipped": [],
                    "duration": 0,
                    "root": false,
                    "rootEmpty": false,
                    "_timeout": 200000
                },
                {
                    "uuid": "59d26a9a-7f7c-4335-8c1f-df42fa08818d",
                    "title": "NetIncome_Line214_5TP--Input F21400 to exceed 2/3 of the taxpayers earned income.  F67990 is not present for child care expenses.  Software must not allow.  //(TP Married,Linked rts, TP T5 = $60,000 (Box 13): T2202A, 12 Months parttimeSP T5 (Box 13) = $15,000, T2202A, 12 Months parttime Depandant 3 yrs old, Care of $10,000).",
                    "fullFile": "D:\\Rita\\taxtron\\code\\TaxTronWebTests\\my_work\\test_for_report_2020\\TCASES\\tcNetIncome_Line214_5.js",
                    "file": "\\my_work\\test_for_report_2020\\TCASES\\tcNetIncome_Line214_5.js",
                    "beforeHooks": [
                        {
                            "title": "\"before all\" hook",
                            "fullTitle": "NetIncome_Line214_5TP--Input F21400 to exceed 2/3 of the taxpayers earned income.  F67990 is not present for child care expenses.  Software must not allow.  //(TP Married,Linked rts, TP T5 = $60,000 (Box 13): T2202A, 12 Months parttimeSP T5 (Box 13) = $15,000, T2202A, 12 Months parttime Depandant 3 yrs old, Care of $10,000). \"before all\" hook",
                            "timedOut": false,
                            "duration": 132726,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "driver = new Builder()\n    .withCapabilities(Capabilities.chrome().setAcceptInsecureCerts(true))\n    .build();\ndriver.manage().window().setRect({ width: 1366, height: 768 });\nawait login(driver, 'ritakumar@outlook.com', 'rishu12rashi');\nawait selectNewReturn(driver,province);\nawait switchToastOff(driver);\n        \nawait setInputById(driver, 'Firstnames0', 'AMAM');\nawait setInputById(driver, 'Surname0', 'AMAMAM');\nawait selectDateById(driver, 'DOB0', '1965/01/01');\nawait setInputById(driver, 'SIN0', '123123127');\nawait selectComboById(driver, 'MaritalStatus0', 'Married');\nawait selectToggleById(driver, 'IsLinkedReturn0', '1');\nawait nextClick(driver);\nawait setAddressById(driver, 'fullAdd0', '6464 Yonge St, North York, ON  L6Y4E6, Canada');\nawait nextClick(driver);\nawait selectToggleById(driver, 'quesFP0', '0');\nawait selectToggleById(driver, 'quesPrinResi0', '0');\nawait nextClick(driver);\nawait setInputById(driver, 'Firstnames0sp', 'BABAB');\nawait setInputById(driver, 'Surname0sp', 'LLLALAL');\nawait selectDateById(driver, 'DOB0sp', '1968/01/01');\nawait setInputById(driver, 'SIN0sp', '430442848');\nawait selectComboById(driver, 'Province0sp', 'Ontario');\nawait nextClick(driver);\n//await setInputById(driver, 'StreetName0', '6464 Yonge St');\nawait selectToggleById(driver, 'quesFP0sp', '0');\nawait nextClick(driver);\nawait selectTab(driver, 'Dependant');\nawait selectToggleById(driver, 'HaveDependants0', '1');\nawait nextClick(driver);\nawait setInputById(driver, 'DepFName10', 'd');\nawait setInputById(driver, 'DepSurname10', 'd');\nawait selectDateById(driver, 'DepDOB10', '2017/07/13');\nawait selectComboById(driver, 'DepLien10', 'son');\nawait setInputById(driver, 'DepIncomeExcess0', '0');\nawait nextClick(driver);\nawait addAnother(driver);\nawait setInputById(driver, 'DepFName11', 's');\nawait setInputById(driver, 'DepSurname11', 's');\nawait selectDateById(driver, 'DepDOB11', '2009/01/01');\nawait selectComboById(driver, 'DepLien11', 'sister');\nawait setInputById(driver, 'DepIncomeExcess1', '0');\nawait nextClick(driver);\nawait nextClick(driver);\nawait selectToggleById(driver, 'didYouPayCC0tp', '1');\n\t            await nextClick(driver);\n\t\t        await setInputById(driver, 'CCWFederalUE0tp', '10000');\nawait selectComboById(driver, 'CC_30tp', 'd');\nawait waitTillMs(driver,500);\n//await clickDivById (driver,'addTabpagetitleCC')\n\nawait addTabpagetitleCCclick(driver);\nawait selectComboById(driver, 'CC_31tp', 's');\nawait setInputById(driver, 'CCWFederalUE1tp', '5000');\nawait nextClick(driver);\nawait selectTab(driver, 'Income');\nawait selectTab(driver, 'IncomeProfile');\nawait selectToggleById(driver, 'InvestmentIncome0tp', '1');\nawait clickDivById(driver, 'T50tp');\nawait nextClick(driver);\nawait selectToggleById(driver, 'InvestmentIncome0sp', '1');\nawait clickDivById(driver, 'T50sp');\nawait nextClick(driver);\nawait setInputById(driver, 'Box130tp', '60000');\nawait selectComboById(driver, 'T5_2540tp', 'Bank Interest');\nawait nextClick(driver);\n              \nawait setInputById(driver, 'Box130sp', '15000');\nawait selectComboById(driver, 'T5_2540sp', 'Bank Interest');\nawait nextClick(driver);\nawait selectTab(driver, 'Deduction');\nawait selectTab(driver, 'Deduction_Main');\nawait selectToggleById(driver, 'qStudent0tp', '1');\nawait nextClick(driver);\nawait selectToggleById(driver, 'T2202AAttendedInst20tp', '1');\nawait nextClick(driver);\nawait setInputById(driver, 'T2202_B19_10tp', '2001');\nawait setInputById(driver, 'T2202_B20_10tp', '2012');\nawait setInputById(driver, 'T2202_B23_10tp', '5000');\nawait setInputById(driver, 'T2202_B21_10tp', '12');\nawait nextClick(driver);\nawait selectToggleById(driver, 'qStudent0sp', '1');\nawait nextClick(driver);\nawait selectToggleById(driver, 'T2202AAttendedInst20sp', '1');\nawait nextClick(driver);\nawait setInputById(driver, 'T2202_B23_10sp', '5000');\nawait setInputById(driver, 'T2202_B21_10sp', '12');\nawait nextClick(driver);\nawait selectTab(driver, 'MiscDeductions');\nawait selectToggleById(driver, 'qAlimony0tp', '1');\nawait nextClick(driver);\nawait selectToggleById(driver, 'CCPartCa0tp', '1');\nawait setInputById(driver, 'CMonths0tp', '12');\nawait selectToggleById(driver, 'QT778_2_260tp', '1');\nawait selectToggleById(driver, 'T778_2_280tp', '1');\nawait selectToggleById(driver, 'FullPart0tp', '0');\nawait setInputById(driver, 'SchoolMonths0tp', '12');\nawait selectToggleById(driver, 'T778_2_300tp', '1');\nawait nextClick(driver);\nawait nextClick(driver);\n               /* await selectToggleById(driver, 'qAlimony0sp', '0');\nawait nextClick(driver);\nawait selectToggleById(driver, 'QT778_2_260sp', '1');\nawait selectToggleById(driver, 'T778_2_280sp', '1');\nawait selectToggleById(driver, 'FullPart0sp', '0');\nawait setInputById(driver, 'SchoolMonths0sp', '12');*/\nawait nextClick(driver);\nsavedForm = await getServerFile(driver);",
                            "err": {},
                            "uuid": "8279121a-6966-4c7b-bc53-3eee08172f8a",
                            "parentUUID": "59d26a9a-7f7c-4335-8c1f-df42fa08818d",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "afterHooks": [
                        {
                            "title": "\"after all\" hook",
                            "fullTitle": "NetIncome_Line214_5TP--Input F21400 to exceed 2/3 of the taxpayers earned income.  F67990 is not present for child care expenses.  Software must not allow.  //(TP Married,Linked rts, TP T5 = $60,000 (Box 13): T2202A, 12 Months parttimeSP T5 (Box 13) = $15,000, T2202A, 12 Months parttime Depandant 3 yrs old, Care of $10,000). \"after all\" hook",
                            "timedOut": false,
                            "duration": 5735,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "await logoutById(driver);\nawait driver.quit();",
                            "err": {},
                            "uuid": "a34b5908-c4ca-462c-8c5c-904fed47f6bd",
                            "parentUUID": "59d26a9a-7f7c-4335-8c1f-df42fa08818d",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "tests": [
                        {
                            "title": " F21400 should be  allowed with amount    allow.value ==3900",
                            "fullTitle": "NetIncome_Line214_5TP--Input F21400 to exceed 2/3 of the taxpayers earned income.  F67990 is not present for child care expenses.  Software must not allow.  //(TP Married,Linked rts, TP T5 = $60,000 (Box 13): T2202A, 12 Months parttimeSP T5 (Box 13) = $15,000, T2202A, 12 Months parttime Depandant 3 yrs old, Care of $10,000).  F21400 should be  allowed with amount    allow.value ==3900",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let  childCareExpensesFeild = getFieldId('21400');\nlet  childCareExpenses = savedForm[ childCareExpensesFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+  childCareExpenses;\nassert.strictEqual(   childCareExpenses, '3900', ' Feild should be built');",
                            "err": {},
                            "uuid": "1cffb2e1-e27c-42fa-8fa3-0e7b7e42309a",
                            "parentUUID": "59d26a9a-7f7c-4335-8c1f-df42fa08818d",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F67990 should be  allowed with amount    allow.value ==3900",
                            "fullTitle": "NetIncome_Line214_5TP--Input F21400 to exceed 2/3 of the taxpayers earned income.  F67990 is not present for child care expenses.  Software must not allow.  //(TP Married,Linked rts, TP T5 = $60,000 (Box 13): T2202A, 12 Months parttimeSP T5 (Box 13) = $15,000, T2202A, 12 Months parttime Depandant 3 yrs old, Care of $10,000).  F67990 should be  allowed with amount    allow.value ==3900",
                            "timedOut": false,
                            "duration": 16,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let childCareExpensesPaidWhileEnrolledInAnEducationalProgramFeild = getFieldId('67990');\nlet    childCareExpensesPaidWhileEnrolledInAnEducationalProgram = savedForm[  childCareExpensesPaidWhileEnrolledInAnEducationalProgramFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+  childCareExpensesPaidWhileEnrolledInAnEducationalProgram;\nassert.strictEqual(  childCareExpensesPaidWhileEnrolledInAnEducationalProgram, '3900', ' Feild should be built');",
                            "err": {},
                            "uuid": "603a232d-4b01-479b-92c0-fce751b9f06f",
                            "parentUUID": "59d26a9a-7f7c-4335-8c1f-df42fa08818d",
                            "isHook": false,
                            "skipped": false
                        }
                    ],
                    "suites": [],
                    "passes": [
                        "1cffb2e1-e27c-42fa-8fa3-0e7b7e42309a",
                        "603a232d-4b01-479b-92c0-fce751b9f06f"
                    ],
                    "failures": [],
                    "pending": [],
                    "skipped": [],
                    "duration": 16,
                    "root": false,
                    "rootEmpty": false,
                    "_timeout": 200000
                },
                {
                    "uuid": "496e678b-c73a-4f53-9a28-8e608d57d744",
                    "title": "NetIncome_Line214_6--Input F21400 to exceed 2/3 of the taxpayers earned income.  F67990 is not present for child care expenses.  Software must not allow.  //(TP Married,Linked rts, TP T5 = $60,000 (Box 13): T2202A, 12 Months parttimeSP T5 (Box 13) = $15,000, T2202A, 12 Months parttimeDepandant: Disabled 20 years old, care $ 15,000).",
                    "fullFile": "D:\\Rita\\taxtron\\code\\TaxTronWebTests\\my_work\\test_for_report_2020\\TCASES\\tcNetIncome_Line214_6.js",
                    "file": "\\my_work\\test_for_report_2020\\TCASES\\tcNetIncome_Line214_6.js",
                    "beforeHooks": [
                        {
                            "title": "\"before all\" hook",
                            "fullTitle": "NetIncome_Line214_6--Input F21400 to exceed 2/3 of the taxpayers earned income.  F67990 is not present for child care expenses.  Software must not allow.  //(TP Married,Linked rts, TP T5 = $60,000 (Box 13): T2202A, 12 Months parttimeSP T5 (Box 13) = $15,000, T2202A, 12 Months parttimeDepandant: Disabled 20 years old, care $ 15,000). \"before all\" hook",
                            "timedOut": false,
                            "duration": 119053,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "driver = new Builder()\n    .withCapabilities(Capabilities.chrome().setAcceptInsecureCerts(true))\n    .build();\ndriver.manage().window().setRect({ width: 1366, height: 768 });\nawait login(driver, 'ritakumar@outlook.com', 'rishu12rashi');\nawait selectNewReturn(driver,province);\nawait switchToastOff(driver);\n        \nawait setInputById(driver, 'Firstnames0', 'AMAM');\nawait setInputById(driver, 'Surname0', 'AMAMAM');\nawait selectDateById(driver, 'DOB0', '1965/01/01');\nawait setInputById(driver, 'SIN0', '123123127');\nawait selectComboById(driver, 'MaritalStatus0', 'Married');\nawait selectToggleById(driver, 'IsLinkedReturn0', '1');\nawait nextClick(driver);\nawait setAddressById(driver, 'fullAdd0', '6464 Yonge St, North York, ON  L6Y4E6, Canada');\nawait nextClick(driver);\nawait selectToggleById(driver, 'quesFP0', '0');\nawait selectToggleById(driver, 'quesPrinResi0', '0');\nawait nextClick(driver);\nawait setInputById(driver, 'Firstnames0sp', 'BABAB');\nawait setInputById(driver, 'Surname0sp', 'LLLALAL');\nawait selectDateById(driver, 'DOB0sp', '1968/01/01');\nawait setInputById(driver, 'SIN0sp', '430442848');\nawait selectComboById(driver, 'Province0sp', 'Ontario');\nawait nextClick(driver);\n//await setInputById(driver, 'StreetName0', '6464 Yonge St');\nawait selectToggleById(driver, 'quesFP0sp', '0');\nawait nextClick(driver);\nawait selectTab(driver, 'Dependant');\nawait selectToggleById(driver, 'HaveDependants0', '1');\nawait nextClick(driver);\nawait setInputById(driver, 'DepFName10', 'd');\nawait setInputById(driver, 'DepSurname10', 'd');\nawait selectDateById(driver, 'DepDOB10', '1990/07/13');\nawait selectComboById(driver, 'DepLien10', 'son');\nawait setInputById(driver, 'DepIncomeExcess0', '0');\nawait selectToggleById(driver, 'disQuestion0tp', '1');\nawait selectToggleById(driver, 'Whodis0tp', '1');\nawait nextClick(driver);\nawait nextClick(driver);\nawait selectToggleById(driver, 'didYouPayCC0tp', '1');\n\t            await nextClick(driver);\n\t\t        await selectComboById(driver, 'CC_30tp', 'd');\nawait setInputById(driver, 'CCWFederalUE0tp', '10000');\nawait nextClick(driver);\nawait selectTab(driver, 'Income');\nawait selectToggleById(driver, 'InvestmentIncome0tp', '1');\nawait clickDivById(driver, 'T50tp');\nawait nextClick(driver);\nawait selectToggleById(driver, 'InvestmentIncome0sp', '1');\nawait clickDivById(driver, 'T50sp');\nawait nextClick(driver);\nawait setInputById(driver, 'Box130tp', '60000');\nawait selectComboById(driver, 'T5_2540tp', 'Bank Interest');\nawait nextClick(driver);\nawait setInputById(driver, 'Box130sp', '15000');\nawait selectComboById(driver, 'T5_2540sp', 'Bank Interest');\nawait nextClick(driver);\nawait selectTab(driver, 'Deduction');\nawait selectTab(driver, 'Deduction_Main');\nawait selectToggleById(driver, 'qStudent0tp', '1');\nawait nextClick(driver);\nawait selectToggleById(driver, 'T2202AAttendedInst20tp', '1');\nawait nextClick(driver);\nawait setInputById(driver, 'T2202_B19_10tp', '2001');\nawait setInputById(driver, 'T2202_B20_10tp', '2012');\nawait setInputById(driver, 'T2202_B23_10tp', '5000');\nawait setInputById(driver, 'T2202_B21_10tp', '12');\nawait nextClick(driver);\nawait selectToggleById(driver, 'qStudent0sp', '1');\nawait nextClick(driver);\nawait selectToggleById(driver, 'T2202AAttendedInst20sp', '1');\nawait nextClick(driver);\nawait setInputById(driver, 'T2202_B23_10sp', '5000');\nawait setInputById(driver, 'T2202_B21_10sp', '12');\nawait nextClick(driver);\nawait selectTab(driver, 'MiscDeductions');\nawait selectToggleById(driver, 'qAlimony0tp', '1');\nawait nextClick(driver);\nawait selectToggleById(driver, 'CCPartCa0tp', '1');\nawait setInputById(driver, 'CMonths0tp', '12');\nawait selectToggleById(driver, 'QT778_2_260tp', '1');\nawait selectToggleById(driver, 'T778_2_280tp', '1');\nawait selectToggleById(driver, 'FullPart0tp', '0');\nawait setInputById(driver, 'SchoolMonths0tp', '12');\nawait selectToggleById(driver, 'T778_2_300tp', '1');\nawait nextClick(driver);\nawait nextClick(driver);\nawait selectToggleById(driver, 'qAlimony0sp', '0');\nawait nextClick(driver);\n               /* await selectToggleById(driver, 'QT778_2_260sp', '1');\nawait selectToggleById(driver, 'T778_2_280sp', '1');\nawait selectToggleById(driver, 'FullPart0sp', '0');\nawait setInputById(driver, 'SchoolMonths0sp', '12');\nawait nextClick(driver);*/\nawait nextClick(driver);\nsavedForm = await getServerFile(driver);",
                            "err": {},
                            "uuid": "f8433749-f92a-4d23-84d2-530c2c81c2d8",
                            "parentUUID": "496e678b-c73a-4f53-9a28-8e608d57d744",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "afterHooks": [
                        {
                            "title": "\"after all\" hook",
                            "fullTitle": "NetIncome_Line214_6--Input F21400 to exceed 2/3 of the taxpayers earned income.  F67990 is not present for child care expenses.  Software must not allow.  //(TP Married,Linked rts, TP T5 = $60,000 (Box 13): T2202A, 12 Months parttimeSP T5 (Box 13) = $15,000, T2202A, 12 Months parttimeDepandant: Disabled 20 years old, care $ 15,000). \"after all\" hook",
                            "timedOut": false,
                            "duration": 5760,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "await logoutById(driver);\nawait driver.quit();",
                            "err": {},
                            "uuid": "fadedd96-ad97-4636-903d-12d72bd148db",
                            "parentUUID": "496e678b-c73a-4f53-9a28-8e608d57d744",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "tests": [
                        {
                            "title": " F21400 should be  allowed with amount    allow.value ==3300",
                            "fullTitle": "NetIncome_Line214_6--Input F21400 to exceed 2/3 of the taxpayers earned income.  F67990 is not present for child care expenses.  Software must not allow.  //(TP Married,Linked rts, TP T5 = $60,000 (Box 13): T2202A, 12 Months parttimeSP T5 (Box 13) = $15,000, T2202A, 12 Months parttimeDepandant: Disabled 20 years old, care $ 15,000).  F21400 should be  allowed with amount    allow.value ==3300",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let  childCareExpensesFeild = getFieldId('21400');\nlet  childCareExpenses = savedForm[ childCareExpensesFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+  childCareExpenses;\nassert.strictEqual(   childCareExpenses, '3300', ' Feild should be built');",
                            "err": {},
                            "uuid": "2e02654e-8ead-4c9c-a06b-6fcaeda91ea7",
                            "parentUUID": "496e678b-c73a-4f53-9a28-8e608d57d744",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F67990 should be  allowed with amount    allow.value ==3300",
                            "fullTitle": "NetIncome_Line214_6--Input F21400 to exceed 2/3 of the taxpayers earned income.  F67990 is not present for child care expenses.  Software must not allow.  //(TP Married,Linked rts, TP T5 = $60,000 (Box 13): T2202A, 12 Months parttimeSP T5 (Box 13) = $15,000, T2202A, 12 Months parttimeDepandant: Disabled 20 years old, care $ 15,000).  F67990 should be  allowed with amount    allow.value ==3300",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let childCareExpensesPaidWhileEnrolledInAnEducationalProgramFeild = getFieldId('67990');\nlet    childCareExpensesPaidWhileEnrolledInAnEducationalProgram = savedForm[  childCareExpensesPaidWhileEnrolledInAnEducationalProgramFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+  childCareExpensesPaidWhileEnrolledInAnEducationalProgram;\nassert.strictEqual(  childCareExpensesPaidWhileEnrolledInAnEducationalProgram, '3300', ' Feild should be built');",
                            "err": {},
                            "uuid": "88ac14a1-9d40-4ccd-8fe7-55fce3c1ba7c",
                            "parentUUID": "496e678b-c73a-4f53-9a28-8e608d57d744",
                            "isHook": false,
                            "skipped": false
                        }
                    ],
                    "suites": [],
                    "passes": [
                        "2e02654e-8ead-4c9c-a06b-6fcaeda91ea7",
                        "88ac14a1-9d40-4ccd-8fe7-55fce3c1ba7c"
                    ],
                    "failures": [],
                    "pending": [],
                    "skipped": [],
                    "duration": 0,
                    "root": false,
                    "rootEmpty": false,
                    "_timeout": 150000
                },
                {
                    "uuid": "15c3c1cb-368c-46dc-abff-5ac1e550c980",
                    "title": "NetIncome_Line214_7TP. Build a return with an entry at F67980 on a T778 and the amount at F21400 exceeds 2/3 of net income (F23600+ F21400 + F23500) plus 2/3 of earned income   Software must not allow..  //(TP Married,Linked rts, TP T4 = $60,000 (Box 14)SP T4 (Box 14) = $15,000, T2202A, 12 Months parttime Depandant: Disabled 20 years old, care $ 15,000)  ",
                    "fullFile": "D:\\Rita\\taxtron\\code\\TaxTronWebTests\\my_work\\test_for_report_2020\\TCASES\\tcNetIncome_Line214_7.js",
                    "file": "\\my_work\\test_for_report_2020\\TCASES\\tcNetIncome_Line214_7.js",
                    "beforeHooks": [
                        {
                            "title": "\"before all\" hook",
                            "fullTitle": "NetIncome_Line214_7TP. Build a return with an entry at F67980 on a T778 and the amount at F21400 exceeds 2/3 of net income (F23600+ F21400 + F23500) plus 2/3 of earned income   Software must not allow..  //(TP Married,Linked rts, TP T4 = $60,000 (Box 14)SP T4 (Box 14) = $15,000, T2202A, 12 Months parttime Depandant: Disabled 20 years old, care $ 15,000)   \"before all\" hook",
                            "timedOut": false,
                            "duration": 118739,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "driver = new Builder()\n\t.withCapabilities(Capabilities.chrome().setAcceptInsecureCerts(true))\n\t.build();\n    driver.manage().window().setRect({ width: 1366, height: 768 });\n        await login(driver, 'ritakumar@outlook.com', 'rishu12rashi');\n                await selectNewReturn(driver,province);\n                await switchToastOff(driver);\n       \n        await setInputById(driver, 'Firstnames0', 'KING');\n        await setInputById(driver, 'Surname0', 'SMITH');\n        await selectDateById(driver, 'DOB0', '1965/10/10');\n        await setInputById(driver, 'SIN0', '222222226');\n        await selectComboById(driver, 'MaritalStatus0', 'Common-law');\n        await selectToggleById(driver, 'domchanged0', '0');\n                await selectToggleById(driver, 'IsLinkedReturn0', '1');\n                await selectToggleById(driver, 'HomeAddressSame0', '1');\n\t            await nextClick(driver);\n        await setInputById(driver, 'fullAdd0', '880 21 St NE, Salmon Arm, NL M2M 3X4, Canada');\n                await selectToggleById(driver, 'addChange0', '0');\n        await selectToggleById(driver, 'bDisabled0', '0');\n        await selectToggleById(driver, 'quesFP0', '0');\n\n        await selectToggleById(driver, 'qCitizen0', '0');\n                await nextClick(driver);\n                await nextClick(driver);\n                await setInputById(driver, 'Firstnames0sp', 'BABAB');\n                await setInputById(driver, 'Surname0sp', 'LLLALAL');\n                await selectDateById(driver, 'DOB0sp', '1968/01/01');\n                await setInputById(driver, 'SIN0sp', '430442848');\n                await selectComboById(driver, 'Province0sp', 'Ontario');\n                await nextClick(driver);\n                //await setInputById(driver, 'StreetName0', '6464 Yonge St');\n                await selectToggleById(driver, 'quesFP0sp', '0');\n                await nextClick(driver);\n                await selectTab(driver, 'Dependant');\n                await selectToggleById(driver, 'HaveDependants0', '1');\n                await nextClick(driver);\n                await setInputById(driver, 'DepFName10', 'd');\n                await setInputById(driver, 'DepSurname10', 'd');\n                await selectDateById(driver, 'DepDOB10', '1990/07/13');\n                await selectComboById(driver, 'DepLien10', 'son');\n                await setInputById(driver, 'DepIncomeExcess0', '0');\n                await selectToggleById(driver, 'disQuestion0tp', '1');\n                await selectToggleById(driver, 'Whodis0tp', '1');\n                await nextClick(driver);\n                await nextClick(driver);\n                await selectToggleById(driver, 'didYouPayCC0tp', '1');\n\t            await nextClick(driver);\n        await selectComboById(driver, 'CC_30tp', 'd');\n                await setInputById(driver, 'CCWFederalUE0tp', '15000');\n                await nextClick(driver);\n                await selectTab(driver, 'Income');\n                await selectToggleById(driver, 'WorkedInYOR0', '1');\n                await clickDivById(driver, 'T40tp');\n                await nextClick(driver);\n                await selectToggleById(driver, 'WorkedInYOR0sp', '1');\n                await clickDivById(driver, 'T40sp');\n                await nextClick(driver);\n                await setInputById(driver, 'T4Work0tp', 'ASD');\n                await setInputById(driver, 'T4B140tp', '60000');\n                await nextClick(driver);\n                await nextClick(driver);\n                await setInputById(driver, 'T4B140sp', '15000');\n                await nextClick(driver);\n                await selectTab(driver, 'Deduction');\n                await selectTab(driver, 'Deduction_Main');\n                await selectToggleById(driver, 'qStudent0tp', '1');\n                await nextClick(driver);\n                await selectToggleById(driver, 'T2202AAttendedInst20tp', '1');\n                await nextClick(driver);\n                await setInputById(driver, 'T2202_B19_10tp', '2001');\n                await setInputById(driver, 'T2202_B20_10tp', '2012');\n                await setInputById(driver, 'T2202_B23_10tp', '5000');\n                await setInputById(driver, 'T2202_B21_10tp', '12');\n                await nextClick(driver);\n                await selectToggleById(driver, 'qStudent0sp', '1');\n                await nextClick(driver);\n                await selectToggleById(driver, 'T2202AAttendedInst20sp', '1');\n                await nextClick(driver);\n                await setInputById(driver, 'T2202_B23_10sp', '5000');\n                await setInputById(driver, 'T2202_B21_10sp', '12');\n                await nextClick(driver);\n                await selectTab(driver, 'MiscDeductions');\n                await selectToggleById(driver, 'qAlimony0tp', '1');\n                await nextClick(driver);\n                await selectToggleById(driver, 'CCPartCa0tp', '1');\n                await setInputById(driver, 'CMonths0tp', '12');\n                await selectToggleById(driver, 'QT778_2_260tp', '1');\n                await selectToggleById(driver, 'T778_2_280tp', '1');\n                await selectToggleById(driver, 'FullPart0tp', '0');\n                await setInputById(driver, 'SchoolMonths0tp', '12');\n                await selectToggleById(driver, 'T778_2_300tp', '1');\n                await nextClick(driver);\n                await nextClick(driver);\n                await selectToggleById(driver, 'qAlimony0sp', '0');\n                await nextClick(driver);\n               /* await selectToggleById(driver, 'CCPartCa0sp', '1');\n                await setInputById(driver, 'CMonths0sp', '12');\n                await selectToggleById(driver, 'QT778_2_260sp', '1');\n                await selectToggleById(driver, 'T778_2_280sp', '0');\n                await selectToggleById(driver, 'T778_2_300sp', '0');\n                await setInputById(driver, 'SchoolMonths0sp', '12');\n                await nextClick(driver);*/\n                await nextClick(driver);\n                savedForm = await getServerFile(driver);",
                            "err": {},
                            "uuid": "08a1eb43-38c1-43e9-862a-15ec37466742",
                            "parentUUID": "15c3c1cb-368c-46dc-abff-5ac1e550c980",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "afterHooks": [
                        {
                            "title": "\"after all\" hook",
                            "fullTitle": "NetIncome_Line214_7TP. Build a return with an entry at F67980 on a T778 and the amount at F21400 exceeds 2/3 of net income (F23600+ F21400 + F23500) plus 2/3 of earned income   Software must not allow..  //(TP Married,Linked rts, TP T4 = $60,000 (Box 14)SP T4 (Box 14) = $15,000, T2202A, 12 Months parttime Depandant: Disabled 20 years old, care $ 15,000)   \"after all\" hook",
                            "timedOut": false,
                            "duration": 1564,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "await logoutById(driver);\n        await driver.quit();",
                            "err": {},
                            "uuid": "06a1740e-521d-4989-949f-c2d948cbe77e",
                            "parentUUID": "15c3c1cb-368c-46dc-abff-5ac1e550c980",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "tests": [
                        {
                            "title": " F21400 should be  allowed with amount    allow.value ==6600",
                            "fullTitle": "NetIncome_Line214_7TP. Build a return with an entry at F67980 on a T778 and the amount at F21400 exceeds 2/3 of net income (F23600+ F21400 + F23500) plus 2/3 of earned income   Software must not allow..  //(TP Married,Linked rts, TP T4 = $60,000 (Box 14)SP T4 (Box 14) = $15,000, T2202A, 12 Months parttime Depandant: Disabled 20 years old, care $ 15,000)    F21400 should be  allowed with amount    allow.value ==6600",
                            "timedOut": false,
                            "duration": 0,
                            "state": "failed",
                            "speed": null,
                            "pass": false,
                            "fail": true,
                            "pending": false,
                            "context": null,
                            "code": "let  childCareExpensesFeild = getFieldId('21400');\nlet  childCareExpenses = savedForm[ childCareExpensesFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+  childCareExpenses;\nassert.strictEqual(   childCareExpenses, '3300', ' Feild should be built');",
                            "err": {
                                "message": "AssertionError [ERR_ASSERTION]:  Feild should be built",
                                "estack": "AssertionError [ERR_ASSERTION]:  Feild should be built\n    at Context.<anonymous> (my_work\\test_for_report_2020\\TCASES\\tcNetIncome_Line214_7.js:125:24)",
                                "diff": "- 6600\n+ 3300\n"
                            },
                            "uuid": "07773b14-5f43-4985-abaa-1ccd2916c284",
                            "parentUUID": "15c3c1cb-368c-46dc-abff-5ac1e550c980",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F67980 should be  allowed with amount    allow.value ==3300",
                            "fullTitle": "NetIncome_Line214_7TP. Build a return with an entry at F67980 on a T778 and the amount at F21400 exceeds 2/3 of net income (F23600+ F21400 + F23500) plus 2/3 of earned income   Software must not allow..  //(TP Married,Linked rts, TP T4 = $60,000 (Box 14)SP T4 (Box 14) = $15,000, T2202A, 12 Months parttime Depandant: Disabled 20 years old, care $ 15,000)    F67980 should be  allowed with amount    allow.value ==3300",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let childCareExpensesPaidWhileEnrolledInAnEducationalProgramFeild = getFieldId('67980');\nlet    childCareExpensesPaidWhileEnrolledInAnEducationalProgram = savedForm[  childCareExpensesPaidWhileEnrolledInAnEducationalProgramFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+  childCareExpensesPaidWhileEnrolledInAnEducationalProgram;\nassert.strictEqual(  childCareExpensesPaidWhileEnrolledInAnEducationalProgram, '3300', ' Feild should be built');",
                            "err": {},
                            "uuid": "685d322f-201b-453f-be50-6f6efc08a75c",
                            "parentUUID": "15c3c1cb-368c-46dc-abff-5ac1e550c980",
                            "isHook": false,
                            "skipped": false
                        }
                    ],
                    "suites": [],
                    "passes": [
                        "685d322f-201b-453f-be50-6f6efc08a75c"
                    ],
                    "failures": [
                        "07773b14-5f43-4985-abaa-1ccd2916c284"
                    ],
                    "pending": [],
                    "skipped": [],
                    "duration": 0,
                    "root": false,
                    "rootEmpty": false,
                    "_timeout": 150000
                },
                {
                    "uuid": "53f24814-adbf-4ba7-a03d-adfdf0122de2",
                    "title": "NetIncome_Line214_8. Build a return with an entry at F67980 on a T778 and the amount at F21400 exceeds 2/3 of net income (F23600+ F21400 + F23500) plus 2/3 of earned income   Software must not allow. //(TP Married,Linked rts, T4 (Box 14) = $15,000, T2202A, 12 Months parttime SP T4 (Box 14) = $60,000, T2202ADepandant: Disabled 20 years old, care $ 15,000)  ",
                    "fullFile": "E:\\Rita\\Taxtron\\WebTest\\my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_Line214_8.js",
                    "file": "\\my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_Line214_8.js",
                    "beforeHooks": [
                        {
                            "title": "\"before all\" hook for \" F21400 should be  allowed with amount  \"",
                            "fullTitle": "NetIncome_Line214_8. Build a return with an entry at F67980 on a T778 and the amount at F21400 exceeds 2/3 of net income (F23600+ F21400 + F23500) plus 2/3 of earned income   Software must not allow. //(TP Married,Linked rts, T4 (Box 14) = $15,000, T2202A, 12 Months parttime SP T4 (Box 14) = $60,000, T2202ADepandant: Disabled 20 years old, care $ 15,000)   \"before all\" hook for \" F21400 should be  allowed with amount  \"",
                            "timedOut": false,
                            "duration": 109359,
                            "state": "failed",
                            "speed": null,
                            "pass": false,
                            "fail": true,
                            "pending": false,
                            "context": null,
                            "code": "driver = new Builder()\n\t.withCapabilities(Capabilities.chrome().setAcceptInsecureCerts(true))\n\t.build();\n    driver.manage().window().setRect({ width: 1366, height: 768 });\n        await login(driver, 'ritakumar@outlook.com', 'rishu12rashi');\n                await selectNewReturn(driver,province);\n                await switchToastOff(driver);\n       \n        await setInputById(driver, 'Firstnames0', 'KING');\n        await setInputById(driver, 'Surname0', 'SMITH');\n        await selectDateById(driver, 'DOB0', '1965/10/10');\n        await setInputById(driver, 'SIN0', '222222226');\n        await selectComboById(driver, 'MaritalStatus0', 'Common-law');\n        await selectToggleById(driver, 'domchanged0', '0');\n                await selectToggleById(driver, 'IsLinkedReturn0', '1');\n                await selectToggleById(driver, 'HomeAddressSame0', '1');\n\t            await nextClick(driver);\n        await setInputById(driver, 'fullAdd0', '880 21 St NE, Salmon Arm, NL M2M 3X4, Canada');\n                await selectToggleById(driver, 'addChange0', '0');\n        await selectToggleById(driver, 'bDisabled0', '0');\n        await selectToggleById(driver, 'quesFP0', '0');\n\n        await selectToggleById(driver, 'qCitizen0', '0');\n                await nextClick(driver);\n                await nextClick(driver);\n                await setInputById(driver, 'Firstnames0sp', 'BABAB');\n                await setInputById(driver, 'Surname0sp', 'LLLALAL');\n                await selectDateById(driver, 'DOB0sp', '1968/01/01');\n                await setInputById(driver, 'SIN0sp', '430442848');\n                await selectComboById(driver, 'Province0sp', 'Ontario');\n                await nextClick(driver);\n                //await setInputById(driver, 'StreetName0', '6464 Yonge St');\n                await selectToggleById(driver, 'quesFP0sp', '0');\n                await nextClick(driver);\n                await selectTab(driver, 'Dependant');\n                await selectToggleById(driver, 'HaveDependants0', '1');\n                await nextClick(driver);\n                await setInputById(driver, 'DepFName10', 'd');\n                await setInputById(driver, 'DepSurname10', 'd');\n                await selectDateById(driver, 'DepDOB10', '1990/07/13');\n                await selectComboById(driver, 'DepLien10', 'son');\n                await setInputById(driver, 'DepIncomeExcess0', '0');\n                await selectToggleById(driver, 'disQuestion0tp', '1');\n                await selectToggleById(driver, 'Whodis0tp', '1');\n                await nextClick(driver);\n                await nextClick(driver);\n                await selectToggleById(driver, 'didYouPayCC0tp', '1');\n\t            await nextClick(driver);\n        await selectComboById(driver, 'CC_30tp', 'd');\n                await setInputById(driver, 'CCWFederalUE0tp', '15000');\n                await nextClick(driver);\n                await selectTab(driver, 'Income');\n                await selectToggleById(driver, 'WorkedInYOR0', '1');\n                await clickDivById(driver, 'T40tp');\n                await nextClick(driver);\n                await selectToggleById(driver, 'WorkedInYOR0sp', '1');\n                await clickDivById(driver, 'T40sp');\n                await nextClick(driver);\n                await setInputById(driver, 'T4Work0tp', 'ASD');\n                await setInputById(driver, 'T4B140tp', '15000');\n                await nextClick(driver);\n                await nextClick(driver);\n                await setInputById(driver, 'T4B140sp', '60000');\n                await nextClick(driver);\n                await selectTab(driver, 'Deduction');\n                await selectTab(driver, 'Deduction_Main');\n                await selectToggleById(driver, 'qStudent0tp', '1');\n                await nextClick(driver);\n                await selectToggleById(driver, 'T2202AAttendedInst20tp', '1');\n                await nextClick(driver);\n                await setInputById(driver, 'T2202_B19_10tp', '2001');\n                await setInputById(driver, 'T2202_B20_10tp', '2012');\n                await setInputById(driver, 'T2202_B23_10tp', '5000');\n                await setInputById(driver, 'T2202_B21_10tp', '12');\n                await nextClick(driver);\n                await selectToggleById(driver, 'qStudent0sp', '1');\n                await nextClick(driver);\n                await selectToggleById(driver, 'T2202AAttendedInst20sp', '1');\n                await nextClick(driver);\n                await setInputById(driver, 'T2202_B23_10sp', '5000');\n                await setInputById(driver, 'T2202_B21_10sp', '12');\n                await nextClick(driver);\n                await selectTab(driver, 'MiscDeductions');\n                await selectToggleById(driver, 'qAlimony0tp', '1');\n                await nextClick(driver);\n                await selectToggleById(driver, 'CCPartCa0tp', '1');\n                await setInputById(driver, 'CMonths0tp', '12');\n               /* await selectToggleById(driver, 'QT778_2_260tp', '1');\n                await selectToggleById(driver, 'T778_2_280tp', '1');\n                await selectToggleById(driver, 'FullPart0tp', '0');\n                await setInputById(driver, 'SchoolMonths0tp', '12');\n                await selectToggleById(driver, 'T778_2_300tp', '1');*/\n                await nextClick(driver);\n                await nextClick(driver);\n                await selectToggleById(driver, 'qAlimony0sp', '1');\n                await nextClick(driver);\n                await nextClick(driver);\n                await selectToggleById(driver, 'CCPartCa0sp', '1');\n                await setInputById(driver, 'CMonths0sp', '12');\n               // await selectToggleById(driver, 'QT778_2_260sp', '1');\n                //await selectToggleById(driver, 'T778_2_280sp', '0');\n               // await selectToggleById(driver, 'T778_2_300sp', '0');\n               // await setInputById(driver, 'SchoolMonths0sp', '12');*/\n                await nextClick(driver);\n                await nextClick(driver);\n                savedForm = await getServerFile(driver);",
                            "err": {
                                "message": "TimeoutError: Wait timed out after 1174ms",
                                "estack": "TimeoutError: Wait timed out after 1174ms\n    at E:\\Rita\\Taxtron\\WebTest\\node_modules\\selenium-webdriver\\lib\\webdriver.js:842:17\n    at runMicrotasks (<anonymous>)\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)",
                                "diff": null
                            },
                            "uuid": "f80f6165-2e7c-40a7-9d41-6f312e8272dc",
                            "parentUUID": "53f24814-adbf-4ba7-a03d-adfdf0122de2",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "afterHooks": [
                        {
                            "title": "\"after all\" hook",
                            "fullTitle": "NetIncome_Line214_8. Build a return with an entry at F67980 on a T778 and the amount at F21400 exceeds 2/3 of net income (F23600+ F21400 + F23500) plus 2/3 of earned income   Software must not allow. //(TP Married,Linked rts, T4 (Box 14) = $15,000, T2202A, 12 Months parttime SP T4 (Box 14) = $60,000, T2202ADepandant: Disabled 20 years old, care $ 15,000)   \"after all\" hook",
                            "timedOut": false,
                            "duration": 5708,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "await logoutById(driver);\n        await driver.quit();",
                            "err": {},
                            "uuid": "ed5b2883-4c16-4f71-833a-6dc160c2b8ac",
                            "parentUUID": "53f24814-adbf-4ba7-a03d-adfdf0122de2",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "tests": [
                        {
                            "title": " F21400 should be  allowed with amount  ",
                            "fullTitle": "NetIncome_Line214_8. Build a return with an entry at F67980 on a T778 and the amount at F21400 exceeds 2/3 of net income (F23600+ F21400 + F23500) plus 2/3 of earned income   Software must not allow. //(TP Married,Linked rts, T4 (Box 14) = $15,000, T2202A, 12 Months parttime SP T4 (Box 14) = $60,000, T2202ADepandant: Disabled 20 years old, care $ 15,000)    F21400 should be  allowed with amount  ",
                            "timedOut": false,
                            "duration": 0,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let  childCareExpensesFeild = getFieldId('21400');\nlet  childCareExpenses = savedForm[ childCareExpensesFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+  childCareExpenses;\nassert.strictEqual(   childCareExpenses, '6700', ' Feild should be built');",
                            "err": {},
                            "uuid": "cfbcb1c6-61c4-4e75-ae88-2f029e9ad0c5",
                            "parentUUID": "53f24814-adbf-4ba7-a03d-adfdf0122de2",
                            "isHook": false,
                            "skipped": true
                        },
                        {
                            "title": " F67980 should be  allowed with amount  ",
                            "fullTitle": "NetIncome_Line214_8. Build a return with an entry at F67980 on a T778 and the amount at F21400 exceeds 2/3 of net income (F23600+ F21400 + F23500) plus 2/3 of earned income   Software must not allow. //(TP Married,Linked rts, T4 (Box 14) = $15,000, T2202A, 12 Months parttime SP T4 (Box 14) = $60,000, T2202ADepandant: Disabled 20 years old, care $ 15,000)    F67980 should be  allowed with amount  ",
                            "timedOut": false,
                            "duration": 0,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let childCareExpensesPaidWhileEnrolledInAnEducationalProgramFeild = getFieldId('67980');\nlet    childCareExpensesPaidWhileEnrolledInAnEducationalProgram = savedForm[  childCareExpensesPaidWhileEnrolledInAnEducationalProgramFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+  childCareExpensesPaidWhileEnrolledInAnEducationalProgram;\nassert.strictEqual(  childCareExpensesPaidWhileEnrolledInAnEducationalProgram, undefined, ' Feild should be built');",
                            "err": {},
                            "uuid": "18162464-4b53-4df2-9bcc-6010b597bb4c",
                            "parentUUID": "53f24814-adbf-4ba7-a03d-adfdf0122de2",
                            "isHook": false,
                            "skipped": true
                        }
                    ],
                    "suites": [],
                    "passes": [],
                    "failures": [],
                    "pending": [],
                    "skipped": [
                        "cfbcb1c6-61c4-4e75-ae88-2f029e9ad0c5",
                        "18162464-4b53-4df2-9bcc-6010b597bb4c"
                    ],
                    "duration": 0,
                    "root": false,
                    "rootEmpty": false,
                    "_timeout": 150000
                },
                {
                    "uuid": "613dfc2e-4519-4aa6-a6d5-f0a634484289",
                    "title": "NetIncome_Line214_9. Build a return with an entry at F67980 on a T778 and the amount at F21400 exceeds 2/3 of net income (F23600+ F21400 + F23500) plus 2/3 of earned income   Software must not allow..  //(TP Married,Linked rts, TP T4 = $60,000 (Box 14)SP T4 (Box 14) = $15,000, T2202A, 12 Months parttime Depandant: 10 years old, care $ 15,000)  ",
                    "fullFile": "E:\\Rita\\Taxtron\\WebTest\\my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_Line214_9.js",
                    "file": "\\my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_Line214_9.js",
                    "beforeHooks": [
                        {
                            "title": "\"before all\" hook for \" F21400 should be  allowed with amount  \"",
                            "fullTitle": "NetIncome_Line214_9. Build a return with an entry at F67980 on a T778 and the amount at F21400 exceeds 2/3 of net income (F23600+ F21400 + F23500) plus 2/3 of earned income   Software must not allow..  //(TP Married,Linked rts, TP T4 = $60,000 (Box 14)SP T4 (Box 14) = $15,000, T2202A, 12 Months parttime Depandant: 10 years old, care $ 15,000)   \"before all\" hook for \" F21400 should be  allowed with amount  \"",
                            "timedOut": false,
                            "duration": 110468,
                            "state": "failed",
                            "speed": null,
                            "pass": false,
                            "fail": true,
                            "pending": false,
                            "context": null,
                            "code": "driver = new Builder()\n\t.withCapabilities(Capabilities.chrome().setAcceptInsecureCerts(true))\n\t.build();\n    driver.manage().window().setRect({ width: 1366, height: 768 });\n        await login(driver, 'ritakumar@outlook.com', 'rishu12rashi');\n                await selectNewReturn(driver,province);\n                await switchToastOff(driver);\n       \n        await setInputById(driver, 'Firstnames0', 'KING');\n        await setInputById(driver, 'Surname0', 'SMITH');\n        await selectDateById(driver, 'DOB0', '1965/10/10');\n        await setInputById(driver, 'SIN0', '222222226');\n        await selectComboById(driver, 'MaritalStatus0', 'Common-law');\n        await selectToggleById(driver, 'domchanged0', '0');\n                await selectToggleById(driver, 'IsLinkedReturn0', '1');\n                await selectToggleById(driver, 'HomeAddressSame0', '1');\n\t            await nextClick(driver);\n        await setInputById(driver, 'fullAdd0', '880 21 St NE, Salmon Arm, NL M2M 3X4, Canada');\n                await selectToggleById(driver, 'addChange0', '0');\n        await selectToggleById(driver, 'bDisabled0', '0');\n        await selectToggleById(driver, 'quesFP0', '0');\n\n        await selectToggleById(driver, 'qCitizen0', '0');\n                await nextClick(driver);\n                await nextClick(driver);\n                await setInputById(driver, 'Firstnames0sp', 'BABAB');\n                await setInputById(driver, 'Surname0sp', 'LLLALAL');\n                await selectDateById(driver, 'DOB0sp', '1968/01/01');\n                await setInputById(driver, 'SIN0sp', '430442848');\n                await selectComboById(driver, 'Province0sp', 'Ontario');\n                await nextClick(driver);\n                //await setInputById(driver, 'StreetName0', '6464 Yonge St');\n                await selectToggleById(driver, 'quesFP0sp', '0');\n                await nextClick(driver);\n                await selectTab(driver, 'Dependant');\n                await selectToggleById(driver, 'HaveDependants0', '1');\n                await nextClick(driver);\n                await setInputById(driver, 'DepFName10', 'd');\n                await setInputById(driver, 'DepSurname10', 'd');\n                await selectDateById(driver, 'DepDOB10', '2010/07/13');\n                await selectComboById(driver, 'DepLien10', 'son');\n                await setInputById(driver, 'DepIncomeExcess0', '0');\n                await nextClick(driver);\n                await nextClick(driver);\n                await selectToggleById(driver, 'didYouPayCC0tp', '1');\n\t            await nextClick(driver);\n        await selectComboById(driver, 'CC_30tp', 'd');\n                await setInputById(driver, 'CCWFederalUE0tp', '15000');\n                await nextClick(driver);\n                await selectTab(driver, 'Income');\n                await selectToggleById(driver, 'WorkedInYOR0', '1');\n                await clickDivById(driver, 'T40tp');\n                await nextClick(driver);\n                await selectToggleById(driver, 'WorkedInYOR0sp', '1');\n                await clickDivById(driver, 'T40sp');\n                await nextClick(driver);\n                await setInputById(driver, 'T4Work0tp', 'ASD');\n                await setInputById(driver, 'T4B140tp', '60000');\n                await nextClick(driver);\n                await nextClick(driver);\n                await setInputById(driver, 'T4B140sp', '15000');\n                await nextClick(driver);\n                await selectTab(driver, 'Deduction');\n                await selectTab(driver, 'Deduction_Main');\n                await selectToggleById(driver, 'qStudent0tp', '1');\n                await nextClick(driver);\n                await selectToggleById(driver, 'T2202AAttendedInst20tp', '1');\n                await nextClick(driver);\n                await setInputById(driver, 'T2202_B19_10tp', '2001');\n                await setInputById(driver, 'T2202_B20_10tp', '2012');\n                await setInputById(driver, 'T2202_B23_10tp', '5000');\n                await setInputById(driver, 'T2202_B21_10tp', '12');\n                await nextClick(driver);\n                await selectToggleById(driver, 'qStudent0sp', '1');\n                await nextClick(driver);\n                await selectToggleById(driver, 'T2202AAttendedInst20sp', '1');\n                await nextClick(driver);\n                await setInputById(driver, 'T2202_B23_10sp', '5000');\n                await setInputById(driver, 'T2202_B21_10sp', '12');\n                await nextClick(driver);\n                await selectTab(driver, 'MiscDeductions');\n                await selectToggleById(driver, 'qAlimony0tp', '1');\n                await nextClick(driver);\n                await selectToggleById(driver, 'CCPartCa0tp', '1');\n                await setInputById(driver, 'CMonths0tp', '12');\n               /* await selectToggleById(driver, 'QT778_2_260tp', '1');\n                await selectToggleById(driver, 'T778_2_280tp', '1');\n                await selectToggleById(driver, 'FullPart0tp', '0');\n                await setInputById(driver, 'SchoolMonths0tp', '12');\n                await selectToggleById(driver, 'T778_2_300tp', '1');*/\n                await nextClick(driver);\n                await nextClick(driver);\n                await selectToggleById(driver, 'qAlimony0sp', '0');\n                await nextClick(driver);\n                await selectToggleById(driver, 'CCPartCa0sp', '1');\n                await setInputById(driver, 'CMonths0sp', '12');\n               // await selectToggleById(driver, 'QT778_2_260sp', '1');\n                //await selectToggleById(driver, 'T778_2_280sp', '0');\n               // await selectToggleById(driver, 'T778_2_300sp', '0');\n               // await setInputById(driver, 'SchoolMonths0sp', '12');\n                await nextClick(driver);\n                await nextClick(driver);\n                savedForm = await getServerFile(driver);",
                            "err": {
                                "message": "TimeoutError: Wait timed out after 1170ms",
                                "estack": "TimeoutError: Wait timed out after 1170ms\n    at E:\\Rita\\Taxtron\\WebTest\\node_modules\\selenium-webdriver\\lib\\webdriver.js:842:17\n    at runMicrotasks (<anonymous>)\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)",
                                "diff": null
                            },
                            "uuid": "e661165f-ddb4-4eaf-b534-3e3da1fda68d",
                            "parentUUID": "613dfc2e-4519-4aa6-a6d5-f0a634484289",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "afterHooks": [
                        {
                            "title": "\"after all\" hook",
                            "fullTitle": "NetIncome_Line214_9. Build a return with an entry at F67980 on a T778 and the amount at F21400 exceeds 2/3 of net income (F23600+ F21400 + F23500) plus 2/3 of earned income   Software must not allow..  //(TP Married,Linked rts, TP T4 = $60,000 (Box 14)SP T4 (Box 14) = $15,000, T2202A, 12 Months parttime Depandant: 10 years old, care $ 15,000)   \"after all\" hook",
                            "timedOut": false,
                            "duration": 5955,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "await logoutById(driver);\n        await driver.quit();",
                            "err": {},
                            "uuid": "fdeaa1fd-bb63-4083-8256-4eb77a0e8021",
                            "parentUUID": "613dfc2e-4519-4aa6-a6d5-f0a634484289",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "tests": [
                        {
                            "title": " F21400 should be  allowed with amount  ",
                            "fullTitle": "NetIncome_Line214_9. Build a return with an entry at F67980 on a T778 and the amount at F21400 exceeds 2/3 of net income (F23600+ F21400 + F23500) plus 2/3 of earned income   Software must not allow..  //(TP Married,Linked rts, TP T4 = $60,000 (Box 14)SP T4 (Box 14) = $15,000, T2202A, 12 Months parttime Depandant: 10 years old, care $ 15,000)    F21400 should be  allowed with amount  ",
                            "timedOut": false,
                            "duration": 0,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let  childCareExpensesFeild = getFieldId('21400');\nlet  childCareExpenses = savedForm[ childCareExpensesFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+  childCareExpenses;\nassert.strictEqual(   childCareExpenses, '3300', ' Feild should be built');",
                            "err": {},
                            "uuid": "0c7dddf7-9c15-4845-ae44-f9f2af3c29e7",
                            "parentUUID": "613dfc2e-4519-4aa6-a6d5-f0a634484289",
                            "isHook": false,
                            "skipped": true
                        },
                        {
                            "title": " F67980 should be  allowed with amount  ",
                            "fullTitle": "NetIncome_Line214_9. Build a return with an entry at F67980 on a T778 and the amount at F21400 exceeds 2/3 of net income (F23600+ F21400 + F23500) plus 2/3 of earned income   Software must not allow..  //(TP Married,Linked rts, TP T4 = $60,000 (Box 14)SP T4 (Box 14) = $15,000, T2202A, 12 Months parttime Depandant: 10 years old, care $ 15,000)    F67980 should be  allowed with amount  ",
                            "timedOut": false,
                            "duration": 0,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let childCareExpensesPaidWhileEnrolledInAnEducationalProgramFeild = getFieldId('67980');\nlet    childCareExpensesPaidWhileEnrolledInAnEducationalProgram = savedForm[  childCareExpensesPaidWhileEnrolledInAnEducationalProgramFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+  childCareExpensesPaidWhileEnrolledInAnEducationalProgram;\nassert.strictEqual(  childCareExpensesPaidWhileEnrolledInAnEducationalProgram, '3300', ' Feild should be built');",
                            "err": {},
                            "uuid": "b03d61a4-9944-4a7c-9bbc-a9dc370fe942",
                            "parentUUID": "613dfc2e-4519-4aa6-a6d5-f0a634484289",
                            "isHook": false,
                            "skipped": true
                        }
                    ],
                    "suites": [],
                    "passes": [],
                    "failures": [],
                    "pending": [],
                    "skipped": [
                        "0c7dddf7-9c15-4845-ae44-f9f2af3c29e7",
                        "b03d61a4-9944-4a7c-9bbc-a9dc370fe942"
                    ],
                    "duration": 0,
                    "root": false,
                    "rootEmpty": false,
                    "_timeout": 150000
                },
                {
                    "uuid": "1520f0c4-0982-4946-8f84-0bda2ee8dab5",
                    "title": "NetIncome_Line215_1--Override F21500 to differ from the amount calculated based on entries on the T929.  Software must not allow.     //(TP Single, TP T4 = $60,000; Disability =Yes, disability expenses of $10,000)",
                    "fullFile": "E:\\Rita\\Taxtron\\WebTest\\my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_Line215_1.js",
                    "file": "\\my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_Line215_1.js",
                    "beforeHooks": [
                        {
                            "title": "\"before all\" hook",
                            "fullTitle": "NetIncome_Line215_1--Override F21500 to differ from the amount calculated based on entries on the T929.  Software must not allow.     //(TP Single, TP T4 = $60,000; Disability =Yes, disability expenses of $10,000) \"before all\" hook",
                            "timedOut": false,
                            "duration": 68057,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "driver = new Builder()\n\t.withCapabilities(Capabilities.chrome().setAcceptInsecureCerts(true))\n\t.build();\ndriver.manage().window().setRect({ width: 1366, height: 768 });\nawait login(driver, 'ritakumar@outlook.com', 'rishu12rashi');\nawait selectNewReturn(driver,province);\nawait switchToastOff(driver);\n        await setInputById(driver, 'Firstnames0', 'FEE');\nawait setInputById(driver, 'Surname0', 'LEE');\nawait selectDateById(driver, 'DOB0', '1975/01/01');\nawait setInputById(driver, 'SIN0', '123123127');\n        await selectComboById(driver, 'MaritalStatus0', 'Single');\n        await selectToggleById(driver, 'domchanged0', '0');\n        await nextClick(driver);\nawait setInputById(driver, 'fullAdd0', '6464 Yonge St, North York, YT M2M 3X4, Canada');\nawait selectToggleById(driver, 'quesFP0', '0');\n        await selectToggleById(driver, 'quesPrinResi0', '0');\n        await selectToggleById(driver, 'bDisabled0tp', '1');\n        await nextClick(driver);\n        await selectTab(driver, 'Income');\nawait selectTab(driver, 'IncomeProfile');\nawait selectToggleById(driver, 'WorkedInYOR0tp', '1');\n        await clickDivById(driver, 'T40tp');\nawait nextClick(driver);\nawait setInputById(driver, 'T4B140', '60000');\n        await selectComboById(driver, 'T4_Box100tp', 'ON');\n        await nextClick(driver);\n        await nextClick(driver);\n        await selectTab(driver, 'Deduction');\n        await selectTab(driver, 'RareSituations');\n        await selectToggleById(driver, 'qT9290tp', '1');\n        await nextClick(driver);\n        await setInputById(driver, 'AmtPaid0tp', '10000');\n        await nextClick(driver);\n        await nextClick(driver);\n        await nextClick(driver);\n        savedForm = await getServerFile(driver);",
                            "err": {},
                            "uuid": "f876a34a-a210-492b-8966-de109c1e14f7",
                            "parentUUID": "1520f0c4-0982-4946-8f84-0bda2ee8dab5",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "afterHooks": [
                        {
                            "title": "\"after all\" hook",
                            "fullTitle": "NetIncome_Line215_1--Override F21500 to differ from the amount calculated based on entries on the T929.  Software must not allow.     //(TP Single, TP T4 = $60,000; Disability =Yes, disability expenses of $10,000) \"after all\" hook",
                            "timedOut": false,
                            "duration": 5527,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "await logoutById(driver);\nawait driver.quit();",
                            "err": {},
                            "uuid": "1a180cf2-1447-4e57-8fd4-ef63eb1dbff2",
                            "parentUUID": "1520f0c4-0982-4946-8f84-0bda2ee8dab5",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "tests": [
                        {
                            "title": " F21500 should be  allowed with amount    allow.value ==10000",
                            "fullTitle": "NetIncome_Line215_1--Override F21500 to differ from the amount calculated based on entries on the T929.  Software must not allow.     //(TP Single, TP T4 = $60,000; Disability =Yes, disability expenses of $10,000)  F21500 should be  allowed with amount    allow.value ==10000",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let  disabilitySupportsDeductionFeild = getFieldId('21500');\n\t\tlet  disabilitySupportsDeduction = savedForm[ disabilitySupportsDeductionFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+ disabilitySupportsDeduction;\nassert.strictEqual(  disabilitySupportsDeduction, '10000', ' Feild should be built');",
                            "err": {},
                            "uuid": "74a7f03c-951b-4eac-9186-3a8ca4692079",
                            "parentUUID": "1520f0c4-0982-4946-8f84-0bda2ee8dab5",
                            "isHook": false,
                            "skipped": false
                        }
                    ],
                    "suites": [],
                    "passes": [
                        "74a7f03c-951b-4eac-9186-3a8ca4692079"
                    ],
                    "failures": [],
                    "pending": [],
                    "skipped": [],
                    "duration": 0,
                    "root": false,
                    "rootEmpty": false,
                    "_timeout": 150000
                },
                {
                    "uuid": "3b2d38d2-e515-49b4-885c-1bc26183b8c6",
                    "title": "NetIncome_Line215_3--Override F21500 to differ from the amount calculated based on entries on the T929.  Software must not allow.     //(TP Single, TP T2125 = $30,000DTC approved, Support Deduction of $10,000)",
                    "fullFile": "E:\\Rita\\Taxtron\\WebTest\\my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_Line215_3.js",
                    "file": "\\my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_Line215_3.js",
                    "beforeHooks": [
                        {
                            "title": "\"before all\" hook",
                            "fullTitle": "NetIncome_Line215_3--Override F21500 to differ from the amount calculated based on entries on the T929.  Software must not allow.     //(TP Single, TP T2125 = $30,000DTC approved, Support Deduction of $10,000) \"before all\" hook",
                            "timedOut": false,
                            "duration": 79686,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "driver = new Builder()\n\t.withCapabilities(Capabilities.chrome().setAcceptInsecureCerts(true))\n\t.build();\ndriver.manage().window().setRect({ width: 1366, height: 768 });\nawait login(driver, 'ritakumar@outlook.com', 'rishu12rashi');\nawait selectNewReturn(driver,province);\nawait switchToastOff(driver);\n        await setInputById(driver, 'Firstnames0', 'FEE');\nawait setInputById(driver, 'Surname0', 'LEE');\nawait selectDateById(driver, 'DOB0', '1975/01/01');\nawait setInputById(driver, 'SIN0', '123123127');\n        await selectComboById(driver, 'MaritalStatus0', 'Single');\n        await selectToggleById(driver, 'domchanged0', '0');\n        await nextClick(driver);\nawait setInputById(driver, 'fullAdd0', '6464 Yonge St, North York, YT M2M 3X4, Canada');\nawait selectToggleById(driver, 'quesFP0', '0');\n        await selectToggleById(driver, 'quesPrinResi0', '0');\n        await selectToggleById(driver, 'bDisabled0tp', '1');\n        await nextClick(driver);\n        await selectTab(driver, 'Income');\n        await selectToggleById(driver, 'SelfEmployed0', '1');\n        await nextClick(driver);\n        await selectTab(driver, 'SelfEmployment');\n        await selectToggleById(driver, 'BPCIncome0', '1'); \n        await nextClick(driver);\n        await setInputById(driver, 'BusName0', 'ABC');\n        await setInputById(driver, 'BusRAN0', '100000009');\n        await selectComboById(driver, 'BusinessIncome0', 'Commission');\n        await selectAgeDateById(driver, 'T2124_SFDStart0tp',Fed.TaxYear,'0','/01/01');\nawait selectAgeDateById(driver, 'T2124_SFDEnd0tp', Fed.TaxYear,'0','/12/31');\n        await selectComboById(driver, 'BusSIC0', 'Wheat farming');\n        await nextClick(driver);\n        await setInputById(driver, 'T2124_610', '30000');\n        await nextClick(driver);\n        await selectTab(driver, 'Deduction');\n        await selectTab(driver, 'RareSituations');\n        await selectToggleById(driver, 'qT9290tp', '1');\n        await nextClick(driver);\n        await setInputById(driver, 'AmtPaid0tp', '10000');\n        await nextClick(driver);\n        await nextClick(driver);\n        await nextClick(driver);\n        savedForm = await getServerFile(driver);",
                            "err": {},
                            "uuid": "d67b49cf-0b17-4631-8fa6-e806aa27dd99",
                            "parentUUID": "3b2d38d2-e515-49b4-885c-1bc26183b8c6",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "afterHooks": [
                        {
                            "title": "\"after all\" hook",
                            "fullTitle": "NetIncome_Line215_3--Override F21500 to differ from the amount calculated based on entries on the T929.  Software must not allow.     //(TP Single, TP T2125 = $30,000DTC approved, Support Deduction of $10,000) \"after all\" hook",
                            "timedOut": false,
                            "duration": 5718,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "await logoutById(driver);\nawait driver.quit();",
                            "err": {},
                            "uuid": "02fb7334-4fd7-4629-91f6-1996edd3e469",
                            "parentUUID": "3b2d38d2-e515-49b4-885c-1bc26183b8c6",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "tests": [
                        {
                            "title": " F21500 should be  allowed with amount    allow.value ==10000",
                            "fullTitle": "NetIncome_Line215_3--Override F21500 to differ from the amount calculated based on entries on the T929.  Software must not allow.     //(TP Single, TP T2125 = $30,000DTC approved, Support Deduction of $10,000)  F21500 should be  allowed with amount    allow.value ==10000",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let  disabilitySupportsDeductionFeild = getFieldId('21500');\n\t\tlet  disabilitySupportsDeduction = savedForm[ disabilitySupportsDeductionFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+ disabilitySupportsDeduction;\nassert.strictEqual(  disabilitySupportsDeduction, '10000', ' Feild should be built');",
                            "err": {},
                            "uuid": "8d1e64ab-a234-4cf7-9340-efeb77c7ca84",
                            "parentUUID": "3b2d38d2-e515-49b4-885c-1bc26183b8c6",
                            "isHook": false,
                            "skipped": false
                        }
                    ],
                    "suites": [],
                    "passes": [
                        "8d1e64ab-a234-4cf7-9340-efeb77c7ca84"
                    ],
                    "failures": [],
                    "pending": [],
                    "skipped": [],
                    "duration": 0,
                    "root": false,
                    "rootEmpty": false,
                    "_timeout": 150000
                },
                {
                    "uuid": "b9c09a3d-1631-4dd1-a7b9-6639dbeb22a3",
                    "title": "NetIncome_Line215_4--Override F21500 to differ from the amount calculated based on entries on the T929.  Software must not allow.     //(TP Single, TP T4A (Box 16) =$30,000 DTC approved, Support Deduction of $5,000 T2202A, 8 month full-time)",
                    "fullFile": "D:\\Rita\\taxtron\\code\\TaxTronWebTests\\my_work\\test_for_report_2020\\TCASES\\tcNetIncome_Line215_4.js",
                    "file": "\\my_work\\test_for_report_2020\\TCASES\\tcNetIncome_Line215_4.js",
                    "beforeHooks": [
                        {
                            "title": "\"before all\" hook",
                            "fullTitle": "NetIncome_Line215_4--Override F21500 to differ from the amount calculated based on entries on the T929.  Software must not allow.     //(TP Single, TP T4A (Box 16) =$30,000 DTC approved, Support Deduction of $5,000 T2202A, 8 month full-time) \"before all\" hook",
                            "timedOut": false,
                            "duration": 74164,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "driver = new Builder()\n\t.withCapabilities(Capabilities.chrome().setAcceptInsecureCerts(true))\n\t.build();\ndriver.manage().window().setRect({ width: 1366, height: 768 });\nawait login(driver, 'ritakumar@outlook.com', 'rishu12rashi');\nawait selectNewReturn(driver,province);\nawait switchToastOff(driver);\n        await setInputById(driver, 'Firstnames0', 'FEE');\nawait setInputById(driver, 'Surname0', 'LEE');\nawait selectDateById(driver, 'DOB0', '1975/01/01');\nawait setInputById(driver, 'SIN0', '123123127');\n        await selectComboById(driver, 'MaritalStatus0', 'Single');\n        await selectToggleById(driver, 'domchanged0', '0');\n        await nextClick(driver);\nawait setInputById(driver, 'fullAdd0', '6464 Yonge St, North York, YT M2M 3X4, Canada');\nawait selectToggleById(driver, 'quesFP0', '0');\n        await selectToggleById(driver, 'quesPrinResi0', '0');\n        await selectToggleById(driver, 'bDisabled0tp', '1');\n        await nextClick(driver);\n        await selectTab(driver, 'Income');\n        await selectToggleById(driver, 'WorkedInYOR0tp', '1');\n        await clickDivById(driver, 'T4Aa');\n        await nextClick(driver);\n        await setInputById(driver, 'T4ABox160tp', '30000');\n        await nextClick(driver);\n        await selectTab(driver, 'Deduction');\n        await selectTab(driver, 'Deduction_Main');\n        await selectToggleById(driver, 'qStudent0tp', '1');\n        await nextClick(driver);\n        await selectToggleById(driver, 'T2202AAttendedInst20tp', '1');\n        await nextClick(driver);\n        await setInputById(driver, 'T2202_B19_10tp', '2001');\n        await setInputById(driver, 'T2202_B20_10tp', '2012');\n        await setInputById(driver, 'T2202_B23_10tp', '5000');\n        await setInputById(driver, 'T2202_B22_10tp', '8');\n        await nextClick(driver);\n        await selectTab(driver, 'Deduction');\n        await selectTab(driver, 'RareSituations');\n        await selectToggleById(driver, 'qT9290tp', '1');\n        await nextClick(driver);\n        await setInputById(driver, 'AmtPaid0tp', '5000');\n        await nextClick(driver);\n        await nextClick(driver);\n        await nextClick(driver);\n        await nextClick(driver);\n        await nextClick(driver);\n        savedForm = await getServerFile(driver);",
                            "err": {},
                            "uuid": "c92995b2-6152-4fc0-b511-f1c221be6c6d",
                            "parentUUID": "b9c09a3d-1631-4dd1-a7b9-6639dbeb22a3",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "afterHooks": [
                        {
                            "title": "\"after all\" hook",
                            "fullTitle": "NetIncome_Line215_4--Override F21500 to differ from the amount calculated based on entries on the T929.  Software must not allow.     //(TP Single, TP T4A (Box 16) =$30,000 DTC approved, Support Deduction of $5,000 T2202A, 8 month full-time) \"after all\" hook",
                            "timedOut": false,
                            "duration": 1573,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "await logoutById(driver);\nawait driver.quit();",
                            "err": {},
                            "uuid": "53d45bbd-e17e-4b2e-bf59-1f1bbbc78aba",
                            "parentUUID": "b9c09a3d-1631-4dd1-a7b9-6639dbeb22a3",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "tests": [
                        {
                            "title": " F21500 should be  allowed with amount    allow.value ==undefined",
                            "fullTitle": "NetIncome_Line215_4--Override F21500 to differ from the amount calculated based on entries on the T929.  Software must not allow.     //(TP Single, TP T4A (Box 16) =$30,000 DTC approved, Support Deduction of $5,000 T2202A, 8 month full-time)  F21500 should be  allowed with amount    allow.value ==undefined",
                            "timedOut": false,
                            "duration": 0,
                            "state": "failed",
                            "speed": null,
                            "pass": false,
                            "fail": true,
                            "pending": false,
                            "context": null,
                            "code": "let  disabilitySupportsDeductionFeild = getFieldId('21500');\n\t\tlet  disabilitySupportsDeduction = savedForm[ disabilitySupportsDeductionFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+ disabilitySupportsDeduction;\nassert.strictEqual(  disabilitySupportsDeduction, '5000', ' Feild should be built');",
                            "err": {
                                "message": "AssertionError [ERR_ASSERTION]:  Feild should be built",
                                "estack": "AssertionError [ERR_ASSERTION]:  Feild should be built\n    at Context.<anonymous> (my_work\\test_for_report_2020\\TCASES\\tcNetIncome_Line215_4.js:68:16)",
                                "diff": null
                            },
                            "uuid": "052b2912-58eb-4744-ac63-fd45f4019278",
                            "parentUUID": "b9c09a3d-1631-4dd1-a7b9-6639dbeb22a3",
                            "isHook": false,
                            "skipped": false
                        }
                    ],
                    "suites": [],
                    "passes": [],
                    "failures": [
                        "052b2912-58eb-4744-ac63-fd45f4019278"
                    ],
                    "pending": [],
                    "skipped": [],
                    "duration": 0,
                    "root": false,
                    "rootEmpty": false,
                    "_timeout": 150000
                },
                {
                    "uuid": "4986fddd-6054-42b8-9779-a1b086bf25f0",
                    "title": "NetIncome_Line217_1--Override F21500 to differ from the amount calculated based on entries on the T929.  Software must not allow.     //(TP Single, TP T4 = $100,000Client has ABIL (date of Acq 2010-01-01)Proceeds=$10,000 , ACB=$110,000Gross Loss = $100,000)",
                    "fullFile": "E:\\Rita\\Taxtron\\WebTest\\my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_Line217_1.js",
                    "file": "\\my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_Line217_1.js",
                    "beforeHooks": [
                        {
                            "title": "\"before all\" hook",
                            "fullTitle": "NetIncome_Line217_1--Override F21500 to differ from the amount calculated based on entries on the T929.  Software must not allow.     //(TP Single, TP T4 = $100,000Client has ABIL (date of Acq 2010-01-01)Proceeds=$10,000 , ACB=$110,000Gross Loss = $100,000) \"before all\" hook",
                            "timedOut": false,
                            "duration": 73928,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "driver = new Builder()\n\t.withCapabilities(Capabilities.chrome().setAcceptInsecureCerts(true))\n\t.build();\ndriver.manage().window().setRect({ width: 1366, height: 768 });\nawait login(driver, 'ritakumar@outlook.com', 'rishu12rashi');\nawait selectNewReturn(driver,province);\nawait switchToastOff(driver);\n        await setInputById(driver, 'Firstnames0', 'FEE');\nawait setInputById(driver, 'Surname0', 'LEE');\nawait selectDateById(driver, 'DOB0', '1975/01/01');\nawait setInputById(driver, 'SIN0', '123123127');\n        await selectComboById(driver, 'MaritalStatus0', 'Single');\n        await selectToggleById(driver, 'domchanged0', '0');\n        await nextClick(driver);\nawait setInputById(driver, 'fullAdd0', '6464 Yonge St, North York, YT M2M 3X4, Canada');\nawait selectToggleById(driver, 'quesFP0', '0');\n        await selectToggleById(driver, 'quesPrinResi0', '0');\n        await selectToggleById(driver, 'bDisabled0tp', '1');\n        await nextClick(driver);\n        await selectTab(driver, 'Income');\nawait selectTab(driver, 'IncomeProfile');\nawait selectToggleById(driver, 'WorkedInYOR0tp', '1');\n        await clickDivById(driver, 'T40tp');\nawait nextClick(driver);\nawait setInputById(driver, 'T4B140', '100000');\n        await selectComboById(driver, 'T4_Box100tp', 'ON');\n        await nextClick(driver);\n        await nextClick(driver);\n        await selectTab(driver, 'Deduction');\n        await selectTab(driver, 'Investment_Main');\n        await selectToggleById(driver, 'qT12290tp', '1');\n        await nextClick(driver);\n        await nextClick(driver);\n        await selectToggleById(driver, 'S3Profile_10tp', '1');\n        await selectToggleById(driver, 'capital0tp', '1');\n        await nextClick(driver);\n        await nextClick(driver);\n        await selectDateById(driver, 'T4037_B_670tp', '2010/01/01');\n        await setInputById(driver, 'T4037_B_690tp', '10000');\n        await setInputById(driver, 'T4037_B_710tp', '110000');\n        await nextClick(driver);\n        savedForm = await getServerFile(driver);",
                            "err": {},
                            "uuid": "43483b5d-aede-42cb-934c-0ad0c0032b5c",
                            "parentUUID": "4986fddd-6054-42b8-9779-a1b086bf25f0",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "afterHooks": [
                        {
                            "title": "\"after all\" hook",
                            "fullTitle": "NetIncome_Line217_1--Override F21500 to differ from the amount calculated based on entries on the T929.  Software must not allow.     //(TP Single, TP T4 = $100,000Client has ABIL (date of Acq 2010-01-01)Proceeds=$10,000 , ACB=$110,000Gross Loss = $100,000) \"after all\" hook",
                            "timedOut": false,
                            "duration": 5608,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "await logoutById(driver);\nawait driver.quit();",
                            "err": {},
                            "uuid": "b08fcae4-0fa2-4b92-9b7e-a1d5247bc665",
                            "parentUUID": "4986fddd-6054-42b8-9779-a1b086bf25f0",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "tests": [
                        {
                            "title": " F21699 should be  allowed with amount    allow.value ==100000",
                            "fullTitle": "NetIncome_Line217_1--Override F21500 to differ from the amount calculated based on entries on the T929.  Software must not allow.     //(TP Single, TP T4 = $100,000Client has ABIL (date of Acq 2010-01-01)Proceeds=$10,000 , ACB=$110,000Gross Loss = $100,000)  F21699 should be  allowed with amount    allow.value ==100000",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let  grossBusinessInvestmentlossFeild = getFieldId('21699');\n\t\tlet  grossBusinessInvestmentloss = savedForm[ grossBusinessInvestmentlossFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+grossBusinessInvestmentloss;\nassert.equal( grossBusinessInvestmentloss, '100000', ' Feild should be built');",
                            "err": {},
                            "uuid": "784da8b5-ccd8-40bd-a746-3a8f3fb866aa",
                            "parentUUID": "4986fddd-6054-42b8-9779-a1b086bf25f0",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F21700 should be  allowed with amount    allow.value ==50000",
                            "fullTitle": "NetIncome_Line217_1--Override F21500 to differ from the amount calculated based on entries on the T929.  Software must not allow.     //(TP Single, TP T4 = $100,000Client has ABIL (date of Acq 2010-01-01)Proceeds=$10,000 , ACB=$110,000Gross Loss = $100,000)  F21700 should be  allowed with amount    allow.value ==50000",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let allowableBusinessInvestmentlossDeductionFeild = getFieldId('21700');\n\t\tlet allowableBusinessInvestmentlossDeduction = savedForm[ allowableBusinessInvestmentlossDeductionFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+ allowableBusinessInvestmentlossDeduction;\nassert.equal(  allowableBusinessInvestmentlossDeduction, '50000', ' Feild should be built');",
                            "err": {},
                            "uuid": "2c7944e2-2546-440a-8509-02ad6ded5354",
                            "parentUUID": "4986fddd-6054-42b8-9779-a1b086bf25f0",
                            "isHook": false,
                            "skipped": false
                        }
                    ],
                    "suites": [],
                    "passes": [
                        "784da8b5-ccd8-40bd-a746-3a8f3fb866aa",
                        "2c7944e2-2546-440a-8509-02ad6ded5354"
                    ],
                    "failures": [],
                    "pending": [],
                    "skipped": [],
                    "duration": 0,
                    "root": false,
                    "rootEmpty": false,
                    "_timeout": 150000
                },
                {
                    "uuid": "14258726-4526-4849-89da-f4ded4a77651",
                    "title": "NetIncome_Line217_2--Override F21500 to differ from the amount calculated based on entries on the T929.  Software must not allow.     //(TP Single, TP T4 = $20,000Client has ABIL (date of Acq 2010-01-01)Proceeds=0 , ACB=$110,000Gross Loss = $110,000)",
                    "fullFile": "E:\\Rita\\Taxtron\\WebTest\\my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_Line217_2.js",
                    "file": "\\my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_Line217_2.js",
                    "beforeHooks": [
                        {
                            "title": "\"before all\" hook",
                            "fullTitle": "NetIncome_Line217_2--Override F21500 to differ from the amount calculated based on entries on the T929.  Software must not allow.     //(TP Single, TP T4 = $20,000Client has ABIL (date of Acq 2010-01-01)Proceeds=0 , ACB=$110,000Gross Loss = $110,000) \"before all\" hook",
                            "timedOut": false,
                            "duration": 72319,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "driver = new Builder()\n\t.withCapabilities(Capabilities.chrome().setAcceptInsecureCerts(true))\n\t.build();\ndriver.manage().window().setRect({ width: 1366, height: 768 });\nawait login(driver, 'ritakumar@outlook.com', 'rishu12rashi');\nawait selectNewReturn(driver,province);\nawait switchToastOff(driver);\n        await setInputById(driver, 'Firstnames0', 'FEE');\nawait setInputById(driver, 'Surname0', 'LEE');\nawait selectDateById(driver, 'DOB0', '1975/01/01');\nawait setInputById(driver, 'SIN0', '123123127');\n        await selectComboById(driver, 'MaritalStatus0', 'Single');\n        await selectToggleById(driver, 'domchanged0', '0');\n        await nextClick(driver);\nawait setInputById(driver, 'fullAdd0', '6464 Yonge St, North York, YT M2M 3X4, Canada');\nawait selectToggleById(driver, 'quesFP0', '0');\n        await selectToggleById(driver, 'quesPrinResi0', '0');\n        await selectToggleById(driver, 'bDisabled0tp', '1');\n        await nextClick(driver);\n        await selectTab(driver, 'Income');\nawait selectTab(driver, 'IncomeProfile');\nawait selectToggleById(driver, 'WorkedInYOR0tp', '1');\n        await clickDivById(driver, 'T40tp');\nawait nextClick(driver);\nawait setInputById(driver, 'T4B140', '100000');\n        await selectComboById(driver, 'T4_Box100tp', 'ON');\n        await nextClick(driver);\n        await nextClick(driver);\n        await selectTab(driver, 'Deduction');\n        await selectTab(driver, 'Investment_Main');\n        await selectToggleById(driver, 'qT12290tp', '1');\n        await nextClick(driver);\n        await nextClick(driver);\n        await selectToggleById(driver, 'S3Profile_10tp', '1');\n        await selectToggleById(driver, 'capital0tp', '1');\n        await nextClick(driver);\n        await nextClick(driver);\n        await selectDateById(driver, 'T4037_B_670tp', '2010/01/01');\n        await setInputById(driver, 'T4037_B_690tp', '0');\n        await setInputById(driver, 'T4037_B_710tp', '110000');\n        await nextClick(driver);\n        savedForm = await getServerFile(driver);",
                            "err": {},
                            "uuid": "e705903b-6b80-4083-b82f-edd189c7b64a",
                            "parentUUID": "14258726-4526-4849-89da-f4ded4a77651",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "afterHooks": [
                        {
                            "title": "\"after all\" hook",
                            "fullTitle": "NetIncome_Line217_2--Override F21500 to differ from the amount calculated based on entries on the T929.  Software must not allow.     //(TP Single, TP T4 = $20,000Client has ABIL (date of Acq 2010-01-01)Proceeds=0 , ACB=$110,000Gross Loss = $110,000) \"after all\" hook",
                            "timedOut": false,
                            "duration": 1548,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "await logoutById(driver);\nawait driver.quit();",
                            "err": {},
                            "uuid": "da05b4da-4c81-43e9-b351-a5b79405a5f4",
                            "parentUUID": "14258726-4526-4849-89da-f4ded4a77651",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "tests": [
                        {
                            "title": " F21699 should be  allowed with amount    allow.value ==110000",
                            "fullTitle": "NetIncome_Line217_2--Override F21500 to differ from the amount calculated based on entries on the T929.  Software must not allow.     //(TP Single, TP T4 = $20,000Client has ABIL (date of Acq 2010-01-01)Proceeds=0 , ACB=$110,000Gross Loss = $110,000)  F21699 should be  allowed with amount    allow.value ==110000",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let  grossBusinessInvestmentlossFeild = getFieldId('21699');\n\t\tlet  grossBusinessInvestmentloss = savedForm[ grossBusinessInvestmentlossFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+grossBusinessInvestmentloss;\nassert.strictEqual( grossBusinessInvestmentloss, '110000', ' Feild should be built');",
                            "err": {},
                            "uuid": "8953879f-b3f6-40bc-8739-2b54278d187c",
                            "parentUUID": "14258726-4526-4849-89da-f4ded4a77651",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F21700 should be  allowed with amount    allow.value ==55000",
                            "fullTitle": "NetIncome_Line217_2--Override F21500 to differ from the amount calculated based on entries on the T929.  Software must not allow.     //(TP Single, TP T4 = $20,000Client has ABIL (date of Acq 2010-01-01)Proceeds=0 , ACB=$110,000Gross Loss = $110,000)  F21700 should be  allowed with amount    allow.value ==55000",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let allowableBusinessInvestmentlossDeductionFeild = getFieldId('21700');\n\t\tlet allowableBusinessInvestmentlossDeduction = savedForm[ allowableBusinessInvestmentlossDeductionFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+ allowableBusinessInvestmentlossDeduction;\nassert.equal(  allowableBusinessInvestmentlossDeduction, '55000', ' Feild should be built');",
                            "err": {},
                            "uuid": "650b22af-33b5-4d23-9fab-2019a5b29c68",
                            "parentUUID": "14258726-4526-4849-89da-f4ded4a77651",
                            "isHook": false,
                            "skipped": false
                        }
                    ],
                    "suites": [],
                    "passes": [
                        "8953879f-b3f6-40bc-8739-2b54278d187c",
                        "650b22af-33b5-4d23-9fab-2019a5b29c68"
                    ],
                    "failures": [],
                    "pending": [],
                    "skipped": [],
                    "duration": 0,
                    "root": false,
                    "rootEmpty": false,
                    "_timeout": 150000
                },
                {
                    "uuid": "65413397-67ef-4101-b8d8-c8a51a3569a6",
                    "title": "NetIncome_Line217_3--Override F21500 to differ from the amount calculated based on entries on the T929.  Software must not allow.     //(TP Single, TP T4 = $100,000Client has ABIL (date of Acq 2010-01-01)Proceeds=$10,000 , ACB=$110,000Gross Loss = $100,000Capital gains deduction of $25k from year 2015)",
                    "fullFile": "E:\\Rita\\Taxtron\\WebTest\\my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_Line217_3.js",
                    "file": "\\my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_Line217_3.js",
                    "beforeHooks": [
                        {
                            "title": "\"before all\" hook",
                            "fullTitle": "NetIncome_Line217_3--Override F21500 to differ from the amount calculated based on entries on the T929.  Software must not allow.     //(TP Single, TP T4 = $100,000Client has ABIL (date of Acq 2010-01-01)Proceeds=$10,000 , ACB=$110,000Gross Loss = $100,000Capital gains deduction of $25k from year 2015) \"before all\" hook",
                            "timedOut": false,
                            "duration": 76541,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "driver = new Builder()\n\t.withCapabilities(Capabilities.chrome().setAcceptInsecureCerts(true))\n\t.build();\ndriver.manage().window().setRect({ width: 1366, height: 768 });\nawait login(driver, 'ritakumar@outlook.com', 'rishu12rashi');\nawait selectNewReturn(driver,province);\nawait switchToastOff(driver);\n        await setInputById(driver, 'Firstnames0', 'FEE');\nawait setInputById(driver, 'Surname0', 'LEE');\nawait selectDateById(driver, 'DOB0', '1975/01/01');\nawait setInputById(driver, 'SIN0', '123123127');\n        await selectComboById(driver, 'MaritalStatus0', 'Single');\n        await selectToggleById(driver, 'domchanged0', '0');\n        await nextClick(driver);\nawait setInputById(driver, 'fullAdd0', '6464 Yonge St, North York, YT M2M 3X4, Canada');\nawait selectToggleById(driver, 'quesFP0', '0');\n        await selectToggleById(driver, 'quesPrinResi0', '0');\n        await selectToggleById(driver, 'bDisabled0tp', '1');\n        await nextClick(driver);\n        await selectTab(driver, 'Income');\nawait selectTab(driver, 'IncomeProfile');\nawait selectToggleById(driver, 'WorkedInYOR0tp', '1');\n        await clickDivById(driver, 'T40tp');\nawait nextClick(driver);\nawait setInputById(driver, 'T4B140', '100000');\n        await selectComboById(driver, 'T4_Box100tp', 'ON');\n        await nextClick(driver);\n        await nextClick(driver);\n        await selectTab(driver, 'Deduction');\n        await selectTab(driver, 'Investment_Main');\n        await selectToggleById(driver, 'qT12290tp', '1');\n        await nextClick(driver);\n        await nextClick(driver);\n        await selectToggleById(driver, 'S3Profile_10tp', '1');\n        await selectToggleById(driver, 'capital0tp', '1');\n        await nextClick(driver);\n        await nextClick(driver);\n        await selectDateById(driver, 'T4037_B_670tp', '2010/01/01');\n        await setInputById(driver, 'T4037_B_690tp', '10000');\n        await setInputById(driver, 'T4037_B_710tp', '110000');\n        await selectToggleById(driver, 'CCDeductions0tp', '1');\n        await selectComboById(driver, 'TaxYear0tp', '2015');\n        await setInputById(driver, 'TCE0tp', '25000');\n        await nextClick(driver);\n        savedForm = await getServerFile(driver);",
                            "err": {},
                            "uuid": "f5afc588-2a75-421c-93e0-2a4afd2ae289",
                            "parentUUID": "65413397-67ef-4101-b8d8-c8a51a3569a6",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "afterHooks": [
                        {
                            "title": "\"after all\" hook",
                            "fullTitle": "NetIncome_Line217_3--Override F21500 to differ from the amount calculated based on entries on the T929.  Software must not allow.     //(TP Single, TP T4 = $100,000Client has ABIL (date of Acq 2010-01-01)Proceeds=$10,000 , ACB=$110,000Gross Loss = $100,000Capital gains deduction of $25k from year 2015) \"after all\" hook",
                            "timedOut": false,
                            "duration": 5659,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "await logoutById(driver);\nawait driver.quit();",
                            "err": {},
                            "uuid": "ef6e5c8a-2d48-42b0-b679-2d2f820dab84",
                            "parentUUID": "65413397-67ef-4101-b8d8-c8a51a3569a6",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "tests": [
                        {
                            "title": " F21699 should be  allowed with amount    allow.value ==100000",
                            "fullTitle": "NetIncome_Line217_3--Override F21500 to differ from the amount calculated based on entries on the T929.  Software must not allow.     //(TP Single, TP T4 = $100,000Client has ABIL (date of Acq 2010-01-01)Proceeds=$10,000 , ACB=$110,000Gross Loss = $100,000Capital gains deduction of $25k from year 2015)  F21699 should be  allowed with amount    allow.value ==100000",
                            "timedOut": false,
                            "duration": 1,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let  grossBusinessInvestmentlossFeild = getFieldId('21699');\n\t\tlet  grossBusinessInvestmentloss = savedForm[ grossBusinessInvestmentlossFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+grossBusinessInvestmentloss;\nassert.strictEqual( grossBusinessInvestmentloss, '100000', ' Feild should be built');",
                            "err": {},
                            "uuid": "7f1280de-33f6-47e8-8e7f-24f55457c530",
                            "parentUUID": "65413397-67ef-4101-b8d8-c8a51a3569a6",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F21700 should be  allowed with amount    allow.value ==25000",
                            "fullTitle": "NetIncome_Line217_3--Override F21500 to differ from the amount calculated based on entries on the T929.  Software must not allow.     //(TP Single, TP T4 = $100,000Client has ABIL (date of Acq 2010-01-01)Proceeds=$10,000 , ACB=$110,000Gross Loss = $100,000Capital gains deduction of $25k from year 2015)  F21700 should be  allowed with amount    allow.value ==25000",
                            "timedOut": false,
                            "duration": 1,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let allowableBusinessInvestmentlossDeductionFeild = getFieldId('21700');\n\t\tlet allowableBusinessInvestmentlossDeduction = savedForm[ allowableBusinessInvestmentlossDeductionFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+ allowableBusinessInvestmentlossDeduction;\nassert.strictEqual(  allowableBusinessInvestmentlossDeduction, '25000', ' Feild should be built');",
                            "err": {},
                            "uuid": "cbb106d5-96a2-4b4c-9baf-03e344795b1a",
                            "parentUUID": "65413397-67ef-4101-b8d8-c8a51a3569a6",
                            "isHook": false,
                            "skipped": false
                        }
                    ],
                    "suites": [],
                    "passes": [
                        "7f1280de-33f6-47e8-8e7f-24f55457c530",
                        "cbb106d5-96a2-4b4c-9baf-03e344795b1a"
                    ],
                    "failures": [],
                    "pending": [],
                    "skipped": [],
                    "duration": 2,
                    "root": false,
                    "rootEmpty": false,
                    "_timeout": 150000
                },
                {
                    "uuid": "0f3095d0-885f-4d39-9f47-35afb235c0ce",
                    "title": "NetIncome_Line220_1--Input an amount at F22000 that is greater than F21999.  Software must not allow.    //(TP Divorced, TP T4 = $50,000Paying Spousal/child supportTotal Paid=$10,000Deductible=$5,000)",
                    "fullFile": "E:\\Rita\\Taxtron\\WebTest\\my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_Line220_1.js",
                    "file": "\\my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_Line220_1.js",
                    "beforeHooks": [
                        {
                            "title": "\"before all\" hook",
                            "fullTitle": "NetIncome_Line220_1--Input an amount at F22000 that is greater than F21999.  Software must not allow.    //(TP Divorced, TP T4 = $50,000Paying Spousal/child supportTotal Paid=$10,000Deductible=$5,000) \"before all\" hook",
                            "timedOut": false,
                            "duration": 66143,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "driver = new Builder()\n\t.withCapabilities(Capabilities.chrome().setAcceptInsecureCerts(true))\n\t.build();\ndriver.manage().window().setRect({ width: 1366, height: 768 });\nawait login(driver, 'ritakumar@outlook.com', 'rishu12rashi');\nawait selectNewReturn(driver,province);\nawait switchToastOff(driver);\n        await setInputById(driver, 'Firstnames0', 'FEE');\nawait setInputById(driver, 'Surname0', 'LEE');\nawait selectDateById(driver, 'DOB0', '1975/01/01');\nawait setInputById(driver, 'SIN0', '123123127');\n        await selectComboById(driver, 'MaritalStatus0', 'Divorced');\n        await selectToggleById(driver, 'domchanged0', '0');\n        await nextClick(driver);\nawait setInputById(driver, 'fullAdd0', '6464 Yonge St, North York, YT M2M 3X4, Canada');\nawait selectToggleById(driver, 'quesFP0', '0');\n        await selectToggleById(driver, 'quesPrinResi0', '0');\n        await selectToggleById(driver, 'bDisabled0tp', '1');\n        await nextClick(driver);\n        await selectTab(driver, 'Income');\nawait selectTab(driver, 'IncomeProfile');\nawait selectToggleById(driver, 'WorkedInYOR0tp', '1');\n        await clickDivById(driver, 'T40tp');\nawait nextClick(driver);\nawait setInputById(driver, 'T4B140', '50000');\n        await selectComboById(driver, 'T4_Box100tp', 'ON');\n        await nextClick(driver);\n        await selectTab(driver, 'Deduction');\n        await selectTab(driver, 'MiscDeductions');\n        await selectToggleById(driver, 'qAlimony0tp', '1');\n        await nextClick(driver);\n        await setInputById(driver, 'mdLine2300tp', '10000');\n        await setInputById(driver, 'Dedsupportpay0tp', '5000');\n        await nextClick(driver);\n        await nextClick(driver);\n        await nextClick(driver);\n        savedForm = await getServerFile(driver);",
                            "err": {},
                            "uuid": "da3bbe90-4761-4f42-bd1f-2502b2214fa5",
                            "parentUUID": "0f3095d0-885f-4d39-9f47-35afb235c0ce",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "afterHooks": [
                        {
                            "title": "\"after all\" hook",
                            "fullTitle": "NetIncome_Line220_1--Input an amount at F22000 that is greater than F21999.  Software must not allow.    //(TP Divorced, TP T4 = $50,000Paying Spousal/child supportTotal Paid=$10,000Deductible=$5,000) \"after all\" hook",
                            "timedOut": false,
                            "duration": 5685,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "await logoutById(driver);\nawait driver.quit();",
                            "err": {},
                            "uuid": "8e51bef0-1b6e-4279-a745-5dbb0c3360c7",
                            "parentUUID": "0f3095d0-885f-4d39-9f47-35afb235c0ce",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "tests": [
                        {
                            "title": " F22000 should be  allowed with amount    allow.value ==5000",
                            "fullTitle": "NetIncome_Line220_1--Input an amount at F22000 that is greater than F21999.  Software must not allow.    //(TP Divorced, TP T4 = $50,000Paying Spousal/child supportTotal Paid=$10,000Deductible=$5,000)  F22000 should be  allowed with amount    allow.value ==5000",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let  disabilitySupportsDeductionFeild = getFieldId('22000');\n\t\tlet  disabilitySupportsDeduction = savedForm[ disabilitySupportsDeductionFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+ disabilitySupportsDeduction;\nassert.equal(  disabilitySupportsDeduction, '5000', ' Feild should be built');",
                            "err": {},
                            "uuid": "c035c650-b72a-4ffb-9284-581882a263b5",
                            "parentUUID": "0f3095d0-885f-4d39-9f47-35afb235c0ce",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F21999 should be  allowed with amount    allow.value ==10000",
                            "fullTitle": "NetIncome_Line220_1--Input an amount at F22000 that is greater than F21999.  Software must not allow.    //(TP Divorced, TP T4 = $50,000Paying Spousal/child supportTotal Paid=$10,000Deductible=$5,000)  F21999 should be  allowed with amount    allow.value ==10000",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let  disabilitySupportsDeductionFeild = getFieldId('21999');\n\t\tlet  disabilitySupportsDeduction = savedForm[ disabilitySupportsDeductionFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+ disabilitySupportsDeduction;\nassert.equal(  disabilitySupportsDeduction, '10000', ' Feild should be built');",
                            "err": {},
                            "uuid": "0a285f98-91f5-44c4-af10-86806600dea0",
                            "parentUUID": "0f3095d0-885f-4d39-9f47-35afb235c0ce",
                            "isHook": false,
                            "skipped": false
                        }
                    ],
                    "suites": [],
                    "passes": [
                        "c035c650-b72a-4ffb-9284-581882a263b5",
                        "0a285f98-91f5-44c4-af10-86806600dea0"
                    ],
                    "failures": [],
                    "pending": [],
                    "skipped": [],
                    "duration": 0,
                    "root": false,
                    "rootEmpty": false,
                    "_timeout": 150000
                },
                {
                    "uuid": "1de41f9d-c5c9-45cf-80e9-0e5f75f7797f",
                    "title": "NetIncome_Line220_2--Input an amount at F22000 that is greater than F21999.  Software must not allow.    //(TP Divorced, TP T4 = $50,000Paying Spousal/child supportTotal Paid=$0Deductible=$5,000)",
                    "fullFile": "E:\\Rita\\Taxtron\\WebTest\\my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_Line220_2.js",
                    "file": "\\my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_Line220_2.js",
                    "beforeHooks": [
                        {
                            "title": "\"before all\" hook",
                            "fullTitle": "NetIncome_Line220_2--Input an amount at F22000 that is greater than F21999.  Software must not allow.    //(TP Divorced, TP T4 = $50,000Paying Spousal/child supportTotal Paid=$0Deductible=$5,000) \"before all\" hook",
                            "timedOut": false,
                            "duration": 67186,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "driver = new Builder()\n\t.withCapabilities(Capabilities.chrome().setAcceptInsecureCerts(true))\n\t.build();\ndriver.manage().window().setRect({ width: 1366, height: 768 });\nawait login(driver, 'ritakumar@outlook.com', 'rishu12rashi');\nawait selectNewReturn(driver,province);\nawait switchToastOff(driver);\n        await setInputById(driver, 'Firstnames0', 'FEE');\nawait setInputById(driver, 'Surname0', 'LEE');\nawait selectDateById(driver, 'DOB0', '1975/01/01');\nawait setInputById(driver, 'SIN0', '123123127');\n        await selectComboById(driver, 'MaritalStatus0', 'Divorced');\n        await selectToggleById(driver, 'domchanged0', '0');\n        await nextClick(driver);\nawait setInputById(driver, 'fullAdd0', '6464 Yonge St, North York, YT M2M 3X4, Canada');\nawait selectToggleById(driver, 'quesFP0', '0');\n        await selectToggleById(driver, 'quesPrinResi0', '0');\n        await selectToggleById(driver, 'bDisabled0tp', '1');\n        await nextClick(driver);\n        await selectTab(driver, 'Income');\nawait selectTab(driver, 'IncomeProfile');\nawait selectToggleById(driver, 'WorkedInYOR0tp', '1');\n        await clickDivById(driver, 'T40tp');\nawait nextClick(driver);\nawait setInputById(driver, 'T4B140', '50000');\n        await selectComboById(driver, 'T4_Box100tp', 'ON');\n        await nextClick(driver);\n        await selectTab(driver, 'Deduction');\n        await selectTab(driver, 'MiscDeductions');\n        await selectToggleById(driver, 'qAlimony0tp', '1');\n        await nextClick(driver);\n        await setInputById(driver, 'mdLine2300tp', '0');\n        await setInputById(driver, 'Dedsupportpay0tp', '5000');\n        await nextClick(driver);\n        await nextClick(driver);\n        await nextClick(driver);\n        savedForm = await getServerFile(driver);",
                            "err": {},
                            "uuid": "c72c8f66-355e-4be2-b13e-2a0075d8971f",
                            "parentUUID": "1de41f9d-c5c9-45cf-80e9-0e5f75f7797f",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "afterHooks": [
                        {
                            "title": "\"after all\" hook",
                            "fullTitle": "NetIncome_Line220_2--Input an amount at F22000 that is greater than F21999.  Software must not allow.    //(TP Divorced, TP T4 = $50,000Paying Spousal/child supportTotal Paid=$0Deductible=$5,000) \"after all\" hook",
                            "timedOut": false,
                            "duration": 5482,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "await logoutById(driver);\nawait driver.quit();",
                            "err": {},
                            "uuid": "341e2bdb-1cde-4f6b-b7cf-d1ffe32c968d",
                            "parentUUID": "1de41f9d-c5c9-45cf-80e9-0e5f75f7797f",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "tests": [
                        {
                            "title": " F22000 should be  allowed with amount    allow.value ==undefined",
                            "fullTitle": "NetIncome_Line220_2--Input an amount at F22000 that is greater than F21999.  Software must not allow.    //(TP Divorced, TP T4 = $50,000Paying Spousal/child supportTotal Paid=$0Deductible=$5,000)  F22000 should be  allowed with amount    allow.value ==undefined",
                            "timedOut": false,
                            "duration": 1,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let  allowableDeductionForSupportPaymentMadeFeild = getFieldId('22000');\n\t\tlet   allowableDeductionForSupportPaymentMade = savedForm[  allowableDeductionForSupportPaymentMadeFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+  allowableDeductionForSupportPaymentMade;\nassert.equal(  allowableDeductionForSupportPaymentMade, undefined, ' Feild should be built');",
                            "err": {},
                            "uuid": "ffde41fd-c56f-4573-9c11-4ccdb374e2a8",
                            "parentUUID": "1de41f9d-c5c9-45cf-80e9-0e5f75f7797f",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F21999 should be  allowed with amount    allow.value ==undefined",
                            "fullTitle": "NetIncome_Line220_2--Input an amount at F22000 that is greater than F21999.  Software must not allow.    //(TP Divorced, TP T4 = $50,000Paying Spousal/child supportTotal Paid=$0Deductible=$5,000)  F21999 should be  allowed with amount    allow.value ==undefined",
                            "timedOut": false,
                            "duration": 1,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let totalSupportPaymentsMadeFeild = getFieldId('21999');\n\t\tlet  totalSupportPaymentsMade = savedForm[totalSupportPaymentsMadeFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+ totalSupportPaymentsMade;\nassert.equal(  totalSupportPaymentsMade, undefined, ' Feild should be built');",
                            "err": {},
                            "uuid": "9530a9f4-0660-476d-8dc4-83f7bf421b78",
                            "parentUUID": "1de41f9d-c5c9-45cf-80e9-0e5f75f7797f",
                            "isHook": false,
                            "skipped": false
                        }
                    ],
                    "suites": [],
                    "passes": [
                        "ffde41fd-c56f-4573-9c11-4ccdb374e2a8",
                        "9530a9f4-0660-476d-8dc4-83f7bf421b78"
                    ],
                    "failures": [],
                    "pending": [],
                    "skipped": [],
                    "duration": 2,
                    "root": false,
                    "rootEmpty": false,
                    "_timeout": 150000
                },
                {
                    "uuid": "31a6d8b7-2c72-4f6c-b324-f162fb9ce41b",
                    "title": "NetIncome_Line220_3--Input an amount at F22000 that is greater than F21999.  Software must not allow.    //(TP Divorced, TP T4 = $50,000 Paying Spousal/child support Total Paid=$10,000 Deductible=$0)",
                    "fullFile": "E:\\Rita\\Taxtron\\WebTest\\my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_Line220_3.js",
                    "file": "\\my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_Line220_3.js",
                    "beforeHooks": [
                        {
                            "title": "\"before all\" hook",
                            "fullTitle": "NetIncome_Line220_3--Input an amount at F22000 that is greater than F21999.  Software must not allow.    //(TP Divorced, TP T4 = $50,000 Paying Spousal/child support Total Paid=$10,000 Deductible=$0) \"before all\" hook",
                            "timedOut": false,
                            "duration": 68250,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "driver = new Builder()\n\t.withCapabilities(Capabilities.chrome().setAcceptInsecureCerts(true))\n\t.build();\ndriver.manage().window().setRect({ width: 1366, height: 768 });\nawait login(driver, 'ritakumar@outlook.com', 'rishu12rashi');\nawait selectNewReturn(driver,province);\nawait switchToastOff(driver);\n        await setInputById(driver, 'Firstnames0', 'FEE');\nawait setInputById(driver, 'Surname0', 'LEE');\nawait selectDateById(driver, 'DOB0', '1975/01/01');\nawait setInputById(driver, 'SIN0', '123123127');\n        await selectComboById(driver, 'MaritalStatus0', 'Divorced');\n        await selectToggleById(driver, 'domchanged0', '0');\n        await nextClick(driver);\nawait setInputById(driver, 'fullAdd0', '6464 Yonge St, North York, YT M2M 3X4, Canada');\nawait selectToggleById(driver, 'quesFP0', '0');\n        await selectToggleById(driver, 'quesPrinResi0', '0');\n        await selectToggleById(driver, 'bDisabled0tp', '1');\n        await nextClick(driver);\n        await selectTab(driver, 'Income');\nawait selectTab(driver, 'IncomeProfile');\nawait selectToggleById(driver, 'WorkedInYOR0tp', '1');\n        await clickDivById(driver, 'T40tp');\nawait nextClick(driver);\nawait setInputById(driver, 'T4B140', '50000');\n        await selectComboById(driver, 'T4_Box100tp', 'ON');\n        await nextClick(driver);\n        await selectTab(driver, 'Deduction');\n        await selectTab(driver, 'MiscDeductions');\n        await selectToggleById(driver, 'qAlimony0tp', '1');\n        await nextClick(driver);\n        await setInputById(driver, 'mdLine2300tp', '10000');\n        await setInputById(driver, 'Dedsupportpay0tp', '0');\n        await nextClick(driver);\n        await nextClick(driver);\n        await nextClick(driver);\n        savedForm = await getServerFile(driver);",
                            "err": {},
                            "uuid": "b85437f5-1dac-425a-ae97-5647389b6675",
                            "parentUUID": "31a6d8b7-2c72-4f6c-b324-f162fb9ce41b",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "afterHooks": [
                        {
                            "title": "\"after all\" hook",
                            "fullTitle": "NetIncome_Line220_3--Input an amount at F22000 that is greater than F21999.  Software must not allow.    //(TP Divorced, TP T4 = $50,000 Paying Spousal/child support Total Paid=$10,000 Deductible=$0) \"after all\" hook",
                            "timedOut": false,
                            "duration": 5532,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "await logoutById(driver);\nawait driver.quit();",
                            "err": {},
                            "uuid": "e19ae7ff-2726-4f02-8acb-7200f5a55d97",
                            "parentUUID": "31a6d8b7-2c72-4f6c-b324-f162fb9ce41b",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "tests": [
                        {
                            "title": " F22000 should be  allowed with amount    allow.value ==undefined",
                            "fullTitle": "NetIncome_Line220_3--Input an amount at F22000 that is greater than F21999.  Software must not allow.    //(TP Divorced, TP T4 = $50,000 Paying Spousal/child support Total Paid=$10,000 Deductible=$0)  F22000 should be  allowed with amount    allow.value ==undefined",
                            "timedOut": false,
                            "duration": 1,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let  allowableDeductionForSupportPaymentMadeFeild = getFieldId('22000');\n\t\tlet   allowableDeductionForSupportPaymentMade = savedForm[  allowableDeductionForSupportPaymentMadeFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+  allowableDeductionForSupportPaymentMade;\nassert.equal(  allowableDeductionForSupportPaymentMade, undefined, ' Feild should be built');",
                            "err": {},
                            "uuid": "d514997f-f041-4a98-8b64-c6e7d8f3b777",
                            "parentUUID": "31a6d8b7-2c72-4f6c-b324-f162fb9ce41b",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F21999 should be  allowed with amount    allow.value ==10000",
                            "fullTitle": "NetIncome_Line220_3--Input an amount at F22000 that is greater than F21999.  Software must not allow.    //(TP Divorced, TP T4 = $50,000 Paying Spousal/child support Total Paid=$10,000 Deductible=$0)  F21999 should be  allowed with amount    allow.value ==10000",
                            "timedOut": false,
                            "duration": 1,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let totalSupportPaymentsMadeFeild = getFieldId('21999');\n\t\tlet  totalSupportPaymentsMade = savedForm[totalSupportPaymentsMadeFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+ totalSupportPaymentsMade;\nassert.equal(  totalSupportPaymentsMade, '10000', ' Feild should be built');",
                            "err": {},
                            "uuid": "927de184-6b94-45fc-8f40-6c248892ee93",
                            "parentUUID": "31a6d8b7-2c72-4f6c-b324-f162fb9ce41b",
                            "isHook": false,
                            "skipped": false
                        }
                    ],
                    "suites": [],
                    "passes": [
                        "d514997f-f041-4a98-8b64-c6e7d8f3b777",
                        "927de184-6b94-45fc-8f40-6c248892ee93"
                    ],
                    "failures": [],
                    "pending": [],
                    "skipped": [],
                    "duration": 2,
                    "root": false,
                    "rootEmpty": false,
                    "_timeout": 150000
                },
                {
                    "uuid": "a97ab2dc-2a02-4f58-852d-552c2c2eaa7a",
                    "title": "NetIncome_Line221_1--Override F22100 (carrying charges and interest expenses) to differ from the amount built based on supporting entries on Federal Schedule 4. Software must not allow..     //(TP Divorced, TP T4 = $30,000Interest Exp=$1,000)",
                    "fullFile": "E:\\Rita\\Taxtron\\WebTest\\my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_Line221_1.js",
                    "file": "\\my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_Line221_1.js",
                    "beforeHooks": [
                        {
                            "title": "\"before all\" hook",
                            "fullTitle": "NetIncome_Line221_1--Override F22100 (carrying charges and interest expenses) to differ from the amount built based on supporting entries on Federal Schedule 4. Software must not allow..     //(TP Divorced, TP T4 = $30,000Interest Exp=$1,000) \"before all\" hook",
                            "timedOut": false,
                            "duration": 67487,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "driver = new Builder()\n\t.withCapabilities(Capabilities.chrome().setAcceptInsecureCerts(true))\n\t.build();\ndriver.manage().window().setRect({ width: 1366, height: 768 });\nawait login(driver, 'ritakumar@outlook.com', 'rishu12rashi');\nawait selectNewReturn(driver,province);\nawait switchToastOff(driver);\n        await setInputById(driver, 'Firstnames0', 'FEE');\nawait setInputById(driver, 'Surname0', 'LEE');\nawait selectDateById(driver, 'DOB0', '1975/01/01');\nawait setInputById(driver, 'SIN0', '123123127');\n        await selectComboById(driver, 'MaritalStatus0', 'Single');\n        await selectToggleById(driver, 'domchanged0', '0');\n        await nextClick(driver);\nawait setInputById(driver, 'fullAdd0', '6464 Yonge St, North York, YT M2M 3X4, Canada');\nawait selectToggleById(driver, 'quesFP0', '0');\n        await selectToggleById(driver, 'quesPrinResi0', '0');\n        await selectToggleById(driver, 'bDisabled0tp', '1');\n        await nextClick(driver);\n        await selectTab(driver, 'Income');\nawait selectTab(driver, 'IncomeProfile');\nawait selectToggleById(driver, 'WorkedInYOR0tp', '1');\n        await clickDivById(driver, 'T40tp');\nawait nextClick(driver);\nawait setInputById(driver, 'T4B140', '100000');\n        await selectComboById(driver, 'T4_Box100tp', 'ON');\n        await nextClick(driver);\n        await nextClick(driver);\n        await selectTab(driver, 'Deduction');\n        await selectTab(driver, 'Investment_Main');\n        await selectToggleById(driver, 'qInvest0tp', '1');\n        await nextClick(driver);\n        await selectToggleById(driver, 'PartnerEx0tp', '1');\n        await setInputById(driver, 'IOMPartner0tp', '1000');\n        await nextClick(driver);\n        await nextClick(driver);\n        savedForm = await getServerFile(driver);",
                            "err": {},
                            "uuid": "6bc5d8b3-b9d8-40b6-bca3-a3015aed4413",
                            "parentUUID": "a97ab2dc-2a02-4f58-852d-552c2c2eaa7a",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "afterHooks": [
                        {
                            "title": "\"after all\" hook",
                            "fullTitle": "NetIncome_Line221_1--Override F22100 (carrying charges and interest expenses) to differ from the amount built based on supporting entries on Federal Schedule 4. Software must not allow..     //(TP Divorced, TP T4 = $30,000Interest Exp=$1,000) \"after all\" hook",
                            "timedOut": false,
                            "duration": 1469,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "await logoutById(driver);\nawait driver.quit();",
                            "err": {},
                            "uuid": "934b45b1-a303-4621-ab99-4fdf31a27f30",
                            "parentUUID": "a97ab2dc-2a02-4f58-852d-552c2c2eaa7a",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "tests": [
                        {
                            "title": " F22100 should be  allowed with amount    allow.value ==1000",
                            "fullTitle": "NetIncome_Line221_1--Override F22100 (carrying charges and interest expenses) to differ from the amount built based on supporting entries on Federal Schedule 4. Software must not allow..     //(TP Divorced, TP T4 = $30,000Interest Exp=$1,000)  F22100 should be  allowed with amount    allow.value ==1000",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let  grossBusinessInvestmentlossFeild = getFieldId('22100');\n\t\tlet  grossBusinessInvestmentloss = savedForm[ grossBusinessInvestmentlossFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+grossBusinessInvestmentloss;\nassert.equal( grossBusinessInvestmentloss, '1000', ' Feild should be built');",
                            "err": {},
                            "uuid": "b8b65625-fa52-49d0-9156-2650d0e07503",
                            "parentUUID": "a97ab2dc-2a02-4f58-852d-552c2c2eaa7a",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F9913 should be  allowed with amount    allow.value ==1000",
                            "fullTitle": "NetIncome_Line221_1--Override F22100 (carrying charges and interest expenses) to differ from the amount built based on supporting entries on Federal Schedule 4. Software must not allow..     //(TP Divorced, TP T4 = $30,000Interest Exp=$1,000)  F9913 should be  allowed with amount    allow.value ==1000",
                            "timedOut": false,
                            "duration": 1,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let allowableBusinessInvestmentlossDeductionFeild = getFieldId('9913');\n\t\tlet allowableBusinessInvestmentlossDeduction = savedForm[ allowableBusinessInvestmentlossDeductionFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+ allowableBusinessInvestmentlossDeduction;\nassert.equal(  allowableBusinessInvestmentlossDeduction, '1000', ' Feild should be built');",
                            "err": {},
                            "uuid": "53a8ec69-fc28-4058-a2cf-f524bd1c4588",
                            "parentUUID": "a97ab2dc-2a02-4f58-852d-552c2c2eaa7a",
                            "isHook": false,
                            "skipped": false
                        }
                    ],
                    "suites": [],
                    "passes": [
                        "b8b65625-fa52-49d0-9156-2650d0e07503",
                        "53a8ec69-fc28-4058-a2cf-f524bd1c4588"
                    ],
                    "failures": [],
                    "pending": [],
                    "skipped": [],
                    "duration": 1,
                    "root": false,
                    "rootEmpty": false,
                    "_timeout": 150000
                },
                {
                    "uuid": "3e7c0bae-3304-42f8-9617-01f1eab30c20",
                    "title": "NetIncome_Line229_1-Input F8523 (meal expenses) on a TL2 (Claim for Meals and Lodging Expenses) without an amount at F22900 (other employment expenses). Software must not allow.   ..//(Entries on the Form TL2, Claim for Meals and Lodging Expenses, and/or the Form T777, Statement of Employment Expenses, requires an entry at field 22900 of the tax return.)",
                    "fullFile": "E:\\Rita\\Taxtron\\WebTest\\my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_Line229_1.js",
                    "file": "\\my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_Line229_1.js",
                    "beforeHooks": [
                        {
                            "title": "\"before all\" hook",
                            "fullTitle": "NetIncome_Line229_1-Input F8523 (meal expenses) on a TL2 (Claim for Meals and Lodging Expenses) without an amount at F22900 (other employment expenses). Software must not allow.   ..//(Entries on the Form TL2, Claim for Meals and Lodging Expenses, and/or the Form T777, Statement of Employment Expenses, requires an entry at field 22900 of the tax return.) \"before all\" hook",
                            "timedOut": false,
                            "duration": 71152,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "driver = new Builder()\n\t.withCapabilities(Capabilities.chrome().setAcceptInsecureCerts(true))\n\t.build();\ndriver.manage().window().setRect({ width: 1366, height: 768 });\nawait login(driver, 'ritakumar@outlook.com', 'rishu12rashi');\nawait selectNewReturn(driver,province);\nawait switchToastOff(driver);\nawait setInputById(driver, 'Firstnames0', 'BOB ');\nawait setInputById(driver, 'Surname0', 'KUM');\nawait selectDateById(driver, 'DOB0', '1961/10/10');\nawait setInputById(driver, 'SIN0', '222222226');    \n        await selectComboById(driver, 'MaritalStatus0', 'Divorced');\n\t    await selectToggleById(driver, 'didyoumove0', '0');\nawait selectToggleById(driver, 'HomeAddressSame0', '1');\nawait nextClick(driver);\nawait setInputById(driver, 'fullAdd0', '880 21 St NE, Salmon Arm, BC V1E 2K9, Canada');\nawait selectToggleById(driver, 'addChange0', '0');\nawait selectToggleById(driver, 'bDisabled0', '0');\nawait selectToggleById(driver, 'quesFP0', '0');\nawait selectToggleById(driver, 'qCitizen0', '0');\nawait nextClick(driver);\n        await selectTab(driver, 'Income');\nawait selectTab(driver, 'IncomeProfile');\nawait selectToggleById(driver, 'WorkedInYOR0tp', '1');\n        await clickDivById(driver, 'T40tp');\nawait nextClick(driver);\nawait setInputById(driver, 'T4B140', '50000');\n        await selectComboById(driver, 'T4_Box100tp', 'ON');\n        await nextClick(driver);\n        await nextClick(driver);\n        await selectTab(driver, 'Deduction');\n        await selectTab(driver, 'Deduction_Main');\n        await selectToggleById(driver, 'qWork0tp', '1');\n        await nextClick(driver);\n        await selectToggleById(driver, 'TL2q0tp', '1');\n        await nextClick(driver);\n        await selectComboById(driver, 'TL2MethodsTwo0tp', 'Simplified');\n        await selectToggleById(driver, 'LongHaul0tp', '1');\n        await setInputById(driver, 'TL2Days70tp', '300');\n        await setInputById(driver, 'TL2nMeals70tp', '300');\n        await nextClick(driver);\n        await nextClick(driver);\n        savedForm = await getServerFile(driver);",
                            "err": {},
                            "uuid": "074f7df8-568e-426d-8779-54d8fa5b8387",
                            "parentUUID": "3e7c0bae-3304-42f8-9617-01f1eab30c20",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "afterHooks": [
                        {
                            "title": "\"after all\" hook",
                            "fullTitle": "NetIncome_Line229_1-Input F8523 (meal expenses) on a TL2 (Claim for Meals and Lodging Expenses) without an amount at F22900 (other employment expenses). Software must not allow.   ..//(Entries on the Form TL2, Claim for Meals and Lodging Expenses, and/or the Form T777, Statement of Employment Expenses, requires an entry at field 22900 of the tax return.) \"after all\" hook",
                            "timedOut": false,
                            "duration": 5502,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "await logoutById(driver);\nawait driver.quit();",
                            "err": {},
                            "uuid": "8fcdbc3f-a950-4d23-b1ed-9412677a2153",
                            "parentUUID": "3e7c0bae-3304-42f8-9617-01f1eab30c20",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "tests": [
                        {
                            "title": "IncomeFeild should be 22900    allow.value ==4080",
                            "fullTitle": "NetIncome_Line229_1-Input F8523 (meal expenses) on a TL2 (Claim for Meals and Lodging Expenses) without an amount at F22900 (other employment expenses). Software must not allow.   ..//(Entries on the Form TL2, Claim for Meals and Lodging Expenses, and/or the Form T777, Statement of Employment Expenses, requires an entry at field 22900 of the tax return.) IncomeFeild should be 22900    allow.value ==4080",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let otherEmploymentExpensesFeild = getFieldId('22900');\n\t\tlet otherEmploymentExpenses = savedForm[otherEmploymentExpensesFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+otherEmploymentExpenses;\nassert.equal(otherEmploymentExpenses, '4080', 'Income Feild should be built.');",
                            "err": {},
                            "uuid": "1c83594a-903e-4c8f-ae0a-c8b6d8aae8ee",
                            "parentUUID": "3e7c0bae-3304-42f8-9617-01f1eab30c20",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": "IncomeFeild should be 8528    allow.value ==5100",
                            "fullTitle": "NetIncome_Line229_1-Input F8523 (meal expenses) on a TL2 (Claim for Meals and Lodging Expenses) without an amount at F22900 (other employment expenses). Software must not allow.   ..//(Entries on the Form TL2, Claim for Meals and Lodging Expenses, and/or the Form T777, Statement of Employment Expenses, requires an entry at field 22900 of the tax return.) IncomeFeild should be 8528    allow.value ==5100",
                            "timedOut": false,
                            "duration": 1,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let part2BTotalAmountYouPaidforMealsFeild = MealLodgingExpenseDataFieldId('8528');\n\t\tlet  part2BTotalAmountYouPaidforMeals = savedForm[ part2BTotalAmountYouPaidforMealsFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+ part2BTotalAmountYouPaidforMeals;\nassert.equal( part2BTotalAmountYouPaidforMeals, '5100', 'Income Feild should be built.');",
                            "err": {},
                            "uuid": "4eb4235c-4172-46be-8081-3cf10352406f",
                            "parentUUID": "3e7c0bae-3304-42f8-9617-01f1eab30c20",
                            "isHook": false,
                            "skipped": false
                        }
                    ],
                    "suites": [],
                    "passes": [
                        "1c83594a-903e-4c8f-ae0a-c8b6d8aae8ee",
                        "4eb4235c-4172-46be-8081-3cf10352406f"
                    ],
                    "failures": [],
                    "pending": [],
                    "skipped": [],
                    "duration": 1,
                    "root": false,
                    "rootEmpty": false,
                    "_timeout": 150000
                },
                {
                    "uuid": "c5ad6f5a-f261-480f-8e61-0c9b906d0558",
                    "title": "NetIncome_Line229_2-Input F8523 (meal expenses) on a TL2 (Claim for Meals and Lodging Expenses) without an amount at F22900 (other employment expenses). Software must not allow.   ..//(Entries on the Form TL2, Claim for Meals and Lodging Expenses, and/or the Form T777, Statement of Employment Expenses, requires an entry at field 22900 of the tax return.)",
                    "fullFile": "E:\\Rita\\Taxtron\\WebTest\\my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_Line229_2.js",
                    "file": "\\my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_Line229_2.js",
                    "beforeHooks": [
                        {
                            "title": "\"before all\" hook",
                            "fullTitle": "NetIncome_Line229_2-Input F8523 (meal expenses) on a TL2 (Claim for Meals and Lodging Expenses) without an amount at F22900 (other employment expenses). Software must not allow.   ..//(Entries on the Form TL2, Claim for Meals and Lodging Expenses, and/or the Form T777, Statement of Employment Expenses, requires an entry at field 22900 of the tax return.) \"before all\" hook",
                            "timedOut": false,
                            "duration": 72568,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "driver = new Builder()\n\t.withCapabilities(Capabilities.chrome().setAcceptInsecureCerts(true))\n\t.build();\ndriver.manage().window().setRect({ width: 1366, height: 768 });\nawait login(driver, 'ritakumar@outlook.com', 'rishu12rashi');\nawait selectNewReturn(driver,province);\nawait switchToastOff(driver);\nawait setInputById(driver, 'Firstnames0', 'BOB ');\nawait setInputById(driver, 'Surname0', 'KUM');\nawait selectDateById(driver, 'DOB0', '1961/10/10');\nawait setInputById(driver, 'SIN0', '222222226');    \n        await selectComboById(driver, 'MaritalStatus0', 'Divorced');\n\t    await selectToggleById(driver, 'didyoumove0', '0');\nawait selectToggleById(driver, 'HomeAddressSame0', '1');\nawait nextClick(driver);\nawait setInputById(driver, 'fullAdd0', '880 21 St NE, Salmon Arm, BC V1E 2K9, Canada');\nawait selectToggleById(driver, 'addChange0', '0');\nawait selectToggleById(driver, 'bDisabled0', '0');\nawait selectToggleById(driver, 'quesFP0', '0');\nawait selectToggleById(driver, 'qCitizen0', '0');\nawait nextClick(driver);\n        await selectTab(driver, 'Income');\nawait selectTab(driver, 'IncomeProfile');\nawait selectToggleById(driver, 'WorkedInYOR0tp', '1');\n        await clickDivById(driver, 'T40tp');\nawait nextClick(driver);\nawait setInputById(driver, 'T4B140', '50000');\n        await selectComboById(driver, 'T4_Box100tp', 'ON');\n        await nextClick(driver);\n        await nextClick(driver);\n        await selectTab(driver, 'Deduction');\n        await selectTab(driver, 'Deduction_Main');\n        await selectToggleById(driver, 'qWork0tp', '1');\n        await nextClick(driver);\n        await selectToggleById(driver, 'TL2q0tp', '1');\n        await nextClick(driver);\n        await selectComboById(driver, 'TL2MethodsTwo0tp', 'Simplified');\n        await selectToggleById(driver, 'LongHaulNo0tp', '1');\n        await setInputById(driver, 'TL2Days10tp', '300');\n        await setInputById(driver, 'TL2nMeals10tp', '300');\n        await nextClick(driver);\n        await nextClick(driver);\n        savedForm = await getServerFile(driver);",
                            "err": {},
                            "uuid": "a3b3a48b-00d4-40f9-b243-7809717ff8d6",
                            "parentUUID": "c5ad6f5a-f261-480f-8e61-0c9b906d0558",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "afterHooks": [
                        {
                            "title": "\"after all\" hook",
                            "fullTitle": "NetIncome_Line229_2-Input F8523 (meal expenses) on a TL2 (Claim for Meals and Lodging Expenses) without an amount at F22900 (other employment expenses). Software must not allow.   ..//(Entries on the Form TL2, Claim for Meals and Lodging Expenses, and/or the Form T777, Statement of Employment Expenses, requires an entry at field 22900 of the tax return.) \"after all\" hook",
                            "timedOut": false,
                            "duration": 5332,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "await logoutById(driver);\nawait driver.quit();",
                            "err": {},
                            "uuid": "d248b9f3-057d-414f-b404-b37d3e77d31f",
                            "parentUUID": "c5ad6f5a-f261-480f-8e61-0c9b906d0558",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "tests": [
                        {
                            "title": "IncomeFeild should be 22900    allow.value ==2550",
                            "fullTitle": "NetIncome_Line229_2-Input F8523 (meal expenses) on a TL2 (Claim for Meals and Lodging Expenses) without an amount at F22900 (other employment expenses). Software must not allow.   ..//(Entries on the Form TL2, Claim for Meals and Lodging Expenses, and/or the Form T777, Statement of Employment Expenses, requires an entry at field 22900 of the tax return.) IncomeFeild should be 22900    allow.value ==2550",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let otherEmploymentExpensesFeild =  getFieldId('22900');\n\t\tlet otherEmploymentExpenses = savedForm[otherEmploymentExpensesFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+otherEmploymentExpenses;\nassert.equal(otherEmploymentExpenses, '2550', 'Income Feild should be built.');",
                            "err": {},
                            "uuid": "e3201d11-06ac-4ee2-babd-bf0e1e904b68",
                            "parentUUID": "c5ad6f5a-f261-480f-8e61-0c9b906d0558",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": "IncomeFeild should be 8523    allow.value ==5100",
                            "fullTitle": "NetIncome_Line229_2-Input F8523 (meal expenses) on a TL2 (Claim for Meals and Lodging Expenses) without an amount at F22900 (other employment expenses). Software must not allow.   ..//(Entries on the Form TL2, Claim for Meals and Lodging Expenses, and/or the Form T777, Statement of Employment Expenses, requires an entry at field 22900 of the tax return.) IncomeFeild should be 8523    allow.value ==5100",
                            "timedOut": false,
                            "duration": 1,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let part2BTotalAmountYouPaidforMealsFeild = MealLodgingExpenseDataFieldId ('8523');\n\t\tlet  part2BTotalAmountYouPaidforMeals = savedForm[ part2BTotalAmountYouPaidforMealsFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+ part2BTotalAmountYouPaidforMeals;\nassert.equal( part2BTotalAmountYouPaidforMeals, '5100', 'Income Feild should be built.');",
                            "err": {},
                            "uuid": "ad14b465-5005-4547-86c6-bf723bba719f",
                            "parentUUID": "c5ad6f5a-f261-480f-8e61-0c9b906d0558",
                            "isHook": false,
                            "skipped": false
                        }
                    ],
                    "suites": [],
                    "passes": [
                        "e3201d11-06ac-4ee2-babd-bf0e1e904b68",
                        "ad14b465-5005-4547-86c6-bf723bba719f"
                    ],
                    "failures": [],
                    "pending": [],
                    "skipped": [],
                    "duration": 1,
                    "root": false,
                    "rootEmpty": false,
                    "_timeout": 150000
                },
                {
                    "uuid": "00cfeaf3-2c99-44cb-b0bd-f2055f99ca31",
                    "title": "NetIncome_Line229_3-Input F9200 (lodging expenses) on a TL2 (Claim for Meals and Lodging Expenses) without an amount at F22900 (other employment expenses). Software must not allow.   //(TP single, T4 income=$50,000, Do you have expenses related to your work? Work Related Expenses, transport employee. Short Haul driver =Yes Simplified: Lodging Ex =1,000. Add 2nd Tab: Long Haul Driver =Yes. Lodging Ex. = $ 500)",
                    "fullFile": "E:\\Rita\\Taxtron\\WebTest\\my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_Line229_3.js",
                    "file": "\\my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_Line229_3.js",
                    "beforeHooks": [
                        {
                            "title": "\"before all\" hook",
                            "fullTitle": "NetIncome_Line229_3-Input F9200 (lodging expenses) on a TL2 (Claim for Meals and Lodging Expenses) without an amount at F22900 (other employment expenses). Software must not allow.   //(TP single, T4 income=$50,000, Do you have expenses related to your work? Work Related Expenses, transport employee. Short Haul driver =Yes Simplified: Lodging Ex =1,000. Add 2nd Tab: Long Haul Driver =Yes. Lodging Ex. = $ 500) \"before all\" hook",
                            "timedOut": false,
                            "duration": 73022,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "driver = new Builder()\n\t.withCapabilities(Capabilities.chrome().setAcceptInsecureCerts(true))\n\t.build();\ndriver.manage().window().setRect({ width: 1366, height: 768 });\nawait login(driver, 'ritakumar@outlook.com', 'rishu12rashi');\nawait selectNewReturn(driver,province);\nawait switchToastOff(driver);\nawait setInputById(driver, 'Firstnames0', 'BOB ');\nawait setInputById(driver, 'Surname0', 'KUM');\nawait selectDateById(driver, 'DOB0', '1961/10/10');\nawait setInputById(driver, 'SIN0', '222222226');    \n        await selectComboById(driver, 'MaritalStatus0', 'Divorced');\n\t    await selectToggleById(driver, 'didyoumove0', '0');\nawait selectToggleById(driver, 'HomeAddressSame0', '1');\nawait nextClick(driver);\nawait setInputById(driver, 'fullAdd0', '880 21 St NE, Salmon Arm, BC V1E 2K9, Canada');\nawait selectToggleById(driver, 'addChange0', '0');\nawait selectToggleById(driver, 'bDisabled0', '0');\nawait selectToggleById(driver, 'quesFP0', '0');\nawait selectToggleById(driver, 'qCitizen0', '0');\nawait nextClick(driver);\n        await selectTab(driver, 'Income');\nawait selectTab(driver, 'IncomeProfile');\nawait selectToggleById(driver, 'WorkedInYOR0tp', '1');\n        await clickDivById(driver, 'T40tp');\nawait nextClick(driver);\nawait setInputById(driver, 'T4B140', '50000');\n        await selectComboById(driver, 'T4_Box100tp', 'ON');\n        await nextClick(driver);\n        await nextClick(driver);\n        await selectTab(driver, 'Deduction');\n        await selectTab(driver, 'Deduction_Main');\n        await selectToggleById(driver, 'qWork0tp', '1');\n        await nextClick(driver);\n        await selectToggleById(driver, 'TL2q0tp', '1');\n        await nextClick(driver);\n        await selectComboById(driver, 'TL2MethodsTwo0tp', 'Simplified');\n        await selectToggleById(driver, 'LongHaul0tp', '1');\n        await selectToggleById(driver, 'LongHaulNo0tp', '1');\n        await setInputById(driver, 'TL2BedCost70tp', '1000');\n        await setInputById(driver, 'TL2BedCost10tp', '500');\n        await nextClick(driver);\n        await nextClick(driver);\n        savedForm = await getServerFile(driver);",
                            "err": {},
                            "uuid": "e4e4cbfb-afbc-4d14-aeab-b7e0f16cb7c6",
                            "parentUUID": "00cfeaf3-2c99-44cb-b0bd-f2055f99ca31",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "afterHooks": [
                        {
                            "title": "\"after all\" hook",
                            "fullTitle": "NetIncome_Line229_3-Input F9200 (lodging expenses) on a TL2 (Claim for Meals and Lodging Expenses) without an amount at F22900 (other employment expenses). Software must not allow.   //(TP single, T4 income=$50,000, Do you have expenses related to your work? Work Related Expenses, transport employee. Short Haul driver =Yes Simplified: Lodging Ex =1,000. Add 2nd Tab: Long Haul Driver =Yes. Lodging Ex. = $ 500) \"after all\" hook",
                            "timedOut": false,
                            "duration": 5626,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "await logoutById(driver);\nawait driver.quit();",
                            "err": {},
                            "uuid": "4eda6064-d860-45f2-a448-10a23236ffe5",
                            "parentUUID": "00cfeaf3-2c99-44cb-b0bd-f2055f99ca31",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "tests": [
                        {
                            "title": "IncomeFeild should be 22900    allow.value ==1500",
                            "fullTitle": "NetIncome_Line229_3-Input F9200 (lodging expenses) on a TL2 (Claim for Meals and Lodging Expenses) without an amount at F22900 (other employment expenses). Software must not allow.   //(TP single, T4 income=$50,000, Do you have expenses related to your work? Work Related Expenses, transport employee. Short Haul driver =Yes Simplified: Lodging Ex =1,000. Add 2nd Tab: Long Haul Driver =Yes. Lodging Ex. = $ 500) IncomeFeild should be 22900    allow.value ==1500",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let otherEmploymentExpensesFeild = getFieldId('22900');\n\t\tlet otherEmploymentExpenses = savedForm[otherEmploymentExpensesFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+otherEmploymentExpenses;\nassert.equal(otherEmploymentExpenses, '1500', 'Income Feild should be built.');",
                            "err": {},
                            "uuid": "86bd78d8-b8c0-4d17-9dce-63b3ff66ca97",
                            "parentUUID": "00cfeaf3-2c99-44cb-b0bd-f2055f99ca31",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": "IncomeFeild should be 9200    allow.value ==1500",
                            "fullTitle": "NetIncome_Line229_3-Input F9200 (lodging expenses) on a TL2 (Claim for Meals and Lodging Expenses) without an amount at F22900 (other employment expenses). Software must not allow.   //(TP single, T4 income=$50,000, Do you have expenses related to your work? Work Related Expenses, transport employee. Short Haul driver =Yes Simplified: Lodging Ex =1,000. Add 2nd Tab: Long Haul Driver =Yes. Lodging Ex. = $ 500) IncomeFeild should be 9200    allow.value ==1500",
                            "timedOut": false,
                            "duration": 1,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let allowableAmountYouPaidForlodgingsFeild = MealLodgingExpenseDataFieldId('9200');\n\t\tlet  allowableAmountYouPaidForlodgings = savedForm[ allowableAmountYouPaidForlodgingsFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+  allowableAmountYouPaidForlodgings;\nassert.equal(  allowableAmountYouPaidForlodgings, '1500', 'Income Feild should be built.');",
                            "err": {},
                            "uuid": "2baca51b-807f-43bf-a55e-e68b5ea57b1f",
                            "parentUUID": "00cfeaf3-2c99-44cb-b0bd-f2055f99ca31",
                            "isHook": false,
                            "skipped": false
                        }
                    ],
                    "suites": [],
                    "passes": [
                        "86bd78d8-b8c0-4d17-9dce-63b3ff66ca97",
                        "2baca51b-807f-43bf-a55e-e68b5ea57b1f"
                    ],
                    "failures": [],
                    "pending": [],
                    "skipped": [],
                    "duration": 1,
                    "root": false,
                    "rootEmpty": false,
                    "_timeout": 150000
                },
                {
                    "uuid": "3d3708c9-dec3-4b63-86d7-e56a97325656",
                    "title": "NetIncome_Line229_4-Input F8862 on a T777 (Statement of Employment Expenses) without an amount at F22900 (other employment expenses). Software must not allow.  //(TP single, T4 income=$50,000, Do you have expenses related to your work? WorkRelated Expenses, Are you a salaried or commission employee? Legal fees =$1,000, Advertising= $500)",
                    "fullFile": "E:\\Rita\\Taxtron\\WebTest\\my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_Line229_4.js",
                    "file": "\\my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_Line229_4.js",
                    "beforeHooks": [
                        {
                            "title": "\"before all\" hook",
                            "fullTitle": "NetIncome_Line229_4-Input F8862 on a T777 (Statement of Employment Expenses) without an amount at F22900 (other employment expenses). Software must not allow.  //(TP single, T4 income=$50,000, Do you have expenses related to your work? WorkRelated Expenses, Are you a salaried or commission employee? Legal fees =$1,000, Advertising= $500) \"before all\" hook",
                            "timedOut": false,
                            "duration": 69323,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "driver = new Builder()\n\t.withCapabilities(Capabilities.chrome().setAcceptInsecureCerts(true))\n\t.build();\ndriver.manage().window().setRect({ width: 1366, height: 768 });\nawait login(driver, 'ritakumar@outlook.com', 'rishu12rashi');\nawait selectNewReturn(driver,province);\nawait switchToastOff(driver);\nawait setInputById(driver, 'Firstnames0', 'BOB ');\nawait setInputById(driver, 'Surname0', 'KUM');\nawait selectDateById(driver, 'DOB0', '1961/10/10');\nawait setInputById(driver, 'SIN0', '222222226');    \n        await selectComboById(driver, 'MaritalStatus0', 'Divorced');\n\t    await selectToggleById(driver, 'didyoumove0', '0');\nawait selectToggleById(driver, 'HomeAddressSame0', '1');\nawait nextClick(driver);\nawait setInputById(driver, 'fullAdd0', '880 21 St NE, Salmon Arm, BC V1E 2K9, Canada');\nawait selectToggleById(driver, 'addChange0', '0');\nawait selectToggleById(driver, 'bDisabled0', '0');\nawait selectToggleById(driver, 'quesFP0', '0');\nawait selectToggleById(driver, 'qCitizen0', '0');\nawait nextClick(driver);\n        await selectTab(driver, 'Income');\nawait selectTab(driver, 'IncomeProfile');\nawait selectToggleById(driver, 'WorkedInYOR0tp', '1');\n        await clickDivById(driver, 'T40tp');\nawait nextClick(driver);\nawait setInputById(driver, 'T4B140', '50000');\n        await selectComboById(driver, 'T4_Box100tp', 'ON');\n        await nextClick(driver);\n        await nextClick(driver);\n        await selectTab(driver, 'Deduction');\n        await selectTab(driver, 'Deduction_Main');\n        await selectToggleById(driver, 'qWork0tp', '1');\n        await nextClick(driver);\n        await selectToggleById(driver, 'salariedEmp0tp', '1');\n        await nextClick(driver);\n        await setInputById(driver, 'T7777legal_50tp', '1000');\n        await setInputById(driver, 'T7777AD_50tp', '500');\n        await nextClick(driver);\n        await nextClick(driver);\n        savedForm = await getServerFile(driver);",
                            "err": {},
                            "uuid": "ceb42321-9be1-474b-adde-092be17abd74",
                            "parentUUID": "3d3708c9-dec3-4b63-86d7-e56a97325656",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "afterHooks": [
                        {
                            "title": "\"after all\" hook",
                            "fullTitle": "NetIncome_Line229_4-Input F8862 on a T777 (Statement of Employment Expenses) without an amount at F22900 (other employment expenses). Software must not allow.  //(TP single, T4 income=$50,000, Do you have expenses related to your work? WorkRelated Expenses, Are you a salaried or commission employee? Legal fees =$1,000, Advertising= $500) \"after all\" hook",
                            "timedOut": false,
                            "duration": 5632,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "await logoutById(driver);\nawait driver.quit();",
                            "err": {},
                            "uuid": "d5a80571-6ac1-4de5-b042-07aa9daa5dca",
                            "parentUUID": "3d3708c9-dec3-4b63-86d7-e56a97325656",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "tests": [
                        {
                            "title": "IncomeFeild should be 22900    allow.value ==1500",
                            "fullTitle": "NetIncome_Line229_4-Input F8862 on a T777 (Statement of Employment Expenses) without an amount at F22900 (other employment expenses). Software must not allow.  //(TP single, T4 income=$50,000, Do you have expenses related to your work? WorkRelated Expenses, Are you a salaried or commission employee? Legal fees =$1,000, Advertising= $500) IncomeFeild should be 22900    allow.value ==1500",
                            "timedOut": false,
                            "duration": 1,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let otherEmploymentExpensesFeild = getFieldId('22900');\n\t\tlet otherEmploymentExpenses = savedForm[otherEmploymentExpensesFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+otherEmploymentExpenses;\nassert.equal(otherEmploymentExpenses, '1500', 'Income Feild should be built.');",
                            "err": {},
                            "uuid": "eeb2db79-7a23-48f8-abf3-56243534affc",
                            "parentUUID": "3d3708c9-dec3-4b63-86d7-e56a97325656",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": "IncomeFeild should be 8862    allow.value ==1000",
                            "fullTitle": "NetIncome_Line229_4-Input F8862 on a T777 (Statement of Employment Expenses) without an amount at F22900 (other employment expenses). Software must not allow.  //(TP single, T4 income=$50,000, Do you have expenses related to your work? WorkRelated Expenses, Are you a salaried or commission employee? Legal fees =$1,000, Advertising= $500) IncomeFeild should be 8862    allow.value ==1000",
                            "timedOut": false,
                            "duration": 1,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let accountingAndlegalFeesFeild = employmentExpenseDataFieldId('8862');\n\t\tlet   accountingAndlegalFees = savedForm[ accountingAndlegalFeesFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+ accountingAndlegalFees;\nassert.equal( accountingAndlegalFees, '1000', 'Income Feild should be built.');",
                            "err": {},
                            "uuid": "37c6934f-8ff4-4a22-bd8e-42e3ece65a44",
                            "parentUUID": "3d3708c9-dec3-4b63-86d7-e56a97325656",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": "IncomeFeild should be 8520    allow.value ==500",
                            "fullTitle": "NetIncome_Line229_4-Input F8862 on a T777 (Statement of Employment Expenses) without an amount at F22900 (other employment expenses). Software must not allow.  //(TP single, T4 income=$50,000, Do you have expenses related to your work? WorkRelated Expenses, Are you a salaried or commission employee? Legal fees =$1,000, Advertising= $500) IncomeFeild should be 8520    allow.value ==500",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let advertisingAndPromotionFeild = employmentExpenseDataFieldId('8520');\n\t\tlet   advertisingAndPromotion = savedForm[  advertisingAndPromotionFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+  advertisingAndPromotion;\nassert.equal(  advertisingAndPromotion, '500', 'Income Feild should be built.');",
                            "err": {},
                            "uuid": "d8f0c9e5-78d7-4d82-8a04-81d7c7ba2d3b",
                            "parentUUID": "3d3708c9-dec3-4b63-86d7-e56a97325656",
                            "isHook": false,
                            "skipped": false
                        }
                    ],
                    "suites": [],
                    "passes": [
                        "eeb2db79-7a23-48f8-abf3-56243534affc",
                        "37c6934f-8ff4-4a22-bd8e-42e3ece65a44",
                        "d8f0c9e5-78d7-4d82-8a04-81d7c7ba2d3b"
                    ],
                    "failures": [],
                    "pending": [],
                    "skipped": [],
                    "duration": 2,
                    "root": false,
                    "rootEmpty": false,
                    "_timeout": 150000
                },
                {
                    "uuid": "5d13ea9a-7ca5-4f8f-800e-42d04a41f086",
                    "title": "NetIncome_Line229_5 Input F9281 on T777 (Statement of Employment Expenses) without an entry at F22900 (other employment expenses). Software must not allow.  //(TP single, T4 income=$50,000, Do you have expenses related to your work? Work Related Expenses, Motor Vehicle Ex., Choose home office expenses? TP single, T4 income=$50,000Employment Expenses:Car:(gas=$1,000,Maintenance=$500,Insur=$1,500)Car:(UCC=$20,000 and Business 50%)Personal use of Home=90%)",
                    "fullFile": "E:\\Rita\\Taxtron\\WebTest\\my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_Line229_5.js",
                    "file": "\\my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_Line229_5.js",
                    "beforeHooks": [
                        {
                            "title": "\"before all\" hook",
                            "fullTitle": "NetIncome_Line229_5 Input F9281 on T777 (Statement of Employment Expenses) without an entry at F22900 (other employment expenses). Software must not allow.  //(TP single, T4 income=$50,000, Do you have expenses related to your work? Work Related Expenses, Motor Vehicle Ex., Choose home office expenses? TP single, T4 income=$50,000Employment Expenses:Car:(gas=$1,000,Maintenance=$500,Insur=$1,500)Car:(UCC=$20,000 and Business 50%)Personal use of Home=90%) \"before all\" hook",
                            "timedOut": false,
                            "duration": 73291,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "driver = new Builder()\n\t.withCapabilities(Capabilities.chrome().setAcceptInsecureCerts(true))\n\t.build();\ndriver.manage().window().setRect({ width: 1366, height: 768 });\nawait login(driver, 'ritakumar@outlook.com', 'rishu12rashi');\nawait selectNewReturn(driver,province);\nawait switchToastOff(driver);\nawait setInputById(driver, 'Firstnames0', 'BOB ');\nawait setInputById(driver, 'Surname0', 'KUM');\nawait selectDateById(driver, 'DOB0', '1961/10/10');\nawait setInputById(driver, 'SIN0', '222222226');    \n        await selectComboById(driver, 'MaritalStatus0', 'Divorced');\n\t    await selectToggleById(driver, 'didyoumove0', '0');\nawait selectToggleById(driver, 'HomeAddressSame0', '1');\nawait nextClick(driver);\nawait setInputById(driver, 'fullAdd0', '880 21 St NE, Salmon Arm, BC V1E 2K9, Canada');\nawait selectToggleById(driver, 'addChange0', '0');\nawait selectToggleById(driver, 'bDisabled0', '0');\nawait selectToggleById(driver, 'quesFP0', '0');\nawait selectToggleById(driver, 'qCitizen0', '0');\nawait nextClick(driver);\n        await selectTab(driver, 'Income');\nawait selectTab(driver, 'IncomeProfile');\nawait selectToggleById(driver, 'WorkedInYOR0tp', '1');\n        await clickDivById(driver, 'T40tp');\nawait nextClick(driver);\nawait setInputById(driver, 'T4B140', '50000');\n        await selectComboById(driver, 'T4_Box100tp', 'ON');\n        await nextClick(driver);\n        await nextClick(driver);\n        await selectTab(driver, 'Deduction');\n        await selectTab(driver, 'Deduction_Main');\n        await selectToggleById(driver, 'qWork0tp', '1');\n        await nextClick(driver);\n        await selectToggleById(driver, 'motorvehicle0tp', '1');\n        await selectToggleById(driver, 'homeoffice0tp', '1');\n        await nextClick(driver);\n        await setInputById(driver, 'T777WS_VehicleModel0tp', '2017');\n        await selectToggleById(driver, 'leaseOrPurchase0tp', '2');\n        await selectDateById(driver, 'T777Pdate0tp', '2018/10/10');\n        await setInputById(driver, 'T777WS_BusKM0tp', '25000');\n        await setInputById(driver, 'T777WS_TotalKM0tp', '50000');\n        await setInputById(driver, 'T7777Fuel_50tp', '1000');\n        await setInputById(driver, 'T7777Repair_50tp', '500');\n        await setInputById(driver, 'ExT777Insurance_50tp', '1500');\n        await setInputById(driver, 'Empclass100tp', '20000');\n        await nextClick(driver);\n        await setInputById(driver, 'T777Line23PersUse0tp', '90');\n        await nextClick(driver);\n        savedForm = await getServerFile(driver);",
                            "err": {},
                            "uuid": "00098584-6577-4639-b04f-026227965203",
                            "parentUUID": "5d13ea9a-7ca5-4f8f-800e-42d04a41f086",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "afterHooks": [
                        {
                            "title": "\"after all\" hook",
                            "fullTitle": "NetIncome_Line229_5 Input F9281 on T777 (Statement of Employment Expenses) without an entry at F22900 (other employment expenses). Software must not allow.  //(TP single, T4 income=$50,000, Do you have expenses related to your work? Work Related Expenses, Motor Vehicle Ex., Choose home office expenses? TP single, T4 income=$50,000Employment Expenses:Car:(gas=$1,000,Maintenance=$500,Insur=$1,500)Car:(UCC=$20,000 and Business 50%)Personal use of Home=90%) \"after all\" hook",
                            "timedOut": false,
                            "duration": 5517,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "await logoutById(driver);\nawait driver.quit();",
                            "err": {},
                            "uuid": "8210abee-5b8d-4cdc-9962-c12b3ed220d0",
                            "parentUUID": "5d13ea9a-7ca5-4f8f-800e-42d04a41f086",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "tests": [
                        {
                            "title": "IncomeFeild should be 9281    allow.value ==4500",
                            "fullTitle": "NetIncome_Line229_5 Input F9281 on T777 (Statement of Employment Expenses) without an entry at F22900 (other employment expenses). Software must not allow.  //(TP single, T4 income=$50,000, Do you have expenses related to your work? Work Related Expenses, Motor Vehicle Ex., Choose home office expenses? TP single, T4 income=$50,000Employment Expenses:Car:(gas=$1,000,Maintenance=$500,Insur=$1,500)Car:(UCC=$20,000 and Business 50%)Personal use of Home=90%) IncomeFeild should be 9281    allow.value ==4500",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let allowableMotorVehicleExpensesFeild = employmentExpenseDataFieldId('9281');\n\t\tlet    allowableMotorVehicleExpenses = savedForm[ allowableMotorVehicleExpensesFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+  allowableMotorVehicleExpenses;\nassert.strictEqual(  allowableMotorVehicleExpenses, '4500', 'Income Feild should be built.');",
                            "err": {},
                            "uuid": "fc5058c8-8ed9-44d4-b32b-d8722368138c",
                            "parentUUID": "5d13ea9a-7ca5-4f8f-800e-42d04a41f086",
                            "isHook": false,
                            "skipped": false
                        }
                    ],
                    "suites": [],
                    "passes": [
                        "fc5058c8-8ed9-44d4-b32b-d8722368138c"
                    ],
                    "failures": [],
                    "pending": [],
                    "skipped": [],
                    "duration": 0,
                    "root": false,
                    "rootEmpty": false,
                    "_timeout": 150000
                },
                {
                    "uuid": "5fa188da-475d-4e72-9e16-4a7a39329cd3",
                    "title": "NetIncome_Line232_1--Build a return with a deduction at F23200. Software must require the taxpayer to identify the type of deduction. If a repayment is identified, build F54790 for EI benefits repaid, F53510 for OAS benefits repaid, F53590 for shareholder loan repaid and/or F55360 for RDSP repaid.   //(TP 15 years old, T4E Box 30 =$ 3,000, RDSP Repayment =$ 4,000, Shareholders loan =$ 5,000, Rare Situations, Are you required to pay tax on split income? Are you declaring deemed dividend from the disposition of capital property ? Gains from box 21 of your T3 slip (relating to such dispositions) =$ 25,000)",
                    "fullFile": "E:\\Rita\\Taxtron\\WebTest\\my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_Line232_1.js",
                    "file": "\\my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_Line232_1.js",
                    "beforeHooks": [
                        {
                            "title": "\"before all\" hook",
                            "fullTitle": "NetIncome_Line232_1--Build a return with a deduction at F23200. Software must require the taxpayer to identify the type of deduction. If a repayment is identified, build F54790 for EI benefits repaid, F53510 for OAS benefits repaid, F53590 for shareholder loan repaid and/or F55360 for RDSP repaid.   //(TP 15 years old, T4E Box 30 =$ 3,000, RDSP Repayment =$ 4,000, Shareholders loan =$ 5,000, Rare Situations, Are you required to pay tax on split income? Are you declaring deemed dividend from the disposition of capital property ? Gains from box 21 of your T3 slip (relating to such dispositions) =$ 25,000) \"before all\" hook",
                            "timedOut": false,
                            "duration": 66270,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "driver = new Builder()\n\t.withCapabilities(Capabilities.chrome().setAcceptInsecureCerts(true))\n\t.build();\ndriver.manage().window().setRect({ width: 1366, height: 768 });\nawait login(driver, 'ritakumar@outlook.com', 'rishu12rashi');\nawait selectNewReturn(driver,province);\nawait switchToastOff(driver);\n        await setInputById(driver, 'Firstnames0', 'FEE');\nawait setInputById(driver, 'Surname0', 'LEE');\n\t    await selectAgeDateById(driver, 'DOB0tp',Fed.TaxYear,'15', '/05/15');\nawait setInputById(driver, 'SIN0', '123123127');\n        await selectComboById(driver, 'MaritalStatus0', 'Divorced');\n        await selectToggleById(driver, 'domchanged0', '0');\n        await nextClick(driver);\nawait setInputById(driver, 'fullAdd0', '6464 Yonge St, North York, YT M2M 3X4, Canada');\nawait selectToggleById(driver, 'quesFP0', '0');\n        await selectToggleById(driver, 'quesPrinResi0', '0');\n        await selectToggleById(driver, 'bDisabled0tp', '0');\n        await nextClick(driver);\n        await selectTab(driver, 'Income');\nawait selectTab(driver, 'IncomeProfile');\nawait selectToggleById(driver, 'quesOtherIncome0tp', '1');\n        await clickDivById(driver, 'T4E0tp');\nawait nextClick(driver);\nawait setInputById(driver, 'T4E300tp', '3000');\n        await nextClick(driver);\n        await selectTab(driver, 'Deduction');\n        await selectTab(driver, 'MiscDeductions');\n        await selectToggleById(driver, 'qaddDeductions0tp', '1');\n        await nextClick(driver);\n        await setInputById(driver, 'ShareLoan0tp', '5000');\n        await setInputById(driver, 'RDSPpayment0tp', '4000');\nawait nextClick(driver);\n//await selectTab(driver, 'RareSituations');\nawait selectToggleById(driver, 'qT12060tp', '1');\nawait nextClick(driver);\nawait selectToggleById(driver, 'deemedq0tp', '1');\nawait setInputById(driver, 'T1206_LineDDE0tp', '25000');\n        await nextClick(driver);\n        savedForm = await getServerFile(driver);",
                            "err": {},
                            "uuid": "1525381d-a518-4ce7-a296-7b9f19745ff2",
                            "parentUUID": "5fa188da-475d-4e72-9e16-4a7a39329cd3",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "afterHooks": [
                        {
                            "title": "\"after all\" hook",
                            "fullTitle": "NetIncome_Line232_1--Build a return with a deduction at F23200. Software must require the taxpayer to identify the type of deduction. If a repayment is identified, build F54790 for EI benefits repaid, F53510 for OAS benefits repaid, F53590 for shareholder loan repaid and/or F55360 for RDSP repaid.   //(TP 15 years old, T4E Box 30 =$ 3,000, RDSP Repayment =$ 4,000, Shareholders loan =$ 5,000, Rare Situations, Are you required to pay tax on split income? Are you declaring deemed dividend from the disposition of capital property ? Gains from box 21 of your T3 slip (relating to such dispositions) =$ 25,000) \"after all\" hook",
                            "timedOut": false,
                            "duration": 1459,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "await logoutById(driver);\nawait driver.quit();",
                            "err": {},
                            "uuid": "ff9a82c2-92b9-442f-86e2-7da8dee8e1ba",
                            "parentUUID": "5fa188da-475d-4e72-9e16-4a7a39329cd3",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "tests": [
                        {
                            "title": " F23200 should be  allowed with amount    allow.value ==40750",
                            "fullTitle": "NetIncome_Line232_1--Build a return with a deduction at F23200. Software must require the taxpayer to identify the type of deduction. If a repayment is identified, build F54790 for EI benefits repaid, F53510 for OAS benefits repaid, F53590 for shareholder loan repaid and/or F55360 for RDSP repaid.   //(TP 15 years old, T4E Box 30 =$ 3,000, RDSP Repayment =$ 4,000, Shareholders loan =$ 5,000, Rare Situations, Are you required to pay tax on split income? Are you declaring deemed dividend from the disposition of capital property ? Gains from box 21 of your T3 slip (relating to such dispositions) =$ 25,000)  F23200 should be  allowed with amount    allow.value ==40750",
                            "timedOut": false,
                            "duration": 1,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let otherDeductionsFeild = getFieldId('23200');\n\t\tlet   otherDeductions = savedForm[  otherDeductionsFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+ otherDeductions;\nassert.equal(   otherDeductions, '40750', ' Feild should be built');",
                            "err": {},
                            "uuid": "d2fa5346-9732-4696-a849-26f1824ec126",
                            "parentUUID": "5fa188da-475d-4e72-9e16-4a7a39329cd3",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F54790 should be  allowed with amount    allow.value ==3000",
                            "fullTitle": "NetIncome_Line232_1--Build a return with a deduction at F23200. Software must require the taxpayer to identify the type of deduction. If a repayment is identified, build F54790 for EI benefits repaid, F53510 for OAS benefits repaid, F53590 for shareholder loan repaid and/or F55360 for RDSP repaid.   //(TP 15 years old, T4E Box 30 =$ 3,000, RDSP Repayment =$ 4,000, Shareholders loan =$ 5,000, Rare Situations, Are you required to pay tax on split income? Are you declaring deemed dividend from the disposition of capital property ? Gains from box 21 of your T3 slip (relating to such dispositions) =$ 25,000)  F54790 should be  allowed with amount    allow.value ==3000",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let eIAndOtherBenefitsRepaidFeild = getFieldId('54790');\n\t\tlet eIAndOtherBenefitsRepaid = savedForm[  eIAndOtherBenefitsRepaidFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+  eIAndOtherBenefitsRepaid;\nassert.equal(  eIAndOtherBenefitsRepaid, '3000', ' Feild should be built');",
                            "err": {},
                            "uuid": "674de5bd-7780-426e-98bf-e3ded1421d7d",
                            "parentUUID": "5fa188da-475d-4e72-9e16-4a7a39329cd3",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F53590 should be  allowed with amount    allow.value ==5000",
                            "fullTitle": "NetIncome_Line232_1--Build a return with a deduction at F23200. Software must require the taxpayer to identify the type of deduction. If a repayment is identified, build F54790 for EI benefits repaid, F53510 for OAS benefits repaid, F53590 for shareholder loan repaid and/or F55360 for RDSP repaid.   //(TP 15 years old, T4E Box 30 =$ 3,000, RDSP Repayment =$ 4,000, Shareholders loan =$ 5,000, Rare Situations, Are you required to pay tax on split income? Are you declaring deemed dividend from the disposition of capital property ? Gains from box 21 of your T3 slip (relating to such dispositions) =$ 25,000)  F53590 should be  allowed with amount    allow.value ==5000",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let shareholdersloanRepaymentFeild = getFieldId('53590');\n\t\tlet  shareholdersloanRepayment = savedForm[  shareholdersloanRepaymentFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+  shareholdersloanRepayment;\nassert.equal(   shareholdersloanRepayment, '5000', ' Feild should be built');",
                            "err": {},
                            "uuid": "58804bbb-c8cd-4b50-a754-02acb1785176",
                            "parentUUID": "5fa188da-475d-4e72-9e16-4a7a39329cd3",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F55360 should be  allowed with amount    allow.value ==4000",
                            "fullTitle": "NetIncome_Line232_1--Build a return with a deduction at F23200. Software must require the taxpayer to identify the type of deduction. If a repayment is identified, build F54790 for EI benefits repaid, F53510 for OAS benefits repaid, F53590 for shareholder loan repaid and/or F55360 for RDSP repaid.   //(TP 15 years old, T4E Box 30 =$ 3,000, RDSP Repayment =$ 4,000, Shareholders loan =$ 5,000, Rare Situations, Are you required to pay tax on split income? Are you declaring deemed dividend from the disposition of capital property ? Gains from box 21 of your T3 slip (relating to such dispositions) =$ 25,000)  F55360 should be  allowed with amount    allow.value ==4000",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let rDSPRepaymentByTaxpayerFeild = getFieldId('55360');\n\t\tlet  rDSPRepaymentByTaxpayer = savedForm[ rDSPRepaymentByTaxpayerFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+ rDSPRepaymentByTaxpayer;\nassert.equal( rDSPRepaymentByTaxpayer, '4000', ' Feild should be built');",
                            "err": {},
                            "uuid": "c99543f1-b09a-4fa4-b248-3321c2926acd",
                            "parentUUID": "5fa188da-475d-4e72-9e16-4a7a39329cd3",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F68360 should be  allowed with amount    allow.value ==28750",
                            "fullTitle": "NetIncome_Line232_1--Build a return with a deduction at F23200. Software must require the taxpayer to identify the type of deduction. If a repayment is identified, build F54790 for EI benefits repaid, F53510 for OAS benefits repaid, F53590 for shareholder loan repaid and/or F55360 for RDSP repaid.   //(TP 15 years old, T4E Box 30 =$ 3,000, RDSP Repayment =$ 4,000, Shareholders loan =$ 5,000, Rare Situations, Are you required to pay tax on split income? Are you declaring deemed dividend from the disposition of capital property ? Gains from box 21 of your T3 slip (relating to such dispositions) =$ 25,000)  F68360 should be  allowed with amount    allow.value ==28750",
                            "timedOut": false,
                            "duration": 1,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let  totalSplitIncomeFeild = getFieldId('68360');\n\t\tlet   totalSplitIncome = savedForm[  totalSplitIncomeFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+  totalSplitIncome;\nassert.equal(   totalSplitIncome, '28750', ' Feild should be built');",
                            "err": {},
                            "uuid": "6d45ba36-a062-4dfe-8b07-17c49ae42cfe",
                            "parentUUID": "5fa188da-475d-4e72-9e16-4a7a39329cd3",
                            "isHook": false,
                            "skipped": false
                        }
                    ],
                    "suites": [],
                    "passes": [
                        "d2fa5346-9732-4696-a849-26f1824ec126",
                        "674de5bd-7780-426e-98bf-e3ded1421d7d",
                        "58804bbb-c8cd-4b50-a754-02acb1785176",
                        "c99543f1-b09a-4fa4-b248-3321c2926acd",
                        "6d45ba36-a062-4dfe-8b07-17c49ae42cfe"
                    ],
                    "failures": [],
                    "pending": [],
                    "skipped": [],
                    "duration": 2,
                    "root": false,
                    "rootEmpty": false,
                    "_timeout": 150000
                },
                {
                    "uuid": "096791c3-783e-4db2-a72a-f5f88e44befa",
                    "title": "NetIncome_Line232_2--Override F23200 to be less than the sum of F54790, F53510, F55360 and F53590. Software must not allow.   //(TP 65 years old, Widow. T4OAS Box 20 =$ 2,000. T4RIF =Box 18 ($ 250,000). Did you receive this amount following the death of your spouse and transferred it to your RRSP/RIF? Enter = $ 250,000)",
                    "fullFile": "E:\\Rita\\Taxtron\\WebTest\\my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_Line232_2.js",
                    "file": "\\my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_Line232_2.js",
                    "beforeHooks": [
                        {
                            "title": "\"before all\" hook",
                            "fullTitle": "NetIncome_Line232_2--Override F23200 to be less than the sum of F54790, F53510, F55360 and F53590. Software must not allow.   //(TP 65 years old, Widow. T4OAS Box 20 =$ 2,000. T4RIF =Box 18 ($ 250,000). Did you receive this amount following the death of your spouse and transferred it to your RRSP/RIF? Enter = $ 250,000) \"before all\" hook",
                            "timedOut": false,
                            "duration": 60654,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "driver = new Builder()\n\t.withCapabilities(Capabilities.chrome().setAcceptInsecureCerts(true))\n\t.build();\ndriver.manage().window().setRect({ width: 1366, height: 768 });\nawait login(driver, 'ritakumar@outlook.com', 'rishu12rashi');\nawait selectNewReturn(driver,province);\nawait switchToastOff(driver);\n        await setInputById(driver, 'Firstnames0', 'FEE');\nawait setInputById(driver, 'Surname0', 'LEE');\nawait selectDateById(driver, 'DOB0', '1954/01/01');\nawait setInputById(driver, 'SIN0', '123123127');\n        await selectComboById(driver, 'MaritalStatus0', 'Widowed');\n        await selectToggleById(driver, 'domchanged0', '1');\n        await selectAgeDateById(driver, 'DOM0tp',Fed.TaxYear,'0', '/05/15');\n        await driver.findElement(By.name('DOM0tp')).sendKeys(Key.TAB);\n        await selectToggleById(driver, 'IsLinkedReturn0tp', '0');\n        await nextClick(driver);\nawait setInputById(driver, 'fullAdd0', '6464 Yonge St, North York, YT M2M 3X4, Canada');\nawait selectToggleById(driver, 'quesFP0', '0');\n        await selectToggleById(driver, 'quesPrinResi0', '0');\n        await selectToggleById(driver, 'bDisabled0tp', '1');\n        await nextClick(driver);\n        await selectTab(driver, 'Income');\n        await selectTab(driver, 'IncomeProfile');\n        await selectToggleById(driver, 'GovernmentPension0tp', '1');\n        await clickDivById(driver, 'T4AOS0tp');\nawait selectToggleById(driver, 'PensionFunds0tp', '1');\n        await clickDivById(driver, 'T4RIF0tp');\nawait nextClick(driver);\nawait setInputById(driver, 'T4AOASRecovery0tp', '2000');\n        await nextClick(driver);\n        await setInputById(driver, 'T4RIFBox180tp', '250000');\n        await selectToggleById(driver, 'T4RIF_140tp', '1');\n        await setInputById(driver, 'T4RIFTransferDE0tp', '250000');\nawait nextClick(driver);\nawait nextClick(driver);\nawait nextClick(driver);\n        savedForm = await getServerFile(driver);",
                            "err": {},
                            "uuid": "eb8afe56-dabf-4805-aa10-73fbfa47d967",
                            "parentUUID": "096791c3-783e-4db2-a72a-f5f88e44befa",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "afterHooks": [
                        {
                            "title": "\"after all\" hook",
                            "fullTitle": "NetIncome_Line232_2--Override F23200 to be less than the sum of F54790, F53510, F55360 and F53590. Software must not allow.   //(TP 65 years old, Widow. T4OAS Box 20 =$ 2,000. T4RIF =Box 18 ($ 250,000). Did you receive this amount following the death of your spouse and transferred it to your RRSP/RIF? Enter = $ 250,000) \"after all\" hook",
                            "timedOut": false,
                            "duration": 5694,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "await logoutById(driver);\nawait driver.quit();",
                            "err": {},
                            "uuid": "c2114a99-6fde-4d27-8195-8fdc6a4ce29e",
                            "parentUUID": "096791c3-783e-4db2-a72a-f5f88e44befa",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "tests": [
                        {
                            "title": " F20800 should be  allowed with amount    allow.value ==undefined",
                            "fullTitle": "NetIncome_Line232_2--Override F23200 to be less than the sum of F54790, F53510, F55360 and F53590. Software must not allow.   //(TP 65 years old, Widow. T4OAS Box 20 =$ 2,000. T4RIF =Box 18 ($ 250,000). Did you receive this amount following the death of your spouse and transferred it to your RRSP/RIF? Enter = $ 250,000)  F20800 should be  allowed with amount    allow.value ==undefined",
                            "timedOut": false,
                            "duration": 1,
                            "state": "failed",
                            "speed": null,
                            "pass": false,
                            "fail": true,
                            "pending": false,
                            "context": null,
                            "code": "let otherDeductionsFeild = getFieldId('20800');\n\t\tlet   otherDeductions = savedForm[  otherDeductionsFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+ otherDeductions;\nassert.equal(   otherDeductions, '250000', ' Feild should be built');",
                            "err": {
                                "message": "AssertionError:  Feild should be built",
                                "estack": "AssertionError [ERR_ASSERTION]:  Feild should be built\n    at Context.<anonymous> (my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_Line232_2.js:59:16)\n    at processImmediate (internal/timers.js:456:21)",
                                "diff": null
                            },
                            "uuid": "e43867d8-d382-4cc2-adb7-f0509588e744",
                            "parentUUID": "096791c3-783e-4db2-a72a-f5f88e44befa",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F53510 should be  allowed with amount    allow.value ==2000",
                            "fullTitle": "NetIncome_Line232_2--Override F23200 to be less than the sum of F54790, F53510, F55360 and F53590. Software must not allow.   //(TP 65 years old, Widow. T4OAS Box 20 =$ 2,000. T4RIF =Box 18 ($ 250,000). Did you receive this amount following the death of your spouse and transferred it to your RRSP/RIF? Enter = $ 250,000)  F53510 should be  allowed with amount    allow.value ==2000",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let amountOfOASPensionRepaidFeild = getFieldId('53510');\n\t\tlet  amountOfOASPensionRepaid = savedForm[   amountOfOASPensionRepaidFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+  amountOfOASPensionRepaid;\nassert.equal(    amountOfOASPensionRepaid, '2000', ' Feild should be built');",
                            "err": {},
                            "uuid": "d56bd465-eb50-4d96-b511-e95b64e8c34b",
                            "parentUUID": "096791c3-783e-4db2-a72a-f5f88e44befa",
                            "isHook": false,
                            "skipped": false
                        }
                    ],
                    "suites": [],
                    "passes": [
                        "d56bd465-eb50-4d96-b511-e95b64e8c34b"
                    ],
                    "failures": [
                        "e43867d8-d382-4cc2-adb7-f0509588e744"
                    ],
                    "pending": [],
                    "skipped": [],
                    "duration": 1,
                    "root": false,
                    "rootEmpty": false,
                    "_timeout": 150000
                },
                {
                    "uuid": "436b2624-c477-4e87-84af-2004f0ccbfa2",
                    "title": "NetIncome_Line232_3-Input F53370 (CCA on films and/or video tapes) without an amount at F23200. Software must not allow..   //(Misc Deduction =Do you have deductions which are not reported elsewhere? CCA on film and/or video tapes = $ 500)",
                    "fullFile": "E:\\Rita\\Taxtron\\WebTest\\my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_Line232_3.js",
                    "file": "\\my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_Line232_3.js",
                    "beforeHooks": [
                        {
                            "title": "\"before all\" hook",
                            "fullTitle": "NetIncome_Line232_3-Input F53370 (CCA on films and/or video tapes) without an amount at F23200. Software must not allow..   //(Misc Deduction =Do you have deductions which are not reported elsewhere? CCA on film and/or video tapes = $ 500) \"before all\" hook",
                            "timedOut": false,
                            "duration": 63268,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "driver = new Builder()\n\t.withCapabilities(Capabilities.chrome().setAcceptInsecureCerts(true))\n\t.build();\ndriver.manage().window().setRect({ width: 1366, height: 768 });\nawait login(driver, 'ritakumar@outlook.com', 'rishu12rashi');\nawait selectNewReturn(driver,province);\nawait switchToastOff(driver);\n        await setInputById(driver, 'Firstnames0', 'FEE');\nawait setInputById(driver, 'Surname0', 'LEE');\n\t    await selectAgeDateById(driver, 'DOB0tp',Fed.TaxYear,'65', '/05/15');\nawait setInputById(driver, 'SIN0', '123123127');\n        await selectComboById(driver, 'MaritalStatus0', 'Widowed');\n        await selectToggleById(driver, 'domchanged0', '1');\n        await selectAgeDateById(driver, 'DOM0tp',Fed.TaxYear,'0', '/05/15');\n        await driver.findElement(By.name('DOM0tp')).sendKeys(Key.TAB);\n        await selectToggleById(driver, 'IsLinkedReturn0tp', '0');\n        await nextClick(driver);\nawait setInputById(driver, 'fullAdd0', '6464 Yonge St, North York, YT M2M 3X4, Canada');\nawait selectToggleById(driver, 'quesFP0', '0');\n        await selectToggleById(driver, 'quesPrinResi0', '0');\n        await selectToggleById(driver, 'bDisabled0tp', '1');\n        await nextClick(driver);\n        await selectTab(driver, 'Income');\nawait selectTab(driver, 'IncomeProfile');\nawait selectToggleById(driver, 'WorkedInYOR0tp', '1');\n        await clickDivById(driver, 'T40tp');\nawait nextClick(driver);\nawait setInputById(driver, 'T4B140', '50000');\n        await selectComboById(driver, 'T4_Box100tp', 'ON');\n        await nextClick(driver);\n        await selectTab(driver, 'Deduction');\n        await selectTab(driver, 'MiscDeductions');\n        await selectToggleById(driver, 'qaddDeductions0tp', '1');\n        await nextClick(driver);\n        await setInputById(driver, 'FilmCCA0tp', '500');\n        await nextClick(driver);\n        savedForm = await getServerFile(driver);",
                            "err": {},
                            "uuid": "f37f621a-e85c-4019-93af-e60f6ad62ae6",
                            "parentUUID": "436b2624-c477-4e87-84af-2004f0ccbfa2",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "afterHooks": [
                        {
                            "title": "\"after all\" hook",
                            "fullTitle": "NetIncome_Line232_3-Input F53370 (CCA on films and/or video tapes) without an amount at F23200. Software must not allow..   //(Misc Deduction =Do you have deductions which are not reported elsewhere? CCA on film and/or video tapes = $ 500) \"after all\" hook",
                            "timedOut": false,
                            "duration": 5444,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "await logoutById(driver);\nawait driver.quit();",
                            "err": {},
                            "uuid": "a1242873-21c0-442a-b5b6-fd46325fcbee",
                            "parentUUID": "436b2624-c477-4e87-84af-2004f0ccbfa2",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "tests": [
                        {
                            "title": " F23200 should be  allowed with amount    allow.value ==500",
                            "fullTitle": "NetIncome_Line232_3-Input F53370 (CCA on films and/or video tapes) without an amount at F23200. Software must not allow..   //(Misc Deduction =Do you have deductions which are not reported elsewhere? CCA on film and/or video tapes = $ 500)  F23200 should be  allowed with amount    allow.value ==500",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let otherDeductionsFeild = getFieldId('23200');\n\t\tlet   otherDeductions = savedForm[  otherDeductionsFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+ otherDeductions;\nassert.equal(   otherDeductions, '500', ' Feild should be built');",
                            "err": {},
                            "uuid": "a92555aa-a996-4fc1-9d95-3be970de2728",
                            "parentUUID": "436b2624-c477-4e87-84af-2004f0ccbfa2",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F53370 should be  allowed with amount    allow.value ==500",
                            "fullTitle": "NetIncome_Line232_3-Input F53370 (CCA on films and/or video tapes) without an amount at F23200. Software must not allow..   //(Misc Deduction =Do you have deductions which are not reported elsewhere? CCA on film and/or video tapes = $ 500)  F53370 should be  allowed with amount    allow.value ==500",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let cCAOnCertifiedFilmPropertyFeild = getFieldId('53370');\n\t\tlet cCAOnCertifiedFilmProperty = savedForm[  cCAOnCertifiedFilmPropertyFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+  cCAOnCertifiedFilmProperty;\nassert.equal(   cCAOnCertifiedFilmProperty, '500', ' Feild should be built');",
                            "err": {},
                            "uuid": "15e9169d-27d0-4c90-ad90-164ee0f5e4aa",
                            "parentUUID": "436b2624-c477-4e87-84af-2004f0ccbfa2",
                            "isHook": false,
                            "skipped": false
                        }
                    ],
                    "suites": [],
                    "passes": [
                        "a92555aa-a996-4fc1-9d95-3be970de2728",
                        "15e9169d-27d0-4c90-ad90-164ee0f5e4aa"
                    ],
                    "failures": [],
                    "pending": [],
                    "skipped": [],
                    "duration": 0,
                    "root": false,
                    "rootEmpty": false,
                    "_timeout": 150000
                },
                {
                    "uuid": "732d029d-212d-493d-a544-a4ad080d0a00",
                    "title": "NetIncome_Line232_4--Override F23200 to be less than the sum of F54790, F53510, F55360 and F53590. Software must not allow.   //(TP 65 years old, Widow. T4OAS Box 20 =$ 2,000. T4RIF =Box 18 ($ 250,000). Did you receive this amount following the death of your spouse and transferred it to your RRSP/RIF? Enter = $ 250,000)",
                    "fullFile": "E:\\Rita\\Taxtron\\WebTest\\my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_Line232_4.js",
                    "file": "\\my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_Line232_4.js",
                    "beforeHooks": [
                        {
                            "title": "\"before all\" hook",
                            "fullTitle": "NetIncome_Line232_4--Override F23200 to be less than the sum of F54790, F53510, F55360 and F53590. Software must not allow.   //(TP 65 years old, Widow. T4OAS Box 20 =$ 2,000. T4RIF =Box 18 ($ 250,000). Did you receive this amount following the death of your spouse and transferred it to your RRSP/RIF? Enter = $ 250,000) \"before all\" hook",
                            "timedOut": false,
                            "duration": 55795,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "driver = new Builder()\n\t.withCapabilities(Capabilities.chrome().setAcceptInsecureCerts(true))\n\t.build();\ndriver.manage().window().setRect({ width: 1366, height: 768 });\nawait login(driver, 'ritakumar@outlook.com', 'rishu12rashi');\nawait selectNewReturn(driver,province);\nawait switchToastOff(driver);\n        await setInputById(driver, 'Firstnames0', 'FEE');\nawait setInputById(driver, 'Surname0', 'LEE');\nawait selectDateById(driver, 'DOB0', '1947/01/01');\nawait setInputById(driver, 'SIN0', '123123127');\n        await selectComboById(driver, 'MaritalStatus0', 'Widowed');\n        await selectToggleById(driver, 'domchanged0', '1');\n        await selectAgeDateById(driver, 'DOM0tp',Fed.TaxYear,'0', '/05/15');\n        await driver.findElement(By.name('DOM0tp')).sendKeys(Key.TAB);\n        await selectToggleById(driver, 'IsLinkedReturn0tp', '0');\n        await nextClick(driver);\nawait setInputById(driver, 'fullAdd0', '6464 Yonge St, North York, YT M2M 3X4, Canada');\nawait selectToggleById(driver, 'quesFP0', '0');\n        await selectToggleById(driver, 'quesPrinResi0', '0');\n        await selectToggleById(driver, 'bDisabled0tp', '1');\n        await nextClick(driver);\n        await selectTab(driver, 'Income');\n        await selectTab(driver, 'IncomeProfile');\n        await selectToggleById(driver, 'GovernmentPension0tp', '1');\n        await clickDivById(driver, 'T4AOS0tp');\nawait selectToggleById(driver, 'PensionFunds0tp', '1');\n        await clickDivById(driver, 'T4RIF0tp');\nawait nextClick(driver);\nawait setInputById(driver, 'T4AOASRecovery0tp', '2000');\n        await nextClick(driver);\n        await setInputById(driver, 'T4RIFBox180tp', '250000');\n        await selectToggleById(driver, 'T4RIF_140tp', '1');\n       await setInputById(driver, 'T4RIFTransferDE0tp', '250000');\n        await nextClick(driver);\n        savedForm = await getServerFile(driver);",
                            "err": {},
                            "uuid": "e5ac5b91-e5b2-4bb5-9258-d859f8b1f8e9",
                            "parentUUID": "732d029d-212d-493d-a544-a4ad080d0a00",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "afterHooks": [
                        {
                            "title": "\"after all\" hook",
                            "fullTitle": "NetIncome_Line232_4--Override F23200 to be less than the sum of F54790, F53510, F55360 and F53590. Software must not allow.   //(TP 65 years old, Widow. T4OAS Box 20 =$ 2,000. T4RIF =Box 18 ($ 250,000). Did you receive this amount following the death of your spouse and transferred it to your RRSP/RIF? Enter = $ 250,000) \"after all\" hook",
                            "timedOut": false,
                            "duration": 5799,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "await logoutById(driver);\nawait driver.quit();",
                            "err": {},
                            "uuid": "4104ac3b-61cd-4eca-b173-4fafd89217a1",
                            "parentUUID": "732d029d-212d-493d-a544-a4ad080d0a00",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "tests": [
                        {
                            "title": " F23200 should be  allowed with amount    allow.value ==252000",
                            "fullTitle": "NetIncome_Line232_4--Override F23200 to be less than the sum of F54790, F53510, F55360 and F53590. Software must not allow.   //(TP 65 years old, Widow. T4OAS Box 20 =$ 2,000. T4RIF =Box 18 ($ 250,000). Did you receive this amount following the death of your spouse and transferred it to your RRSP/RIF? Enter = $ 250,000)  F23200 should be  allowed with amount    allow.value ==252000",
                            "timedOut": false,
                            "duration": 1,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let otherDeductionsFeild = getFieldId('23200');\n\t\tlet   otherDeductions = savedForm[  otherDeductionsFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+ otherDeductions;\nassert.equal(   otherDeductions, '252000', ' Feild should be built');",
                            "err": {},
                            "uuid": "af225219-7f1d-476d-a659-978d6ce69474",
                            "parentUUID": "732d029d-212d-493d-a544-a4ad080d0a00",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F53510 should be  allowed with amount    allow.value ==2000",
                            "fullTitle": "NetIncome_Line232_4--Override F23200 to be less than the sum of F54790, F53510, F55360 and F53590. Software must not allow.   //(TP 65 years old, Widow. T4OAS Box 20 =$ 2,000. T4RIF =Box 18 ($ 250,000). Did you receive this amount following the death of your spouse and transferred it to your RRSP/RIF? Enter = $ 250,000)  F53510 should be  allowed with amount    allow.value ==2000",
                            "timedOut": false,
                            "duration": 1,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let amountOfOASPensionRepaidFeild = getFieldId('53510');\n\t\tlet  amountOfOASPensionRepaid = savedForm[   amountOfOASPensionRepaidFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+  amountOfOASPensionRepaid;\nassert.equal(    amountOfOASPensionRepaid, '2000', ' Feild should be built');",
                            "err": {},
                            "uuid": "c9ee8655-dde4-4cb3-b834-17dd22a457a6",
                            "parentUUID": "732d029d-212d-493d-a544-a4ad080d0a00",
                            "isHook": false,
                            "skipped": false
                        }
                    ],
                    "suites": [],
                    "passes": [
                        "af225219-7f1d-476d-a659-978d6ce69474",
                        "c9ee8655-dde4-4cb3-b834-17dd22a457a6"
                    ],
                    "failures": [],
                    "pending": [],
                    "skipped": [],
                    "duration": 2,
                    "root": false,
                    "rootEmpty": false,
                    "_timeout": 150000
                },
                {
                    "uuid": "4628a8a8-a6a7-4d6d-8c91-0d6748490245",
                    "title": "NetIncome_Line232_5--Override F23200 to be less than the sum of F54790, F53510, F55360 and F53590. Software must not allow.   //(TP 65 years old, Widow. T4OAS Box 20 =$ 2,000. T4RIF =Box 18 ($ 250,000). Did you receive this amount following the death of your spouse and transferred it to your RRSP/RIF? Enter = $ 250,000)",
                    "fullFile": "E:\\Rita\\Taxtron\\WebTest\\my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_Line232_5.js",
                    "file": "\\my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_Line232_5.js",
                    "beforeHooks": [
                        {
                            "title": "\"before all\" hook",
                            "fullTitle": "NetIncome_Line232_5--Override F23200 to be less than the sum of F54790, F53510, F55360 and F53590. Software must not allow.   //(TP 65 years old, Widow. T4OAS Box 20 =$ 2,000. T4RIF =Box 18 ($ 250,000). Did you receive this amount following the death of your spouse and transferred it to your RRSP/RIF? Enter = $ 250,000) \"before all\" hook",
                            "timedOut": false,
                            "duration": 55624,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "driver = new Builder()\n\t.withCapabilities(Capabilities.chrome().setAcceptInsecureCerts(true))\n\t.build();\ndriver.manage().window().setRect({ width: 1366, height: 768 });\nawait login(driver, 'ritakumar@outlook.com', 'rishu12rashi');\nawait selectNewReturn(driver,province);\nawait switchToastOff(driver);\n        await setInputById(driver, 'Firstnames0', 'FEE');\nawait setInputById(driver, 'Surname0', 'LEE');\nawait selectDateById(driver, 'DOB0', '1954/01/01');\nawait setInputById(driver, 'SIN0', '123123127');\n        await selectComboById(driver, 'MaritalStatus0', 'Widowed');\n      //  await selectToggleById(driver, 'domchanged0', '0');\n       // await selectAgeDateById(driver, 'DOM0tp',Fed.TaxYear,'0', '/05/15');\n       // await driver.findElement(By.name('DOM0tp')).sendKeys(Key.TAB);\n       // await selectToggleById(driver, 'IsLinkedReturn0tp', '0');\n        await nextClick(driver);\nawait setInputById(driver, 'fullAdd0', '6464 Yonge St, North York, YT M2M 3X4, Canada');\nawait selectToggleById(driver, 'quesFP0', '0');\n        await selectToggleById(driver, 'quesPrinResi0', '0');\n        await selectToggleById(driver, 'bDisabled0tp', '1');\n        await nextClick(driver);\n        await selectTab(driver, 'Income');\n        await selectTab(driver, 'IncomeProfile');\n        await selectToggleById(driver, 'GovernmentPension0tp', '1');\n        await clickDivById(driver, 'T4AOS0tp');\nawait selectToggleById(driver, 'PensionFunds0tp', '1');\n        await clickDivById(driver, 'T4RSP0tp');\nawait nextClick(driver);\nawait setInputById(driver, 'T4AOASRecovery0tp', '2000');\n        await nextClick(driver);\n        await setInputById(driver, 'T4RSPBox180tp', '250000');\n        await selectToggleById(driver, 'T4RSPDedQue0tp', '1');\n       await setInputById(driver, 'T4RSPTransfer0tp', '250000');\n        await nextClick(driver);\n        savedForm = await getServerFile(driver);",
                            "err": {},
                            "uuid": "83a48d01-b5fa-4c45-ae13-5c466e490d34",
                            "parentUUID": "4628a8a8-a6a7-4d6d-8c91-0d6748490245",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "afterHooks": [
                        {
                            "title": "\"after all\" hook",
                            "fullTitle": "NetIncome_Line232_5--Override F23200 to be less than the sum of F54790, F53510, F55360 and F53590. Software must not allow.   //(TP 65 years old, Widow. T4OAS Box 20 =$ 2,000. T4RIF =Box 18 ($ 250,000). Did you receive this amount following the death of your spouse and transferred it to your RRSP/RIF? Enter = $ 250,000) \"after all\" hook",
                            "timedOut": false,
                            "duration": 1451,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "await logoutById(driver);\nawait driver.quit();",
                            "err": {},
                            "uuid": "e1c0fe76-9db1-40f7-879e-732ca6b5b788",
                            "parentUUID": "4628a8a8-a6a7-4d6d-8c91-0d6748490245",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "tests": [
                        {
                            "title": " F20800 should be  allowed with amount    allow.value ==undefined",
                            "fullTitle": "NetIncome_Line232_5--Override F23200 to be less than the sum of F54790, F53510, F55360 and F53590. Software must not allow.   //(TP 65 years old, Widow. T4OAS Box 20 =$ 2,000. T4RIF =Box 18 ($ 250,000). Did you receive this amount following the death of your spouse and transferred it to your RRSP/RIF? Enter = $ 250,000)  F20800 should be  allowed with amount    allow.value ==undefined",
                            "timedOut": false,
                            "duration": 1,
                            "state": "failed",
                            "speed": null,
                            "pass": false,
                            "fail": true,
                            "pending": false,
                            "context": null,
                            "code": "let otherDeductionsFeild = getFieldId('20800');\n\t\tlet   otherDeductions = savedForm[  otherDeductionsFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+ otherDeductions;\nassert.equal(   otherDeductions, '250000', ' Feild should be built');",
                            "err": {
                                "message": "AssertionError:  Feild should be built",
                                "estack": "AssertionError [ERR_ASSERTION]:  Feild should be built\n    at Context.<anonymous> (my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_Line232_5.js:57:16)\n    at processImmediate (internal/timers.js:456:21)",
                                "diff": null
                            },
                            "uuid": "52fd91cf-339a-475c-b94b-e4c8ee111043",
                            "parentUUID": "4628a8a8-a6a7-4d6d-8c91-0d6748490245",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F53510 should be  allowed with amount    allow.value ==2000",
                            "fullTitle": "NetIncome_Line232_5--Override F23200 to be less than the sum of F54790, F53510, F55360 and F53590. Software must not allow.   //(TP 65 years old, Widow. T4OAS Box 20 =$ 2,000. T4RIF =Box 18 ($ 250,000). Did you receive this amount following the death of your spouse and transferred it to your RRSP/RIF? Enter = $ 250,000)  F53510 should be  allowed with amount    allow.value ==2000",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let amountOfOASPensionRepaidFeild = getFieldId('53510');\n\t\tlet  amountOfOASPensionRepaid = savedForm[   amountOfOASPensionRepaidFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+  amountOfOASPensionRepaid;\nassert.equal(    amountOfOASPensionRepaid, '2000', ' Feild should be built');",
                            "err": {},
                            "uuid": "bb9689b4-60cc-4098-aeab-70f6c1177686",
                            "parentUUID": "4628a8a8-a6a7-4d6d-8c91-0d6748490245",
                            "isHook": false,
                            "skipped": false
                        }
                    ],
                    "suites": [],
                    "passes": [
                        "bb9689b4-60cc-4098-aeab-70f6c1177686"
                    ],
                    "failures": [
                        "52fd91cf-339a-475c-b94b-e4c8ee111043"
                    ],
                    "pending": [],
                    "skipped": [],
                    "duration": 1,
                    "root": false,
                    "rootEmpty": false,
                    "_timeout": 150000
                },
                {
                    "uuid": "fccd76a2-b0ad-49f6-af18-91f012f4f1ff",
                    "title": "TaxableIncome_Line232_6 Create a loss relating to F23200. F23600 must be a negative amount (if negative or zero, it will not build in .ws file). Ensure software requires an entry at F67820 and F67860, regardless of taxable income in the year and regardless if AMT applies.   //(Line23200 =$ 40,000. Caution message saying possible implications on fieldss 67820, 67830, 67840 and 67860.) ",
                    "fullFile": "E:\\Rita\\Taxtron\\WebTest\\my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_Line232_6.js",
                    "file": "\\my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_Line232_6.js",
                    "beforeHooks": [
                        {
                            "title": "\"before all\" hook",
                            "fullTitle": "TaxableIncome_Line232_6 Create a loss relating to F23200. F23600 must be a negative amount (if negative or zero, it will not build in .ws file). Ensure software requires an entry at F67820 and F67860, regardless of taxable income in the year and regardless if AMT applies.   //(Line23200 =$ 40,000. Caution message saying possible implications on fieldss 67820, 67830, 67840 and 67860.)  \"before all\" hook",
                            "timedOut": false,
                            "duration": 55464,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "driver = new Builder()\n\t.withCapabilities(Capabilities.chrome().setAcceptInsecureCerts(true))\n\t.build();\ndriver.manage().window().setRect({ width: 1366, height: 768 });\nawait login(driver, 'ritakumar@outlook.com', 'rishu12rashi');\nawait selectNewReturn(driver,province);\nawait switchToastOff(driver);\n        await setInputById(driver, 'Firstnames0', 'henry');\nawait setInputById(driver, 'Surname0', 'Farm');\nawait selectDateById(driver, 'DOB0', '1975/01/01');\nawait setInputById(driver, 'SIN0', '100000009');\nawait selectComboById(driver, 'MaritalStatus0', 'Single');\nawait nextClick(driver);\nawait addressExpandClick(driver, 'fullAdd');\nawait setInputById(driver, 'StreetNo0', '11');\nawait setInputById(driver, 'StreetName0', 'bn');\nawait setInputById(driver, 'City0', 'nb');\nawait selectComboById(driver, 'ProvinceOfRes0', 'Ontario');\n        await setInputById(driver, 'PCodeC0', 'L6Y3W4');\n       await selectToggleById(driver, 'quesFP0', '0');\nawait selectToggleById(driver, 'quesPrinResi0', '0');\nawait selectToggleById(driver, 'qCitizen0', '1');\nawait selectToggleById(driver, 'allowCra0', '1');\n        await nextClick(driver);\nawait selectTab(driver, 'Deduction');\n        await selectTab(driver, 'MiscDeductions');\nawait selectToggleById(driver, 'qaddDeductions0tp', '1');\n        await nextClick(driver);\n        await setInputById(driver, 'SupportLfees0tp', '40000');\n        await nextClick(driver);\n        await selectTab(driver, 'Review');\n        await selectTab(driver, 'Diags');\n        savedForm = await getServerFile(driver);",
                            "err": {},
                            "uuid": "f33e6bab-2d5d-42ad-8174-c4b8feb583ef",
                            "parentUUID": "fccd76a2-b0ad-49f6-af18-91f012f4f1ff",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "afterHooks": [
                        {
                            "title": "\"after all\" hook",
                            "fullTitle": "TaxableIncome_Line232_6 Create a loss relating to F23200. F23600 must be a negative amount (if negative or zero, it will not build in .ws file). Ensure software requires an entry at F67820 and F67860, regardless of taxable income in the year and regardless if AMT applies.   //(Line23200 =$ 40,000. Caution message saying possible implications on fieldss 67820, 67830, 67840 and 67860.)  \"after all\" hook",
                            "timedOut": false,
                            "duration": 1422,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "await logoutById(driver);\nawait driver.quit();",
                            "err": {},
                            "uuid": "86e6ceb3-aaf2-42b9-b9b4-87213c2a262f",
                            "parentUUID": "fccd76a2-b0ad-49f6-af18-91f012f4f1ff",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "tests": [
                        {
                            "title": "error should be display",
                            "fullTitle": "TaxableIncome_Line232_6 Create a loss relating to F23200. F23600 must be a negative amount (if negative or zero, it will not build in .ws file). Ensure software requires an entry at F67820 and F67860, regardless of taxable income in the year and regardless if AMT applies.   //(Line23200 =$ 40,000. Caution message saying possible implications on fieldss 67820, 67830, 67840 and 67860.)  error should be display",
                            "timedOut": false,
                            "duration": 51,
                            "state": "passed",
                            "speed": "medium",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let errDisplayed = await driver.findElement(By.css('#d59CNIL0')).isDisplayed();\nassert.strictEqual(errDisplayed, true, 'Deduction claimed on line 23200 or line 25100 may effect the calculation of CNIL amount.');",
                            "err": {},
                            "uuid": "149e3151-e3f6-46ff-9aeb-8394141814e8",
                            "parentUUID": "fccd76a2-b0ad-49f6-af18-91f012f4f1ff",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": "error should be display",
                            "fullTitle": "TaxableIncome_Line232_6 Create a loss relating to F23200. F23600 must be a negative amount (if negative or zero, it will not build in .ws file). Ensure software requires an entry at F67820 and F67860, regardless of taxable income in the year and regardless if AMT applies.   //(Line23200 =$ 40,000. Caution message saying possible implications on fieldss 67820, 67830, 67840 and 67860.)  error should be display",
                            "timedOut": false,
                            "duration": 50,
                            "state": "passed",
                            "speed": "medium",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let errDisplayed = await driver.findElement(By.css('#d345_67820')).isDisplayed();\nassert.strictEqual(errDisplayed, true, 'Your income may be subject to AMT.');",
                            "err": {},
                            "uuid": "5cd4e6a3-0144-4e10-9ba5-6602485f3831",
                            "parentUUID": "fccd76a2-b0ad-49f6-af18-91f012f4f1ff",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": "  F23200 Software must  allow.   allow.value ==40000",
                            "fullTitle": "TaxableIncome_Line232_6 Create a loss relating to F23200. F23600 must be a negative amount (if negative or zero, it will not build in .ws file). Ensure software requires an entry at F67820 and F67860, regardless of taxable income in the year and regardless if AMT applies.   //(Line23200 =$ 40,000. Caution message saying possible implications on fieldss 67820, 67830, 67840 and 67860.)    F23200 Software must  allow.   allow.value ==40000",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let taxableIncomeFeild = getFieldId('23200');\n\t\tlet taxableIncome = savedForm[taxableIncomeFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+taxableIncome;\nassert.strictEqual(taxableIncome , '40000','F23200 should be built .');",
                            "err": {},
                            "uuid": "79677c19-9583-49b0-b352-e48d777526a9",
                            "parentUUID": "fccd76a2-b0ad-49f6-af18-91f012f4f1ff",
                            "isHook": false,
                            "skipped": false
                        }
                    ],
                    "suites": [],
                    "passes": [
                        "149e3151-e3f6-46ff-9aeb-8394141814e8",
                        "5cd4e6a3-0144-4e10-9ba5-6602485f3831",
                        "79677c19-9583-49b0-b352-e48d777526a9"
                    ],
                    "failures": [],
                    "pending": [],
                    "skipped": [],
                    "duration": 101,
                    "root": false,
                    "rootEmpty": false,
                    "_timeout": 150000
                },
                {
                    "uuid": "b56ac0cc-6fab-4b39-98e1-82a90098ee3f",
                    "title": "NetIncome_Line235_1--Input F23500 (social benefits repayment) without amounts at any of F11300, F11700, F11900, F12500, F14600, F21300, F55360, or F23400 (net income before adjustments). Software must not allow.  //(TP =65 Years, T4 =Box 14 = $ 140,000,T4OAS: Box 18 =$ 5,900, Box 21 = $ 2,100, RC62 =Box 10 =$ 10,000, Box 12= $1,200, T4A = Box 131 =$ 1,310, Repayment of RDSP =$ 500 (Misc Deduction, Deductible amount of RDSP repayment), Box T4E, Box 14&15 =$ 1,500, Box 30 =$ 500, Box 7 =30%)",
                    "fullFile": "E:\\Rita\\Taxtron\\WebTest\\my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_Line235_1.js",
                    "file": "\\my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_Line235_1.js",
                    "beforeHooks": [
                        {
                            "title": "\"before all\" hook",
                            "fullTitle": "NetIncome_Line235_1--Input F23500 (social benefits repayment) without amounts at any of F11300, F11700, F11900, F12500, F14600, F21300, F55360, or F23400 (net income before adjustments). Software must not allow.  //(TP =65 Years, T4 =Box 14 = $ 140,000,T4OAS: Box 18 =$ 5,900, Box 21 = $ 2,100, RC62 =Box 10 =$ 10,000, Box 12= $1,200, T4A = Box 131 =$ 1,310, Repayment of RDSP =$ 500 (Misc Deduction, Deductible amount of RDSP repayment), Box T4E, Box 14&15 =$ 1,500, Box 30 =$ 500, Box 7 =30%) \"before all\" hook",
                            "timedOut": false,
                            "duration": 81469,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "driver = new Builder()\n\t.withCapabilities(Capabilities.chrome().setAcceptInsecureCerts(true))\n\t.build();\ndriver.manage().window().setRect({ width: 1366, height: 768 });\nawait login(driver, 'ritakumar@outlook.com', 'rishu12rashi');\nawait selectNewReturn(driver,province);\nawait switchToastOff(driver);\n        await setInputById(driver, 'Firstnames0', 'FEE');\nawait setInputById(driver, 'Surname0', 'LEE');\n\t    await selectAgeDateById(driver, 'DOB0tp',Fed.TaxYear,'66', '/05/15');\nawait setInputById(driver, 'SIN0', '123123127');\n        await selectComboById(driver, 'MaritalStatus0', 'Single');\n        await selectToggleById(driver, 'domchanged0', '0');\n        //await selectAgeDateById(driver, 'DOM0tp',Fed.TaxYear,'0', '/05/15');\n        //await driver.findElement(By.name('DOM0tp')).sendKeys(Key.TAB);\n        //await selectToggleById(driver, 'IsLinkedReturn0tp', '0');\n        await nextClick(driver);\nawait setInputById(driver, 'fullAdd0', '6464 Yonge St, North York, YT M2M 3X4, Canada');\nawait selectToggleById(driver, 'quesFP0', '0');\n        await selectToggleById(driver, 'quesPrinResi0', '0');\n        await selectToggleById(driver, 'bDisabled0tp', '0');\n        await nextClick(driver);\n        await selectTab(driver, 'Income');\n        await selectTab(driver, 'IncomeProfile');\n        await selectToggleById(driver, 'WorkedInYOR0tp', '1');\n        await clickDivById(driver, 'T40tp');\n        await clickDivById(driver, 'T4Aa');\n        await selectToggleById(driver, 'GovernmentPension0tp', '1');\n        await clickDivById(driver, 'T4AOS0tp');\nawait selectToggleById(driver, 'quesOtherIncome0tp', '1');\n        await clickDivById(driver, 'RC620tp');\n        await clickDivById(driver, 'T4E0tp');\n        await nextClick(driver);\n        await setInputById(driver, 'T4B140', '140000');\n        await selectComboById(driver, 'T4_Box100tp', 'ON');\n        await nextClick(driver);\n        await setInputById(driver, 'RC62BoxA0tp', '10000');\n        await setInputById(driver, 'RC62BoxB0tp', '1200');\n        await nextClick(driver);\n        await selectComboById(driver, 'T4AOtherCombo10tp', '131');\n        await setInputById(driver, 'T4AOtherBox10tp', '1310');\n        await nextClick(driver);\n        await setInputById(driver, 'T4E_20tp', '30');\n        await setInputById(driver, 'T4E_30tp', '1500');\n        await setInputById(driver, 'T4E_40tp', '1500');\n        await setInputById(driver, 'T4E300tp', '500');\n        await nextClick(driver);\n        await setInputById(driver, 'T4ANetOAS0tp', '5900');\n        await setInputById(driver, 'T4OASSupplement0tp', '2100');\n        await nextClick(driver);\n        await selectTab(driver, 'Deduction');\n        await selectTab(driver, 'MiscDeductions');\n        await selectToggleById(driver, 'qaddDeductions0tp', '1');\n        await nextClick(driver);\n         await setInputById(driver, 'RDSPpayment0tp', '500');\nawait nextClick(driver);\n        savedForm = await getServerFile(driver);",
                            "err": {},
                            "uuid": "a2e75b8b-911a-48a4-85ac-92e4388e8e58",
                            "parentUUID": "b56ac0cc-6fab-4b39-98e1-82a90098ee3f",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "afterHooks": [
                        {
                            "title": "\"after all\" hook",
                            "fullTitle": "NetIncome_Line235_1--Input F23500 (social benefits repayment) without amounts at any of F11300, F11700, F11900, F12500, F14600, F21300, F55360, or F23400 (net income before adjustments). Software must not allow.  //(TP =65 Years, T4 =Box 14 = $ 140,000,T4OAS: Box 18 =$ 5,900, Box 21 = $ 2,100, RC62 =Box 10 =$ 10,000, Box 12= $1,200, T4A = Box 131 =$ 1,310, Repayment of RDSP =$ 500 (Misc Deduction, Deductible amount of RDSP repayment), Box T4E, Box 14&15 =$ 1,500, Box 30 =$ 500, Box 7 =30%) \"after all\" hook",
                            "timedOut": false,
                            "duration": 5642,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "await logoutById(driver);\nawait driver.quit();",
                            "err": {},
                            "uuid": "5c9f1508-de9d-4e18-be00-eab58b2e47e8",
                            "parentUUID": "b56ac0cc-6fab-4b39-98e1-82a90098ee3f",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "tests": [
                        {
                            "title": " F10100 should be  allowed with amount    allow.value ==140000",
                            "fullTitle": "NetIncome_Line235_1--Input F23500 (social benefits repayment) without amounts at any of F11300, F11700, F11900, F12500, F14600, F21300, F55360, or F23400 (net income before adjustments). Software must not allow.  //(TP =65 Years, T4 =Box 14 = $ 140,000,T4OAS: Box 18 =$ 5,900, Box 21 = $ 2,100, RC62 =Box 10 =$ 10,000, Box 12= $1,200, T4A = Box 131 =$ 1,310, Repayment of RDSP =$ 500 (Misc Deduction, Deductible amount of RDSP repayment), Box T4E, Box 14&15 =$ 1,500, Box 30 =$ 500, Box 7 =30%)  F10100 should be  allowed with amount    allow.value ==140000",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let employmentIncomeFromT4SlipsFeild = getFieldId('10100');\n\t\tlet employmentIncomeFromT4Slips = savedForm[  employmentIncomeFromT4SlipsFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+ employmentIncomeFromT4Slips;\nassert.equal(   employmentIncomeFromT4Slips, '140000', ' Feild should be built');",
                            "err": {},
                            "uuid": "2766d0ce-3042-42ca-bd5e-615a628a87bd",
                            "parentUUID": "b56ac0cc-6fab-4b39-98e1-82a90098ee3f",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F11300 should be  allowed with amount    allow.value ==5900",
                            "fullTitle": "NetIncome_Line235_1--Input F23500 (social benefits repayment) without amounts at any of F11300, F11700, F11900, F12500, F14600, F21300, F55360, or F23400 (net income before adjustments). Software must not allow.  //(TP =65 Years, T4 =Box 14 = $ 140,000,T4OAS: Box 18 =$ 5,900, Box 21 = $ 2,100, RC62 =Box 10 =$ 10,000, Box 12= $1,200, T4A = Box 131 =$ 1,310, Repayment of RDSP =$ 500 (Misc Deduction, Deductible amount of RDSP repayment), Box T4E, Box 14&15 =$ 1,500, Box 30 =$ 500, Box 7 =30%)  F11300 should be  allowed with amount    allow.value ==5900",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let   oldAgeSecurityPensionFeild = getFieldId('11300');\n\t\tlet   oldAgeSecurityPension = savedForm[  oldAgeSecurityPensionFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+ oldAgeSecurityPension;\nassert.equal(  oldAgeSecurityPension, '5900', ' Feild should be built');",
                            "err": {},
                            "uuid": "820e754e-e4a6-40d5-b75d-c58e5c79db6d",
                            "parentUUID": "b56ac0cc-6fab-4b39-98e1-82a90098ee3f",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F14600 should be  allowed with amount    allow.value ==2100",
                            "fullTitle": "NetIncome_Line235_1--Input F23500 (social benefits repayment) without amounts at any of F11300, F11700, F11900, F12500, F14600, F21300, F55360, or F23400 (net income before adjustments). Software must not allow.  //(TP =65 Years, T4 =Box 14 = $ 140,000,T4OAS: Box 18 =$ 5,900, Box 21 = $ 2,100, RC62 =Box 10 =$ 10,000, Box 12= $1,200, T4A = Box 131 =$ 1,310, Repayment of RDSP =$ 500 (Misc Deduction, Deductible amount of RDSP repayment), Box T4E, Box 14&15 =$ 1,500, Box 30 =$ 500, Box 7 =30%)  F14600 should be  allowed with amount    allow.value ==2100",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let netFederalSupplementsFeild = getFieldId('14600');\n\t\tlet  netFederalSupplements = savedForm[ netFederalSupplementsFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+ netFederalSupplements;\nassert.equal( netFederalSupplements, '2100', ' Feild should be built');",
                            "err": {},
                            "uuid": "034e5a6d-4fc1-4a59-b069-31595b2d05ad",
                            "parentUUID": "b56ac0cc-6fab-4b39-98e1-82a90098ee3f",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F11700 should be  allowed with amount    allow.value ==10000",
                            "fullTitle": "NetIncome_Line235_1--Input F23500 (social benefits repayment) without amounts at any of F11300, F11700, F11900, F12500, F14600, F21300, F55360, or F23400 (net income before adjustments). Software must not allow.  //(TP =65 Years, T4 =Box 14 = $ 140,000,T4OAS: Box 18 =$ 5,900, Box 21 = $ 2,100, RC62 =Box 10 =$ 10,000, Box 12= $1,200, T4A = Box 131 =$ 1,310, Repayment of RDSP =$ 500 (Misc Deduction, Deductible amount of RDSP repayment), Box T4E, Box 14&15 =$ 1,500, Box 30 =$ 500, Box 7 =30%)  F11700 should be  allowed with amount    allow.value ==10000",
                            "timedOut": false,
                            "duration": 1,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let universalChildCareBenefitFeild = getFieldId('11700');\n\t\tlet   universalChildCareBenefit = savedForm[   universalChildCareBenefitFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+   universalChildCareBenefit;\nassert.equal(  universalChildCareBenefit, '10000', ' Feild should be built');",
                            "err": {},
                            "uuid": "1b0a1146-e7f4-4a0a-971a-3d214fc11e8c",
                            "parentUUID": "b56ac0cc-6fab-4b39-98e1-82a90098ee3f",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F21300 should be  allowed with amount    allow.value ==1200",
                            "fullTitle": "NetIncome_Line235_1--Input F23500 (social benefits repayment) without amounts at any of F11300, F11700, F11900, F12500, F14600, F21300, F55360, or F23400 (net income before adjustments). Software must not allow.  //(TP =65 Years, T4 =Box 14 = $ 140,000,T4OAS: Box 18 =$ 5,900, Box 21 = $ 2,100, RC62 =Box 10 =$ 10,000, Box 12= $1,200, T4A = Box 131 =$ 1,310, Repayment of RDSP =$ 500 (Misc Deduction, Deductible amount of RDSP repayment), Box T4E, Box 14&15 =$ 1,500, Box 30 =$ 500, Box 7 =30%)  F21300 should be  allowed with amount    allow.value ==1200",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let universalChildCareBenefitRepaymentFeild = getFieldId('21300');\n\t\tlet   universalChildCareBenefitRepayment = savedForm[  universalChildCareBenefitRepaymentFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+   universalChildCareBenefitRepayment;\nassert.equal(    universalChildCareBenefitRepayment, '1200', ' Feild should be built');",
                            "err": {},
                            "uuid": "1b8d2e80-2d37-4eed-912e-44f76a3871d4",
                            "parentUUID": "b56ac0cc-6fab-4b39-98e1-82a90098ee3f",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F12500 should be  allowed with amount    allow.value ==1310",
                            "fullTitle": "NetIncome_Line235_1--Input F23500 (social benefits repayment) without amounts at any of F11300, F11700, F11900, F12500, F14600, F21300, F55360, or F23400 (net income before adjustments). Software must not allow.  //(TP =65 Years, T4 =Box 14 = $ 140,000,T4OAS: Box 18 =$ 5,900, Box 21 = $ 2,100, RC62 =Box 10 =$ 10,000, Box 12= $1,200, T4A = Box 131 =$ 1,310, Repayment of RDSP =$ 500 (Misc Deduction, Deductible amount of RDSP repayment), Box T4E, Box 14&15 =$ 1,500, Box 30 =$ 500, Box 7 =30%)  F12500 should be  allowed with amount    allow.value ==1310",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let registeredDisabilitySavingsPlanRDSPIncomeFeild = getFieldId('12500');\n\t\tlet  registeredDisabilitySavingsPlanRDSPIncome = savedForm[    registeredDisabilitySavingsPlanRDSPIncomeFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+  registeredDisabilitySavingsPlanRDSPIncome;\nassert.equal(     registeredDisabilitySavingsPlanRDSPIncome, '1310', ' Feild should be built');",
                            "err": {},
                            "uuid": "9bd5767d-e117-43ff-a5d4-74b0b2ba0152",
                            "parentUUID": "b56ac0cc-6fab-4b39-98e1-82a90098ee3f",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F55360 should be  allowed with amount    allow.value ==500",
                            "fullTitle": "NetIncome_Line235_1--Input F23500 (social benefits repayment) without amounts at any of F11300, F11700, F11900, F12500, F14600, F21300, F55360, or F23400 (net income before adjustments). Software must not allow.  //(TP =65 Years, T4 =Box 14 = $ 140,000,T4OAS: Box 18 =$ 5,900, Box 21 = $ 2,100, RC62 =Box 10 =$ 10,000, Box 12= $1,200, T4A = Box 131 =$ 1,310, Repayment of RDSP =$ 500 (Misc Deduction, Deductible amount of RDSP repayment), Box T4E, Box 14&15 =$ 1,500, Box 30 =$ 500, Box 7 =30%)  F55360 should be  allowed with amount    allow.value ==500",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let rDSPRepaymentByTaxpayerFeild = getFieldId('55360');\n\t\tlet  rDSPRepaymentByTaxpayer = savedForm[ rDSPRepaymentByTaxpayerFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+ rDSPRepaymentByTaxpayer;\nassert.equal( rDSPRepaymentByTaxpayer, '500', ' Feild should be built');",
                            "err": {},
                            "uuid": "6cfea20b-af0f-42c3-b360-dd27a351f97a",
                            "parentUUID": "b56ac0cc-6fab-4b39-98e1-82a90098ee3f",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F11900 should be  allowed with amount    allow.value ==1500",
                            "fullTitle": "NetIncome_Line235_1--Input F23500 (social benefits repayment) without amounts at any of F11300, F11700, F11900, F12500, F14600, F21300, F55360, or F23400 (net income before adjustments). Software must not allow.  //(TP =65 Years, T4 =Box 14 = $ 140,000,T4OAS: Box 18 =$ 5,900, Box 21 = $ 2,100, RC62 =Box 10 =$ 10,000, Box 12= $1,200, T4A = Box 131 =$ 1,310, Repayment of RDSP =$ 500 (Misc Deduction, Deductible amount of RDSP repayment), Box T4E, Box 14&15 =$ 1,500, Box 30 =$ 500, Box 7 =30%)  F11900 should be  allowed with amount    allow.value ==1500",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let employmentInsuranceAndOtherBenefitsFeild = getFieldId('11900');\n\t\tlet  employmentInsuranceAndOtherBenefits = savedForm[ employmentInsuranceAndOtherBenefitsFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+ employmentInsuranceAndOtherBenefits;\nassert.equal(  employmentInsuranceAndOtherBenefits, '1500', ' Feild should be built');",
                            "err": {},
                            "uuid": "45bba400-bcec-4896-af8c-0703fae74231",
                            "parentUUID": "b56ac0cc-6fab-4b39-98e1-82a90098ee3f",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F23200 should be  allowed with amount    allow.value ==1000",
                            "fullTitle": "NetIncome_Line235_1--Input F23500 (social benefits repayment) without amounts at any of F11300, F11700, F11900, F12500, F14600, F21300, F55360, or F23400 (net income before adjustments). Software must not allow.  //(TP =65 Years, T4 =Box 14 = $ 140,000,T4OAS: Box 18 =$ 5,900, Box 21 = $ 2,100, RC62 =Box 10 =$ 10,000, Box 12= $1,200, T4A = Box 131 =$ 1,310, Repayment of RDSP =$ 500 (Misc Deduction, Deductible amount of RDSP repayment), Box T4E, Box 14&15 =$ 1,500, Box 30 =$ 500, Box 7 =30%)  F23200 should be  allowed with amount    allow.value ==1000",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let otherDeductionsFeild = getFieldId('23200');\n\t\tlet   otherDeductions = savedForm[  otherDeductionsFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+ otherDeductions;\nassert.equal(   otherDeductions, '1000', ' Feild should be built');",
                            "err": {},
                            "uuid": "11bf678a-0ba9-40af-b8c3-c25a89223e28",
                            "parentUUID": "b56ac0cc-6fab-4b39-98e1-82a90098ee3f",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F23500 should be  allowed with amount    allow.value ==undefined",
                            "fullTitle": "NetIncome_Line235_1--Input F23500 (social benefits repayment) without amounts at any of F11300, F11700, F11900, F12500, F14600, F21300, F55360, or F23400 (net income before adjustments). Software must not allow.  //(TP =65 Years, T4 =Box 14 = $ 140,000,T4OAS: Box 18 =$ 5,900, Box 21 = $ 2,100, RC62 =Box 10 =$ 10,000, Box 12= $1,200, T4A = Box 131 =$ 1,310, Repayment of RDSP =$ 500 (Misc Deduction, Deductible amount of RDSP repayment), Box T4E, Box 14&15 =$ 1,500, Box 30 =$ 500, Box 7 =30%)  F23500 should be  allowed with amount    allow.value ==undefined",
                            "timedOut": false,
                            "duration": 1,
                            "state": "failed",
                            "speed": null,
                            "pass": false,
                            "fail": true,
                            "pending": false,
                            "context": null,
                            "code": "let socialBenefitsRepaymentFeild = getFieldId('23500');\n\t\tlet  socialBenefitsRepayment = savedForm[ socialBenefitsRepaymentFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+ socialBenefitsRepayment;\nassert.equal( socialBenefitsRepayment, '830000', ' Feild should be built');",
                            "err": {
                                "message": "AssertionError:  Feild should be built",
                                "estack": "AssertionError [ERR_ASSERTION]:  Feild should be built\n    at Context.<anonymous> (my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_Line235_1.js:133:16)\n    at processImmediate (internal/timers.js:456:21)",
                                "diff": null
                            },
                            "uuid": "6d254fc4-0c7b-4f54-9341-07f38f2f7f70",
                            "parentUUID": "b56ac0cc-6fab-4b39-98e1-82a90098ee3f",
                            "isHook": false,
                            "skipped": false
                        }
                    ],
                    "suites": [],
                    "passes": [
                        "2766d0ce-3042-42ca-bd5e-615a628a87bd",
                        "820e754e-e4a6-40d5-b75d-c58e5c79db6d",
                        "034e5a6d-4fc1-4a59-b069-31595b2d05ad",
                        "1b0a1146-e7f4-4a0a-971a-3d214fc11e8c",
                        "1b8d2e80-2d37-4eed-912e-44f76a3871d4",
                        "9bd5767d-e117-43ff-a5d4-74b0b2ba0152",
                        "6cfea20b-af0f-42c3-b360-dd27a351f97a",
                        "45bba400-bcec-4896-af8c-0703fae74231",
                        "11bf678a-0ba9-40af-b8c3-c25a89223e28"
                    ],
                    "failures": [
                        "6d254fc4-0c7b-4f54-9341-07f38f2f7f70"
                    ],
                    "pending": [],
                    "skipped": [],
                    "duration": 2,
                    "root": false,
                    "rootEmpty": false,
                    "_timeout": 150000
                },
                {
                    "uuid": "84cdab0f-950b-42a7-aee1-726c48a69dc1",
                    "title": "NetIncome_Line235_2--Override F23500 (OAS repayment) to differ from the amount calculated based on income reported at F11300 (T4OAS slip) and F23400. Software must not allow.   //(TP =65 Years, T4 =Box 14 = $ 78,000,T4OAS: Box 18 =$ 5,900, Box 21 = $ 2,100, RC62 =Box 10 =$ 10,000, Box 12= $1,200, T4A = Box 131 =$ 1,310, Repayment of RDSP =$ 500 (Misc Deduction, Deductible amount of RDSP repayment), Box T4E, Box 14&15 =$ 1,500, Box 30 =$ 500)",
                    "fullFile": "E:\\Rita\\Taxtron\\WebTest\\my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_Line235_2.js",
                    "file": "\\my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_Line235_2.js",
                    "beforeHooks": [
                        {
                            "title": "\"before all\" hook",
                            "fullTitle": "NetIncome_Line235_2--Override F23500 (OAS repayment) to differ from the amount calculated based on income reported at F11300 (T4OAS slip) and F23400. Software must not allow.   //(TP =65 Years, T4 =Box 14 = $ 78,000,T4OAS: Box 18 =$ 5,900, Box 21 = $ 2,100, RC62 =Box 10 =$ 10,000, Box 12= $1,200, T4A = Box 131 =$ 1,310, Repayment of RDSP =$ 500 (Misc Deduction, Deductible amount of RDSP repayment), Box T4E, Box 14&15 =$ 1,500, Box 30 =$ 500) \"before all\" hook",
                            "timedOut": false,
                            "duration": 80036,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "driver = new Builder()\n\t.withCapabilities(Capabilities.chrome().setAcceptInsecureCerts(true))\n\t.build();\ndriver.manage().window().setRect({ width: 1366, height: 768 });\nawait login(driver, 'ritakumar@outlook.com', 'rishu12rashi');\nawait selectNewReturn(driver,province);\nawait switchToastOff(driver);\n        await setInputById(driver, 'Firstnames0', 'FEE');\nawait setInputById(driver, 'Surname0', 'LEE');\n\t    await selectAgeDateById(driver, 'DOB0tp',Fed.TaxYear,'66', '/05/15');\nawait setInputById(driver, 'SIN0', '123123127');\n        await selectComboById(driver, 'MaritalStatus0', 'Single');\n        await selectToggleById(driver, 'domchanged0', '0');\n        await nextClick(driver);\nawait setInputById(driver, 'fullAdd0', '6464 Yonge St, North York, YT M2M 3X4, Canada');\nawait selectToggleById(driver, 'quesFP0', '0');\n        await selectToggleById(driver, 'quesPrinResi0', '0');\n        await selectToggleById(driver, 'bDisabled0tp', '0');\n        await nextClick(driver);\n        await selectTab(driver, 'Income');\n        await selectTab(driver, 'IncomeProfile');\n        await selectToggleById(driver, 'WorkedInYOR0tp', '1');\n        await clickDivById(driver, 'T40tp');\n        await clickDivById(driver, 'T4Aa');\n        await selectToggleById(driver, 'GovernmentPension0tp', '1');\n        await clickDivById(driver, 'T4AOS0tp');\nawait selectToggleById(driver, 'quesOtherIncome0tp', '1');\n        await clickDivById(driver, 'RC620tp');\n        await clickDivById(driver, 'T4E0tp');\n        await nextClick(driver);\n        await setInputById(driver, 'T4B140', '78000');\n        await selectComboById(driver, 'T4_Box100tp', 'ON');\n        await nextClick(driver);\n        await setInputById(driver, 'RC62BoxA0tp', '10000');\n        await setInputById(driver, 'RC62BoxB0tp', '1200');\n        await nextClick(driver);\n        await selectComboById(driver, 'T4AOtherCombo10tp', '131');\n        await setInputById(driver, 'T4AOtherBox10tp', '1310');\n        await nextClick(driver);\n        await setInputById(driver, 'T4E_20tp', '30');\n        await setInputById(driver, 'T4E_30tp', '1500');\n        await setInputById(driver, 'T4E_40tp', '1500');\n        await setInputById(driver, 'T4E300tp', '500');\n        await nextClick(driver);\n        await setInputById(driver, 'T4ANetOAS0tp', '5900');\n        await setInputById(driver, 'T4OASSupplement0tp', '2100');\n        await nextClick(driver);\n        await selectTab(driver, 'Deduction');\n        await selectTab(driver, 'MiscDeductions');\n        await selectToggleById(driver, 'qaddDeductions0tp', '1');\n        await nextClick(driver);\n         await setInputById(driver, 'RDSPpayment0tp', '500');\nawait nextClick(driver);\n        savedForm = await getServerFile(driver);",
                            "err": {},
                            "uuid": "4b58a663-1c1c-4102-a2e0-ad4c74485046",
                            "parentUUID": "84cdab0f-950b-42a7-aee1-726c48a69dc1",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "afterHooks": [],
                    "tests": [
                        {
                            "title": " F10100 should be  allowed with amount    allow.value ==78000",
                            "fullTitle": "NetIncome_Line235_2--Override F23500 (OAS repayment) to differ from the amount calculated based on income reported at F11300 (T4OAS slip) and F23400. Software must not allow.   //(TP =65 Years, T4 =Box 14 = $ 78,000,T4OAS: Box 18 =$ 5,900, Box 21 = $ 2,100, RC62 =Box 10 =$ 10,000, Box 12= $1,200, T4A = Box 131 =$ 1,310, Repayment of RDSP =$ 500 (Misc Deduction, Deductible amount of RDSP repayment), Box T4E, Box 14&15 =$ 1,500, Box 30 =$ 500)  F10100 should be  allowed with amount    allow.value ==78000",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let employmentIncomeFromT4SlipsFeild = getFieldId('10100');\n\t\tlet employmentIncomeFromT4Slips = savedForm[  employmentIncomeFromT4SlipsFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+ employmentIncomeFromT4Slips;\nassert.equal(   employmentIncomeFromT4Slips, '78000', ' Feild should be built');",
                            "err": {},
                            "uuid": "53f421c2-d7ac-4f6d-8843-bd80e80f2448",
                            "parentUUID": "84cdab0f-950b-42a7-aee1-726c48a69dc1",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F11300 should be  allowed with amount    allow.value ==5900",
                            "fullTitle": "NetIncome_Line235_2--Override F23500 (OAS repayment) to differ from the amount calculated based on income reported at F11300 (T4OAS slip) and F23400. Software must not allow.   //(TP =65 Years, T4 =Box 14 = $ 78,000,T4OAS: Box 18 =$ 5,900, Box 21 = $ 2,100, RC62 =Box 10 =$ 10,000, Box 12= $1,200, T4A = Box 131 =$ 1,310, Repayment of RDSP =$ 500 (Misc Deduction, Deductible amount of RDSP repayment), Box T4E, Box 14&15 =$ 1,500, Box 30 =$ 500)  F11300 should be  allowed with amount    allow.value ==5900",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let   oldAgeSecurityPensionFeild = getFieldId('11300');\n\t\tlet   oldAgeSecurityPension = savedForm[  oldAgeSecurityPensionFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+ oldAgeSecurityPension;\nassert.equal(  oldAgeSecurityPension, '5900', ' Feild should be built');",
                            "err": {},
                            "uuid": "5fe20468-e916-46b3-bb58-6b23a64dd025",
                            "parentUUID": "84cdab0f-950b-42a7-aee1-726c48a69dc1",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F14600 should be  allowed with amount    allow.value ==2100",
                            "fullTitle": "NetIncome_Line235_2--Override F23500 (OAS repayment) to differ from the amount calculated based on income reported at F11300 (T4OAS slip) and F23400. Software must not allow.   //(TP =65 Years, T4 =Box 14 = $ 78,000,T4OAS: Box 18 =$ 5,900, Box 21 = $ 2,100, RC62 =Box 10 =$ 10,000, Box 12= $1,200, T4A = Box 131 =$ 1,310, Repayment of RDSP =$ 500 (Misc Deduction, Deductible amount of RDSP repayment), Box T4E, Box 14&15 =$ 1,500, Box 30 =$ 500)  F14600 should be  allowed with amount    allow.value ==2100",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let netFederalSupplementsFeild = getFieldId('14600');\n\t\tlet  netFederalSupplements = savedForm[ netFederalSupplementsFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+ netFederalSupplements;\nassert.equal( netFederalSupplements, '2100', ' Feild should be built');",
                            "err": {},
                            "uuid": "f929496c-d09a-4044-a97d-73423f9eafe8",
                            "parentUUID": "84cdab0f-950b-42a7-aee1-726c48a69dc1",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F25000 should be  allowed with amount    allow.value ==2100",
                            "fullTitle": "NetIncome_Line235_2--Override F23500 (OAS repayment) to differ from the amount calculated based on income reported at F11300 (T4OAS slip) and F23400. Software must not allow.   //(TP =65 Years, T4 =Box 14 = $ 78,000,T4OAS: Box 18 =$ 5,900, Box 21 = $ 2,100, RC62 =Box 10 =$ 10,000, Box 12= $1,200, T4A = Box 131 =$ 1,310, Repayment of RDSP =$ 500 (Misc Deduction, Deductible amount of RDSP repayment), Box T4E, Box 14&15 =$ 1,500, Box 30 =$ 500)  F25000 should be  allowed with amount    allow.value ==2100",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let otherPaymentsDeductionFeild = getFieldId('25000');\n\t\tlet otherPaymentsDeduction = savedForm[ otherPaymentsDeductionFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+ otherPaymentsDeduction;\nassert.equal(  otherPaymentsDeduction, '2100', ' Feild should be built');",
                            "err": {},
                            "uuid": "9fd3a76a-ba0f-469a-ac79-f83664b14bc8",
                            "parentUUID": "84cdab0f-950b-42a7-aee1-726c48a69dc1",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F11700 should be  allowed with amount    allow.value ==10000",
                            "fullTitle": "NetIncome_Line235_2--Override F23500 (OAS repayment) to differ from the amount calculated based on income reported at F11300 (T4OAS slip) and F23400. Software must not allow.   //(TP =65 Years, T4 =Box 14 = $ 78,000,T4OAS: Box 18 =$ 5,900, Box 21 = $ 2,100, RC62 =Box 10 =$ 10,000, Box 12= $1,200, T4A = Box 131 =$ 1,310, Repayment of RDSP =$ 500 (Misc Deduction, Deductible amount of RDSP repayment), Box T4E, Box 14&15 =$ 1,500, Box 30 =$ 500)  F11700 should be  allowed with amount    allow.value ==10000",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let universalChildCareBenefitFeild = getFieldId('11700');\n\t\tlet   universalChildCareBenefit = savedForm[   universalChildCareBenefitFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+   universalChildCareBenefit;\nassert.equal(  universalChildCareBenefit, '10000', ' Feild should be built');",
                            "err": {},
                            "uuid": "ab957fcb-88c0-4b49-a18c-61d773c6b99e",
                            "parentUUID": "84cdab0f-950b-42a7-aee1-726c48a69dc1",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F21300 should be  allowed with amount    allow.value ==1200",
                            "fullTitle": "NetIncome_Line235_2--Override F23500 (OAS repayment) to differ from the amount calculated based on income reported at F11300 (T4OAS slip) and F23400. Software must not allow.   //(TP =65 Years, T4 =Box 14 = $ 78,000,T4OAS: Box 18 =$ 5,900, Box 21 = $ 2,100, RC62 =Box 10 =$ 10,000, Box 12= $1,200, T4A = Box 131 =$ 1,310, Repayment of RDSP =$ 500 (Misc Deduction, Deductible amount of RDSP repayment), Box T4E, Box 14&15 =$ 1,500, Box 30 =$ 500)  F21300 should be  allowed with amount    allow.value ==1200",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let universalChildCareBenefitRepaymentFeild = getFieldId('21300');\n\t\tlet   universalChildCareBenefitRepayment = savedForm[  universalChildCareBenefitRepaymentFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+   universalChildCareBenefitRepayment;\nassert.equal(    universalChildCareBenefitRepayment, '1200', ' Feild should be built');",
                            "err": {},
                            "uuid": "d48fa190-5c7d-4887-9817-46410cc91c2d",
                            "parentUUID": "84cdab0f-950b-42a7-aee1-726c48a69dc1",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F12500 should be  allowed with amount    allow.value ==1310",
                            "fullTitle": "NetIncome_Line235_2--Override F23500 (OAS repayment) to differ from the amount calculated based on income reported at F11300 (T4OAS slip) and F23400. Software must not allow.   //(TP =65 Years, T4 =Box 14 = $ 78,000,T4OAS: Box 18 =$ 5,900, Box 21 = $ 2,100, RC62 =Box 10 =$ 10,000, Box 12= $1,200, T4A = Box 131 =$ 1,310, Repayment of RDSP =$ 500 (Misc Deduction, Deductible amount of RDSP repayment), Box T4E, Box 14&15 =$ 1,500, Box 30 =$ 500)  F12500 should be  allowed with amount    allow.value ==1310",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let registeredDisabilitySavingsPlanRDSPIncomeFeild = getFieldId('12500');\n\t\tlet  registeredDisabilitySavingsPlanRDSPIncome = savedForm[    registeredDisabilitySavingsPlanRDSPIncomeFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+  registeredDisabilitySavingsPlanRDSPIncome;\nassert.equal(     registeredDisabilitySavingsPlanRDSPIncome, '1310', ' Feild should be built');",
                            "err": {},
                            "uuid": "b6ae875b-3221-4a67-bb7c-d00ecbaf39b3",
                            "parentUUID": "84cdab0f-950b-42a7-aee1-726c48a69dc1",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F55360 should be  allowed with amount    allow.value ==500",
                            "fullTitle": "NetIncome_Line235_2--Override F23500 (OAS repayment) to differ from the amount calculated based on income reported at F11300 (T4OAS slip) and F23400. Software must not allow.   //(TP =65 Years, T4 =Box 14 = $ 78,000,T4OAS: Box 18 =$ 5,900, Box 21 = $ 2,100, RC62 =Box 10 =$ 10,000, Box 12= $1,200, T4A = Box 131 =$ 1,310, Repayment of RDSP =$ 500 (Misc Deduction, Deductible amount of RDSP repayment), Box T4E, Box 14&15 =$ 1,500, Box 30 =$ 500)  F55360 should be  allowed with amount    allow.value ==500",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let rDSPRepaymentByTaxpayerFeild = getFieldId('55360');\n\t\tlet  rDSPRepaymentByTaxpayer = savedForm[ rDSPRepaymentByTaxpayerFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+ rDSPRepaymentByTaxpayer;\nassert.equal( rDSPRepaymentByTaxpayer, '500', ' Feild should be built');",
                            "err": {},
                            "uuid": "03412e5d-a1b7-49e2-933e-4c6389726e9c",
                            "parentUUID": "84cdab0f-950b-42a7-aee1-726c48a69dc1",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F11900 should be  allowed with amount    allow.value ==1500",
                            "fullTitle": "NetIncome_Line235_2--Override F23500 (OAS repayment) to differ from the amount calculated based on income reported at F11300 (T4OAS slip) and F23400. Software must not allow.   //(TP =65 Years, T4 =Box 14 = $ 78,000,T4OAS: Box 18 =$ 5,900, Box 21 = $ 2,100, RC62 =Box 10 =$ 10,000, Box 12= $1,200, T4A = Box 131 =$ 1,310, Repayment of RDSP =$ 500 (Misc Deduction, Deductible amount of RDSP repayment), Box T4E, Box 14&15 =$ 1,500, Box 30 =$ 500)  F11900 should be  allowed with amount    allow.value ==1500",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let employmentInsuranceAndOtherBenefitsFeild = getFieldId('11900');\n\t\tlet  employmentInsuranceAndOtherBenefits = savedForm[ employmentInsuranceAndOtherBenefitsFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+ employmentInsuranceAndOtherBenefits;\nassert.equal(  employmentInsuranceAndOtherBenefits, '1500', ' Feild should be built');",
                            "err": {},
                            "uuid": "eba97a54-d7fd-4570-b480-a45a50f201dc",
                            "parentUUID": "84cdab0f-950b-42a7-aee1-726c48a69dc1",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F23200 should be  allowed with amount    allow.value ==1000",
                            "fullTitle": "NetIncome_Line235_2--Override F23500 (OAS repayment) to differ from the amount calculated based on income reported at F11300 (T4OAS slip) and F23400. Software must not allow.   //(TP =65 Years, T4 =Box 14 = $ 78,000,T4OAS: Box 18 =$ 5,900, Box 21 = $ 2,100, RC62 =Box 10 =$ 10,000, Box 12= $1,200, T4A = Box 131 =$ 1,310, Repayment of RDSP =$ 500 (Misc Deduction, Deductible amount of RDSP repayment), Box T4E, Box 14&15 =$ 1,500, Box 30 =$ 500)  F23200 should be  allowed with amount    allow.value ==1000",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let otherDeductionsFeild = getFieldId('23200');\n\t\tlet   otherDeductions = savedForm[  otherDeductionsFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+ otherDeductions;\nassert.equal(   otherDeductions, '1000', ' Feild should be built');",
                            "err": {},
                            "uuid": "a252ef75-795e-4f86-85c8-7630401aaf74",
                            "parentUUID": "84cdab0f-950b-42a7-aee1-726c48a69dc1",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F23500 should be  allowed with amount    allow.value ==undefined",
                            "fullTitle": "NetIncome_Line235_2--Override F23500 (OAS repayment) to differ from the amount calculated based on income reported at F11300 (T4OAS slip) and F23400. Software must not allow.   //(TP =65 Years, T4 =Box 14 = $ 78,000,T4OAS: Box 18 =$ 5,900, Box 21 = $ 2,100, RC62 =Box 10 =$ 10,000, Box 12= $1,200, T4A = Box 131 =$ 1,310, Repayment of RDSP =$ 500 (Misc Deduction, Deductible amount of RDSP repayment), Box T4E, Box 14&15 =$ 1,500, Box 30 =$ 500)  F23500 should be  allowed with amount    allow.value ==undefined",
                            "timedOut": false,
                            "duration": 0,
                            "state": "failed",
                            "speed": null,
                            "pass": false,
                            "fail": true,
                            "pending": false,
                            "context": null,
                            "code": "let socialBenefitsRepaymentFeild = getFieldId('23500');\n\t\tlet  socialBenefitsRepayment = savedForm[ socialBenefitsRepaymentFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+ socialBenefitsRepayment;\nassert.equal( socialBenefitsRepayment, '166800', ' Feild should be built');",
                            "err": {
                                "message": "AssertionError:  Feild should be built",
                                "estack": "AssertionError [ERR_ASSERTION]:  Feild should be built\n    at Context.<anonymous> (my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_Line235_2.js:137:16)\n    at processImmediate (internal/timers.js:456:21)",
                                "diff": null
                            },
                            "uuid": "f472bfbf-8b7a-4415-8bed-7cd27745f549",
                            "parentUUID": "84cdab0f-950b-42a7-aee1-726c48a69dc1",
                            "isHook": false,
                            "skipped": false
                        }
                    ],
                    "suites": [],
                    "passes": [
                        "53f421c2-d7ac-4f6d-8843-bd80e80f2448",
                        "5fe20468-e916-46b3-bb58-6b23a64dd025",
                        "f929496c-d09a-4044-a97d-73423f9eafe8",
                        "9fd3a76a-ba0f-469a-ac79-f83664b14bc8",
                        "ab957fcb-88c0-4b49-a18c-61d773c6b99e",
                        "d48fa190-5c7d-4887-9817-46410cc91c2d",
                        "b6ae875b-3221-4a67-bb7c-d00ecbaf39b3",
                        "03412e5d-a1b7-49e2-933e-4c6389726e9c",
                        "eba97a54-d7fd-4570-b480-a45a50f201dc",
                        "a252ef75-795e-4f86-85c8-7630401aaf74"
                    ],
                    "failures": [
                        "f472bfbf-8b7a-4415-8bed-7cd27745f549"
                    ],
                    "pending": [],
                    "skipped": [],
                    "duration": 0,
                    "root": false,
                    "rootEmpty": false,
                    "_timeout": 150000
                },
                {
                    "uuid": "ebb99b2a-cca4-4a80-99f8-cbf4b6775f35",
                    "title": "NetIncome_Line235_3--Override F23500 (OAS repayment) to differ from the amount calculated based on income reported at F11300 (T4OAS slip) and F23400. Software must not allow.   //(TP =65 Years, Date of death =August 31, Current year. T4 =Box 14 = $ 78,000,T4OAS: Box 18 =$ 5,900, Box 21 = $ 2,100, RC62 =Box 10 =$ 10,000, Box 12= $1,200, T4A = Box 131 =$ 1,310, Repayment of RDSP =$ 500 (Misc Deduction, Deductible amount of RDSP repayment), Box T4E, Box 14&15 =$ 1,500, Box 30 =$ 500. S3 shares ,Did you receive investment income, sold shares, or property or claiming reserves?, Did you sell shares or property? =Yes, Did you sell shares or mutual funds? =Yes. Summary of Disposition-Section 3 , Enter Adjusted cost base =$ 40,000)",
                    "fullFile": "E:\\Rita\\Taxtron\\WebTest\\my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_Line235_3.js",
                    "file": "\\my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_Line235_3.js",
                    "beforeHooks": [
                        {
                            "title": "\"before all\" hook",
                            "fullTitle": "NetIncome_Line235_3--Override F23500 (OAS repayment) to differ from the amount calculated based on income reported at F11300 (T4OAS slip) and F23400. Software must not allow.   //(TP =65 Years, Date of death =August 31, Current year. T4 =Box 14 = $ 78,000,T4OAS: Box 18 =$ 5,900, Box 21 = $ 2,100, RC62 =Box 10 =$ 10,000, Box 12= $1,200, T4A = Box 131 =$ 1,310, Repayment of RDSP =$ 500 (Misc Deduction, Deductible amount of RDSP repayment), Box T4E, Box 14&15 =$ 1,500, Box 30 =$ 500. S3 shares ,Did you receive investment income, sold shares, or property or claiming reserves?, Did you sell shares or property? =Yes, Did you sell shares or mutual funds? =Yes. Summary of Disposition-Section 3 , Enter Adjusted cost base =$ 40,000) \"before all\" hook",
                            "timedOut": false,
                            "duration": 85590,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "driver = new Builder()\n\t.withCapabilities(Capabilities.chrome().setAcceptInsecureCerts(true))\n\t.build();\ndriver.manage().window().setRect({ width: 1366, height: 768 });\nawait login(driver, 'ritakumar@outlook.com', 'rishu12rashi');\nawait selectNewReturn(driver,province);\nawait switchToastOff(driver);\n        await setInputById(driver, 'Firstnames0', 'FEE');\nawait setInputById(driver, 'Surname0', 'LEE');\n\t    await selectAgeDateById(driver, 'DOB0tp',Fed.TaxYear,'66', '/05/15');\nawait setInputById(driver, 'SIN0', '123123127');\n        await selectComboById(driver, 'MaritalStatus0', 'Single');\n        await selectToggleById(driver, 'domchanged0', '0');\n     \n        await nextClick(driver);\nawait setInputById(driver, 'fullAdd0', '6464 Yonge St, North York, YT M2M 3X4, Canada');\nawait selectToggleById(driver, 'quesFP0', '0');\n        await selectToggleById(driver, 'quesPrinResi0', '0');\n        await selectToggleById(driver, 'bDeceased0tp', '1');\n        await selectAgeDateById(driver, 'DeceasedDate0tp',Fed.TaxYear,'0','/08/31');\n        await nextClick(driver);\n        await selectTab(driver, 'Income');\n        await selectTab(driver, 'IncomeProfile');\n        await selectToggleById(driver, 'WorkedInYOR0tp', '1');\n        await clickDivById(driver, 'T40tp');\n        await clickDivById(driver, 'T4Aa');\n        await selectToggleById(driver, 'GovernmentPension0tp', '1');\n        await clickDivById(driver, 'T4AOS0tp');\n        await selectToggleById(driver, 'InvestmentIncome0tp', '1');\n        await selectToggleById(driver, 'StocksAndProperty0tp', '1');\nawait selectToggleById(driver, 'quesOtherIncome0tp', '1');\n        await clickDivById(driver, 'RC620tp');\n        await clickDivById(driver, 'T4E0tp');\n        await nextClick(driver);\n        await selectToggleById(driver, 'S3_Shares0tp', '1');\n        await nextClick(driver);\n        await setInputById(driver, 'T4B140', '78000');\n        await selectComboById(driver, 'T4_Box100tp', 'ON');\n        await nextClick(driver);\n        await setInputById(driver, 'RC62BoxA0tp', '10000');\n        await setInputById(driver, 'RC62BoxB0tp', '1200');\n        await nextClick(driver);\n        await selectComboById(driver, 'T4AOtherCombo10tp', '131');\n        await setInputById(driver, 'T4AOtherBox10tp', '1310');\n        await nextClick(driver);\n        await setInputById(driver, 'T4E_20tp', '30');\n        await setInputById(driver, 'T4E_30tp', '1500');\n        await setInputById(driver, 'T4E_40tp', '1500');\n        await setInputById(driver, 'T4E300tp', '500');\n        await nextClick(driver);\n        await setInputById(driver, 'T4ANetOAS0tp', '5900');\n        await setInputById(driver, 'T4OASSupplement0tp', '2100');\n        await nextClick(driver);\n        await setInputById(driver, 'S3_Shares_Cost0tp', '40000');\n        await nextClick(driver);\n        await selectTab(driver, 'Deduction');\n        await selectTab(driver, 'MiscDeductions');\n        await selectToggleById(driver, 'qaddDeductions0tp', '1');\n        await nextClick(driver);\n        await setInputById(driver, 'RDSPpayment0tp', '500');\nawait nextClick(driver);\n        savedForm = await getServerFile(driver);",
                            "err": {},
                            "uuid": "1a1e9838-f9b1-47e4-b455-a00f59fc3d73",
                            "parentUUID": "ebb99b2a-cca4-4a80-99f8-cbf4b6775f35",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "afterHooks": [],
                    "tests": [
                        {
                            "title": " F10100 should be  allowed with amount    allow.value ==78000",
                            "fullTitle": "NetIncome_Line235_3--Override F23500 (OAS repayment) to differ from the amount calculated based on income reported at F11300 (T4OAS slip) and F23400. Software must not allow.   //(TP =65 Years, Date of death =August 31, Current year. T4 =Box 14 = $ 78,000,T4OAS: Box 18 =$ 5,900, Box 21 = $ 2,100, RC62 =Box 10 =$ 10,000, Box 12= $1,200, T4A = Box 131 =$ 1,310, Repayment of RDSP =$ 500 (Misc Deduction, Deductible amount of RDSP repayment), Box T4E, Box 14&15 =$ 1,500, Box 30 =$ 500. S3 shares ,Did you receive investment income, sold shares, or property or claiming reserves?, Did you sell shares or property? =Yes, Did you sell shares or mutual funds? =Yes. Summary of Disposition-Section 3 , Enter Adjusted cost base =$ 40,000)  F10100 should be  allowed with amount    allow.value ==78000",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let employmentIncomeFromT4SlipsFeild = getFieldId('10100');\n\t\tlet employmentIncomeFromT4Slips = savedForm[  employmentIncomeFromT4SlipsFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+ employmentIncomeFromT4Slips;\nassert.equal(   employmentIncomeFromT4Slips, '78000', ' Feild should be built');",
                            "err": {},
                            "uuid": "60897b67-d20b-4db9-bdfa-e4616bd1ed0e",
                            "parentUUID": "ebb99b2a-cca4-4a80-99f8-cbf4b6775f35",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F11300 should be  allowed with amount    allow.value ==5900",
                            "fullTitle": "NetIncome_Line235_3--Override F23500 (OAS repayment) to differ from the amount calculated based on income reported at F11300 (T4OAS slip) and F23400. Software must not allow.   //(TP =65 Years, Date of death =August 31, Current year. T4 =Box 14 = $ 78,000,T4OAS: Box 18 =$ 5,900, Box 21 = $ 2,100, RC62 =Box 10 =$ 10,000, Box 12= $1,200, T4A = Box 131 =$ 1,310, Repayment of RDSP =$ 500 (Misc Deduction, Deductible amount of RDSP repayment), Box T4E, Box 14&15 =$ 1,500, Box 30 =$ 500. S3 shares ,Did you receive investment income, sold shares, or property or claiming reserves?, Did you sell shares or property? =Yes, Did you sell shares or mutual funds? =Yes. Summary of Disposition-Section 3 , Enter Adjusted cost base =$ 40,000)  F11300 should be  allowed with amount    allow.value ==5900",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let   oldAgeSecurityPensionFeild = getFieldId('11300');\n\t\tlet   oldAgeSecurityPension = savedForm[  oldAgeSecurityPensionFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+ oldAgeSecurityPension;\nassert.equal(  oldAgeSecurityPension, '5900', ' Feild should be built');",
                            "err": {},
                            "uuid": "86e3ca91-962c-467d-bb3c-48e9265683fc",
                            "parentUUID": "ebb99b2a-cca4-4a80-99f8-cbf4b6775f35",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F14600 should be  allowed with amount    allow.value ==2100",
                            "fullTitle": "NetIncome_Line235_3--Override F23500 (OAS repayment) to differ from the amount calculated based on income reported at F11300 (T4OAS slip) and F23400. Software must not allow.   //(TP =65 Years, Date of death =August 31, Current year. T4 =Box 14 = $ 78,000,T4OAS: Box 18 =$ 5,900, Box 21 = $ 2,100, RC62 =Box 10 =$ 10,000, Box 12= $1,200, T4A = Box 131 =$ 1,310, Repayment of RDSP =$ 500 (Misc Deduction, Deductible amount of RDSP repayment), Box T4E, Box 14&15 =$ 1,500, Box 30 =$ 500. S3 shares ,Did you receive investment income, sold shares, or property or claiming reserves?, Did you sell shares or property? =Yes, Did you sell shares or mutual funds? =Yes. Summary of Disposition-Section 3 , Enter Adjusted cost base =$ 40,000)  F14600 should be  allowed with amount    allow.value ==2100",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let netFederalSupplementsFeild = getFieldId('14600');\n\t\tlet  netFederalSupplements = savedForm[ netFederalSupplementsFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+ netFederalSupplements;\nassert.equal( netFederalSupplements, '2100', ' Feild should be built');",
                            "err": {},
                            "uuid": "7e27ca67-4939-495b-8885-552df8dc07c0",
                            "parentUUID": "ebb99b2a-cca4-4a80-99f8-cbf4b6775f35",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F25000 should be  allowed with amount    allow.value ==2100",
                            "fullTitle": "NetIncome_Line235_3--Override F23500 (OAS repayment) to differ from the amount calculated based on income reported at F11300 (T4OAS slip) and F23400. Software must not allow.   //(TP =65 Years, Date of death =August 31, Current year. T4 =Box 14 = $ 78,000,T4OAS: Box 18 =$ 5,900, Box 21 = $ 2,100, RC62 =Box 10 =$ 10,000, Box 12= $1,200, T4A = Box 131 =$ 1,310, Repayment of RDSP =$ 500 (Misc Deduction, Deductible amount of RDSP repayment), Box T4E, Box 14&15 =$ 1,500, Box 30 =$ 500. S3 shares ,Did you receive investment income, sold shares, or property or claiming reserves?, Did you sell shares or property? =Yes, Did you sell shares or mutual funds? =Yes. Summary of Disposition-Section 3 , Enter Adjusted cost base =$ 40,000)  F25000 should be  allowed with amount    allow.value ==2100",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let otherPaymentsDeductionFeild = getFieldId('25000');\n\t\tlet otherPaymentsDeduction = savedForm[ otherPaymentsDeductionFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+ otherPaymentsDeduction;\nassert.equal(  otherPaymentsDeduction, '2100', ' Feild should be built');",
                            "err": {},
                            "uuid": "7e55bce5-add9-4a1e-8b8d-18641d62f7fc",
                            "parentUUID": "ebb99b2a-cca4-4a80-99f8-cbf4b6775f35",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F11700 should be  allowed with amount    allow.value ==10000",
                            "fullTitle": "NetIncome_Line235_3--Override F23500 (OAS repayment) to differ from the amount calculated based on income reported at F11300 (T4OAS slip) and F23400. Software must not allow.   //(TP =65 Years, Date of death =August 31, Current year. T4 =Box 14 = $ 78,000,T4OAS: Box 18 =$ 5,900, Box 21 = $ 2,100, RC62 =Box 10 =$ 10,000, Box 12= $1,200, T4A = Box 131 =$ 1,310, Repayment of RDSP =$ 500 (Misc Deduction, Deductible amount of RDSP repayment), Box T4E, Box 14&15 =$ 1,500, Box 30 =$ 500. S3 shares ,Did you receive investment income, sold shares, or property or claiming reserves?, Did you sell shares or property? =Yes, Did you sell shares or mutual funds? =Yes. Summary of Disposition-Section 3 , Enter Adjusted cost base =$ 40,000)  F11700 should be  allowed with amount    allow.value ==10000",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let universalChildCareBenefitFeild = getFieldId('11700');\n\t\tlet   universalChildCareBenefit = savedForm[   universalChildCareBenefitFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+   universalChildCareBenefit;\nassert.equal(  universalChildCareBenefit, '10000', ' Feild should be built');",
                            "err": {},
                            "uuid": "92aca376-235f-40f3-a59b-95e02aa799e3",
                            "parentUUID": "ebb99b2a-cca4-4a80-99f8-cbf4b6775f35",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F21300 should be  allowed with amount    allow.value ==1200",
                            "fullTitle": "NetIncome_Line235_3--Override F23500 (OAS repayment) to differ from the amount calculated based on income reported at F11300 (T4OAS slip) and F23400. Software must not allow.   //(TP =65 Years, Date of death =August 31, Current year. T4 =Box 14 = $ 78,000,T4OAS: Box 18 =$ 5,900, Box 21 = $ 2,100, RC62 =Box 10 =$ 10,000, Box 12= $1,200, T4A = Box 131 =$ 1,310, Repayment of RDSP =$ 500 (Misc Deduction, Deductible amount of RDSP repayment), Box T4E, Box 14&15 =$ 1,500, Box 30 =$ 500. S3 shares ,Did you receive investment income, sold shares, or property or claiming reserves?, Did you sell shares or property? =Yes, Did you sell shares or mutual funds? =Yes. Summary of Disposition-Section 3 , Enter Adjusted cost base =$ 40,000)  F21300 should be  allowed with amount    allow.value ==1200",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let universalChildCareBenefitRepaymentFeild = getFieldId('21300');\n\t\tlet   universalChildCareBenefitRepayment = savedForm[  universalChildCareBenefitRepaymentFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+   universalChildCareBenefitRepayment;\nassert.equal(    universalChildCareBenefitRepayment, '1200', ' Feild should be built');",
                            "err": {},
                            "uuid": "1ce88ebe-214a-41c7-8ccf-ee12b3a2dc05",
                            "parentUUID": "ebb99b2a-cca4-4a80-99f8-cbf4b6775f35",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F12500 should be  allowed with amount    allow.value ==1310",
                            "fullTitle": "NetIncome_Line235_3--Override F23500 (OAS repayment) to differ from the amount calculated based on income reported at F11300 (T4OAS slip) and F23400. Software must not allow.   //(TP =65 Years, Date of death =August 31, Current year. T4 =Box 14 = $ 78,000,T4OAS: Box 18 =$ 5,900, Box 21 = $ 2,100, RC62 =Box 10 =$ 10,000, Box 12= $1,200, T4A = Box 131 =$ 1,310, Repayment of RDSP =$ 500 (Misc Deduction, Deductible amount of RDSP repayment), Box T4E, Box 14&15 =$ 1,500, Box 30 =$ 500. S3 shares ,Did you receive investment income, sold shares, or property or claiming reserves?, Did you sell shares or property? =Yes, Did you sell shares or mutual funds? =Yes. Summary of Disposition-Section 3 , Enter Adjusted cost base =$ 40,000)  F12500 should be  allowed with amount    allow.value ==1310",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let registeredDisabilitySavingsPlanRDSPIncomeFeild = getFieldId('12500');\n\t\tlet  registeredDisabilitySavingsPlanRDSPIncome = savedForm[    registeredDisabilitySavingsPlanRDSPIncomeFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+  registeredDisabilitySavingsPlanRDSPIncome;\nassert.equal(     registeredDisabilitySavingsPlanRDSPIncome, '1310', ' Feild should be built');",
                            "err": {},
                            "uuid": "aecd4b6b-ae07-4281-80d0-0dc81cb3de5c",
                            "parentUUID": "ebb99b2a-cca4-4a80-99f8-cbf4b6775f35",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F55360 should be  allowed with amount    allow.value ==500",
                            "fullTitle": "NetIncome_Line235_3--Override F23500 (OAS repayment) to differ from the amount calculated based on income reported at F11300 (T4OAS slip) and F23400. Software must not allow.   //(TP =65 Years, Date of death =August 31, Current year. T4 =Box 14 = $ 78,000,T4OAS: Box 18 =$ 5,900, Box 21 = $ 2,100, RC62 =Box 10 =$ 10,000, Box 12= $1,200, T4A = Box 131 =$ 1,310, Repayment of RDSP =$ 500 (Misc Deduction, Deductible amount of RDSP repayment), Box T4E, Box 14&15 =$ 1,500, Box 30 =$ 500. S3 shares ,Did you receive investment income, sold shares, or property or claiming reserves?, Did you sell shares or property? =Yes, Did you sell shares or mutual funds? =Yes. Summary of Disposition-Section 3 , Enter Adjusted cost base =$ 40,000)  F55360 should be  allowed with amount    allow.value ==500",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let rDSPRepaymentByTaxpayerFeild = getFieldId('55360');\n\t\tlet  rDSPRepaymentByTaxpayer = savedForm[ rDSPRepaymentByTaxpayerFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+ rDSPRepaymentByTaxpayer;\nassert.equal( rDSPRepaymentByTaxpayer, '500', ' Feild should be built');",
                            "err": {},
                            "uuid": "619fe720-54cb-4842-9762-7f4ad8502e22",
                            "parentUUID": "ebb99b2a-cca4-4a80-99f8-cbf4b6775f35",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F11900 should be  allowed with amount    allow.value ==1500",
                            "fullTitle": "NetIncome_Line235_3--Override F23500 (OAS repayment) to differ from the amount calculated based on income reported at F11300 (T4OAS slip) and F23400. Software must not allow.   //(TP =65 Years, Date of death =August 31, Current year. T4 =Box 14 = $ 78,000,T4OAS: Box 18 =$ 5,900, Box 21 = $ 2,100, RC62 =Box 10 =$ 10,000, Box 12= $1,200, T4A = Box 131 =$ 1,310, Repayment of RDSP =$ 500 (Misc Deduction, Deductible amount of RDSP repayment), Box T4E, Box 14&15 =$ 1,500, Box 30 =$ 500. S3 shares ,Did you receive investment income, sold shares, or property or claiming reserves?, Did you sell shares or property? =Yes, Did you sell shares or mutual funds? =Yes. Summary of Disposition-Section 3 , Enter Adjusted cost base =$ 40,000)  F11900 should be  allowed with amount    allow.value ==1500",
                            "timedOut": false,
                            "duration": 1,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let employmentInsuranceAndOtherBenefitsFeild = getFieldId('11900');\n\t\tlet  employmentInsuranceAndOtherBenefits = savedForm[ employmentInsuranceAndOtherBenefitsFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+ employmentInsuranceAndOtherBenefits;\nassert.equal(  employmentInsuranceAndOtherBenefits, '1500', ' Feild should be built');",
                            "err": {},
                            "uuid": "dce565e5-00ee-425c-8155-ac34281475ec",
                            "parentUUID": "ebb99b2a-cca4-4a80-99f8-cbf4b6775f35",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F23200 should be  allowed with amount    allow.value ==1000",
                            "fullTitle": "NetIncome_Line235_3--Override F23500 (OAS repayment) to differ from the amount calculated based on income reported at F11300 (T4OAS slip) and F23400. Software must not allow.   //(TP =65 Years, Date of death =August 31, Current year. T4 =Box 14 = $ 78,000,T4OAS: Box 18 =$ 5,900, Box 21 = $ 2,100, RC62 =Box 10 =$ 10,000, Box 12= $1,200, T4A = Box 131 =$ 1,310, Repayment of RDSP =$ 500 (Misc Deduction, Deductible amount of RDSP repayment), Box T4E, Box 14&15 =$ 1,500, Box 30 =$ 500. S3 shares ,Did you receive investment income, sold shares, or property or claiming reserves?, Did you sell shares or property? =Yes, Did you sell shares or mutual funds? =Yes. Summary of Disposition-Section 3 , Enter Adjusted cost base =$ 40,000)  F23200 should be  allowed with amount    allow.value ==1000",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let otherDeductionsFeild = getFieldId('23200');\n\t\tlet   otherDeductions = savedForm[  otherDeductionsFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+ otherDeductions;\nassert.equal(   otherDeductions, '1000', ' Feild should be built');",
                            "err": {},
                            "uuid": "59b14827-081f-4218-bd90-51ea378a8118",
                            "parentUUID": "ebb99b2a-cca4-4a80-99f8-cbf4b6775f35",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F23500 should be  allowed with amount    allow.value ==undefined",
                            "fullTitle": "NetIncome_Line235_3--Override F23500 (OAS repayment) to differ from the amount calculated based on income reported at F11300 (T4OAS slip) and F23400. Software must not allow.   //(TP =65 Years, Date of death =August 31, Current year. T4 =Box 14 = $ 78,000,T4OAS: Box 18 =$ 5,900, Box 21 = $ 2,100, RC62 =Box 10 =$ 10,000, Box 12= $1,200, T4A = Box 131 =$ 1,310, Repayment of RDSP =$ 500 (Misc Deduction, Deductible amount of RDSP repayment), Box T4E, Box 14&15 =$ 1,500, Box 30 =$ 500. S3 shares ,Did you receive investment income, sold shares, or property or claiming reserves?, Did you sell shares or property? =Yes, Did you sell shares or mutual funds? =Yes. Summary of Disposition-Section 3 , Enter Adjusted cost base =$ 40,000)  F23500 should be  allowed with amount    allow.value ==undefined",
                            "timedOut": false,
                            "duration": 0,
                            "state": "failed",
                            "speed": null,
                            "pass": false,
                            "fail": true,
                            "pending": false,
                            "context": null,
                            "code": "let socialBenefitsRepaymentFeild = getFieldId('23500');\n\t\tlet  socialBenefitsRepayment = savedForm[ socialBenefitsRepaymentFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+ socialBenefitsRepayment;\nassert.equal( socialBenefitsRepayment, '166800', ' Feild should be built');",
                            "err": {
                                "message": "AssertionError:  Feild should be built",
                                "estack": "AssertionError [ERR_ASSERTION]:  Feild should be built\n    at Context.<anonymous> (my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_Line235_3.js:145:16)\n    at processImmediate (internal/timers.js:456:21)",
                                "diff": null
                            },
                            "uuid": "01d8317d-2215-40e2-89ff-09d459591589",
                            "parentUUID": "ebb99b2a-cca4-4a80-99f8-cbf4b6775f35",
                            "isHook": false,
                            "skipped": false
                        }
                    ],
                    "suites": [],
                    "passes": [
                        "60897b67-d20b-4db9-bdfa-e4616bd1ed0e",
                        "86e3ca91-962c-467d-bb3c-48e9265683fc",
                        "7e27ca67-4939-495b-8885-552df8dc07c0",
                        "7e55bce5-add9-4a1e-8b8d-18641d62f7fc",
                        "92aca376-235f-40f3-a59b-95e02aa799e3",
                        "1ce88ebe-214a-41c7-8ccf-ee12b3a2dc05",
                        "aecd4b6b-ae07-4281-80d0-0dc81cb3de5c",
                        "619fe720-54cb-4842-9762-7f4ad8502e22",
                        "dce565e5-00ee-425c-8155-ac34281475ec",
                        "59b14827-081f-4218-bd90-51ea378a8118"
                    ],
                    "failures": [
                        "01d8317d-2215-40e2-89ff-09d459591589"
                    ],
                    "pending": [],
                    "skipped": [],
                    "duration": 1,
                    "root": false,
                    "rootEmpty": false,
                    "_timeout": 150000
                },
                {
                    "uuid": "db0227f6-c735-4864-a71e-635e07615080",
                    "title": "NetIncome_T691_Ded1-Input F67820 (Form T691) without an amount at F22100 or F23200. Software must not allow.   //(Investment Expenses Tab: Are you claiming investment expenses? Did you pay fees to manage your investments or for investment advice ? Amount = $ 500)",
                    "fullFile": "E:\\Rita\\Taxtron\\WebTest\\my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_T691_Ded1.js",
                    "file": "\\my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_T691_Ded1.js",
                    "beforeHooks": [
                        {
                            "title": "\"before all\" hook",
                            "fullTitle": "NetIncome_T691_Ded1-Input F67820 (Form T691) without an amount at F22100 or F23200. Software must not allow.   //(Investment Expenses Tab: Are you claiming investment expenses? Did you pay fees to manage your investments or for investment advice ? Amount = $ 500) \"before all\" hook",
                            "timedOut": false,
                            "duration": 66172,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "driver = new Builder()\n\t.withCapabilities(Capabilities.chrome().setAcceptInsecureCerts(true))\n\t.build();\ndriver.manage().window().setRect({ width: 1366, height: 768 });\nawait login(driver, 'ritakumar@outlook.com', 'rishu12rashi');\nawait selectNewReturn(driver,province);\nawait switchToastOff(driver);\n        await setInputById(driver, 'Firstnames0', 'FEE');\nawait setInputById(driver, 'Surname0', 'LEE');\nawait selectDateById(driver, 'DOB0', '1975/01/01');\nawait setInputById(driver, 'SIN0', '123123127');\n        await selectComboById(driver, 'MaritalStatus0', 'Single');\n        await selectToggleById(driver, 'domchanged0', '0');\n        await nextClick(driver);\nawait setInputById(driver, 'fullAdd0', '6464 Yonge St, North York, YT M2M 3X4, Canada');\nawait selectToggleById(driver, 'quesFP0', '0');\n        await selectToggleById(driver, 'quesPrinResi0', '0');\n        await selectToggleById(driver, 'bDisabled0tp', '0');\n        await nextClick(driver);\n        await selectTab(driver, 'Income');\nawait selectTab(driver, 'IncomeProfile');\nawait selectToggleById(driver, 'WorkedInYOR0tp', '1');\n        await clickDivById(driver, 'T40tp');\nawait nextClick(driver);\nawait setInputById(driver, 'T4B140', '100000');\n        await selectComboById(driver, 'T4_Box100tp', 'ON');\n        await nextClick(driver);\n        await nextClick(driver);\n        await selectTab(driver, 'Deduction');\n        await selectTab(driver, 'Investment_Main');\n        await selectToggleById(driver, 'qInvest0tp', '1');\n        await nextClick(driver);\n        await selectToggleById(driver, 'InvestEx0tp', '1');\n        await setInputById(driver, 'CCharges20tp', '500');\n        await nextClick(driver);\n        await nextClick(driver);\n        savedForm = await getServerFile(driver);",
                            "err": {},
                            "uuid": "b09d9b91-c912-41d8-a451-5ab255901201",
                            "parentUUID": "db0227f6-c735-4864-a71e-635e07615080",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "afterHooks": [
                        {
                            "title": "\"after all\" hook",
                            "fullTitle": "NetIncome_T691_Ded1-Input F67820 (Form T691) without an amount at F22100 or F23200. Software must not allow.   //(Investment Expenses Tab: Are you claiming investment expenses? Did you pay fees to manage your investments or for investment advice ? Amount = $ 500) \"after all\" hook",
                            "timedOut": false,
                            "duration": 5800,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "await logoutById(driver);\nawait driver.quit();",
                            "err": {},
                            "uuid": "727fd5da-efe3-409f-9cce-8acaa35a79e3",
                            "parentUUID": "db0227f6-c735-4864-a71e-635e07615080",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "tests": [
                        {
                            "title": " F22100 should be  allowed with amount    allow.value ==500",
                            "fullTitle": "NetIncome_T691_Ded1-Input F67820 (Form T691) without an amount at F22100 or F23200. Software must not allow.   //(Investment Expenses Tab: Are you claiming investment expenses? Did you pay fees to manage your investments or for investment advice ? Amount = $ 500)  F22100 should be  allowed with amount    allow.value ==500",
                            "timedOut": false,
                            "duration": 1,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let  grossBusinessInvestmentlossFeild = getFieldId('22100');\n\t\tlet  grossBusinessInvestmentloss = savedForm[ grossBusinessInvestmentlossFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+grossBusinessInvestmentloss;\nassert.equal( grossBusinessInvestmentloss, '500', ' Feild should be built');",
                            "err": {},
                            "uuid": "674ab929-e5bb-4ef6-b3ca-f2e31b8274b4",
                            "parentUUID": "db0227f6-c735-4864-a71e-635e07615080",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F67820 should be  allowed with amount    allow.value ==1",
                            "fullTitle": "NetIncome_T691_Ded1-Input F67820 (Form T691) without an amount at F22100 or F23200. Software must not allow.   //(Investment Expenses Tab: Are you claiming investment expenses? Did you pay fees to manage your investments or for investment advice ? Amount = $ 500)  F67820 should be  allowed with amount    allow.value ==1",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let amountOflossCreatedOrIncreasedByCCAAndCarryingChargesOnCertifiedFilmPropertyFeild = getFieldId('67820');\n\t\tlet  amountOflossCreatedOrIncreasedByCCAAndCarryingChargesOnCertifiedFilmProperty = savedForm[  amountOflossCreatedOrIncreasedByCCAAndCarryingChargesOnCertifiedFilmPropertyFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+ amountOflossCreatedOrIncreasedByCCAAndCarryingChargesOnCertifiedFilmProperty;\nassert.equal(   amountOflossCreatedOrIncreasedByCCAAndCarryingChargesOnCertifiedFilmProperty, '1', ' Feild should be built');",
                            "err": {},
                            "uuid": "92ae4e34-4e48-432c-a862-778e5e525000",
                            "parentUUID": "db0227f6-c735-4864-a71e-635e07615080",
                            "isHook": false,
                            "skipped": false
                        }
                    ],
                    "suites": [],
                    "passes": [
                        "674ab929-e5bb-4ef6-b3ca-f2e31b8274b4",
                        "92ae4e34-4e48-432c-a862-778e5e525000"
                    ],
                    "failures": [],
                    "pending": [],
                    "skipped": [],
                    "duration": 1,
                    "root": false,
                    "rootEmpty": false,
                    "_timeout": 150000
                },
                {
                    "uuid": "f57647fc-d24f-4b97-9519-dc37cca9919b",
                    "title": "NetIncome_T691_Ded2--Input F67820 (Form T691) without an amount at F22100 or F23200. Software must not allow.   //(Investment Expenses Tab: Are you claiming investment expenses? Did you pay interest on money borrowed for investment purposes? Amount = $ 500)",
                    "fullFile": "E:\\Rita\\Taxtron\\WebTest\\my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_T691_Ded2.js",
                    "file": "\\my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_T691_Ded2.js",
                    "beforeHooks": [
                        {
                            "title": "\"before all\" hook",
                            "fullTitle": "NetIncome_T691_Ded2--Input F67820 (Form T691) without an amount at F22100 or F23200. Software must not allow.   //(Investment Expenses Tab: Are you claiming investment expenses? Did you pay interest on money borrowed for investment purposes? Amount = $ 500) \"before all\" hook",
                            "timedOut": false,
                            "duration": 65657,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "driver = new Builder()\n\t.withCapabilities(Capabilities.chrome().setAcceptInsecureCerts(true))\n\t.build();\ndriver.manage().window().setRect({ width: 1366, height: 768 });\nawait login(driver, 'ritakumar@outlook.com', 'rishu12rashi');\nawait selectNewReturn(driver,province);\nawait switchToastOff(driver);\n        await setInputById(driver, 'Firstnames0', 'FEE');\nawait setInputById(driver, 'Surname0', 'LEE');\nawait selectDateById(driver, 'DOB0', '1975/01/01');\nawait setInputById(driver, 'SIN0', '123123127');\n        await selectComboById(driver, 'MaritalStatus0', 'Single');\n        await selectToggleById(driver, 'domchanged0', '0');\n        await nextClick(driver);\nawait setInputById(driver, 'fullAdd0', '6464 Yonge St, North York, YT M2M 3X4, Canada');\nawait selectToggleById(driver, 'quesFP0', '0');\n        await selectToggleById(driver, 'quesPrinResi0', '0');\n        await selectToggleById(driver, 'bDisabled0tp', '0');\n        await nextClick(driver);\n        await selectTab(driver, 'Income');\nawait selectTab(driver, 'IncomeProfile');\nawait selectToggleById(driver, 'WorkedInYOR0tp', '1');\n        await clickDivById(driver, 'T40tp');\nawait nextClick(driver);\nawait setInputById(driver, 'T4B140', '100000');\n        await selectComboById(driver, 'T4_Box100tp', 'ON');\n        await nextClick(driver);\n        await nextClick(driver);\n        await selectTab(driver, 'Deduction');\n        await selectTab(driver, 'Investment_Main');\n        await selectToggleById(driver, 'qInvest0tp', '1');\n        await nextClick(driver);\n        await selectToggleById(driver, 'InterestEx0tp', '1');\n        await setInputById(driver, 'CCharges50tp', '500');\n        await nextClick(driver);\n        await nextClick(driver);\n        savedForm = await getServerFile(driver);",
                            "err": {},
                            "uuid": "358bdf0e-0cd5-4873-a9d7-9748e7b5ab51",
                            "parentUUID": "f57647fc-d24f-4b97-9519-dc37cca9919b",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "afterHooks": [
                        {
                            "title": "\"after all\" hook",
                            "fullTitle": "NetIncome_T691_Ded2--Input F67820 (Form T691) without an amount at F22100 or F23200. Software must not allow.   //(Investment Expenses Tab: Are you claiming investment expenses? Did you pay interest on money borrowed for investment purposes? Amount = $ 500) \"after all\" hook",
                            "timedOut": false,
                            "duration": 5694,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "await logoutById(driver);\nawait driver.quit();",
                            "err": {},
                            "uuid": "0e66bf6a-8fb3-440f-9e5a-1272faa77c99",
                            "parentUUID": "f57647fc-d24f-4b97-9519-dc37cca9919b",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "tests": [
                        {
                            "title": " F22100 should be  allowed with amount    allow.value ==500",
                            "fullTitle": "NetIncome_T691_Ded2--Input F67820 (Form T691) without an amount at F22100 or F23200. Software must not allow.   //(Investment Expenses Tab: Are you claiming investment expenses? Did you pay interest on money borrowed for investment purposes? Amount = $ 500)  F22100 should be  allowed with amount    allow.value ==500",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let  grossBusinessInvestmentlossFeild = getFieldId('22100');\n\t\tlet  grossBusinessInvestmentloss = savedForm[ grossBusinessInvestmentlossFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+grossBusinessInvestmentloss;\nassert.equal( grossBusinessInvestmentloss, '500', ' Feild should be built');",
                            "err": {},
                            "uuid": "d3a27dcb-ac3a-498b-b1d4-83e056c44fe8",
                            "parentUUID": "f57647fc-d24f-4b97-9519-dc37cca9919b",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F67820 should be  allowed with amount    allow.value ==1",
                            "fullTitle": "NetIncome_T691_Ded2--Input F67820 (Form T691) without an amount at F22100 or F23200. Software must not allow.   //(Investment Expenses Tab: Are you claiming investment expenses? Did you pay interest on money borrowed for investment purposes? Amount = $ 500)  F67820 should be  allowed with amount    allow.value ==1",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let amountOflossCreatedOrIncreasedByCCAAndCarryingChargesOnCertifiedFilmPropertyFeild = getFieldId('67820');\n\t\tlet  amountOflossCreatedOrIncreasedByCCAAndCarryingChargesOnCertifiedFilmProperty = savedForm[  amountOflossCreatedOrIncreasedByCCAAndCarryingChargesOnCertifiedFilmPropertyFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+ amountOflossCreatedOrIncreasedByCCAAndCarryingChargesOnCertifiedFilmProperty;\nassert.equal(   amountOflossCreatedOrIncreasedByCCAAndCarryingChargesOnCertifiedFilmProperty, '1', ' Feild should be built');",
                            "err": {},
                            "uuid": "f9fc81ac-c71a-41bf-afaf-c67785953ac8",
                            "parentUUID": "f57647fc-d24f-4b97-9519-dc37cca9919b",
                            "isHook": false,
                            "skipped": false
                        }
                    ],
                    "suites": [],
                    "passes": [
                        "d3a27dcb-ac3a-498b-b1d4-83e056c44fe8",
                        "f9fc81ac-c71a-41bf-afaf-c67785953ac8"
                    ],
                    "failures": [],
                    "pending": [],
                    "skipped": [],
                    "duration": 0,
                    "root": false,
                    "rootEmpty": false,
                    "_timeout": 150000
                },
                {
                    "uuid": "5eb7d6e6-a951-4e86-be34-25d8e566cfae",
                    "title": "NetIncome_T691_Ded3--Input F67820 (Form T691) without an amount at F22100 or F23200. Software must not allow.  //(Investment Expenses Tab: Are you claiming investment expenses? Did you pay interest on money borrowed to purchase partnership interest where you were a silent partner ? Amount = $ 500)",
                    "fullFile": "E:\\Rita\\Taxtron\\WebTest\\my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_T691_Ded3.js",
                    "file": "\\my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_T691_Ded3.js",
                    "beforeHooks": [
                        {
                            "title": "\"before all\" hook",
                            "fullTitle": "NetIncome_T691_Ded3--Input F67820 (Form T691) without an amount at F22100 or F23200. Software must not allow.  //(Investment Expenses Tab: Are you claiming investment expenses? Did you pay interest on money borrowed to purchase partnership interest where you were a silent partner ? Amount = $ 500) \"before all\" hook",
                            "timedOut": false,
                            "duration": 67156,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "driver = new Builder()\n\t.withCapabilities(Capabilities.chrome().setAcceptInsecureCerts(true))\n\t.build();\ndriver.manage().window().setRect({ width: 1366, height: 768 });\nawait login(driver, 'ritakumar@outlook.com', 'rishu12rashi');\nawait selectNewReturn(driver,province);\nawait switchToastOff(driver);\n        await setInputById(driver, 'Firstnames0', 'FEE');\nawait setInputById(driver, 'Surname0', 'LEE');\nawait selectDateById(driver, 'DOB0', '1975/01/01');\nawait setInputById(driver, 'SIN0', '123123127');\n        await selectComboById(driver, 'MaritalStatus0', 'Single');\n        await selectToggleById(driver, 'domchanged0', '0');\n        await nextClick(driver);\nawait setInputById(driver, 'fullAdd0', '6464 Yonge St, North York, YT M2M 3X4, Canada');\nawait selectToggleById(driver, 'quesFP0', '0');\n        await selectToggleById(driver, 'quesPrinResi0', '0');\n        await selectToggleById(driver, 'bDisabled0tp', '0');\n        await nextClick(driver);\n        await selectTab(driver, 'Income');\nawait selectTab(driver, 'IncomeProfile');\nawait selectToggleById(driver, 'WorkedInYOR0tp', '1');\n        await clickDivById(driver, 'T40tp');\nawait nextClick(driver);\nawait setInputById(driver, 'T4B140', '100000');\n        await selectComboById(driver, 'T4_Box100tp', 'ON');\n        await nextClick(driver);\n        await nextClick(driver);\n        await selectTab(driver, 'Deduction');\n        await selectTab(driver, 'Investment_Main');\n        await selectToggleById(driver, 'qInvest0tp', '1');\n        await nextClick(driver);\n        await selectToggleById(driver, 'PartnerEx0tp', '1');\n        await setInputById(driver, 'IOMPartner0tp', '500');\n        await nextClick(driver);\n        await nextClick(driver);\n        savedForm = await getServerFile(driver);",
                            "err": {},
                            "uuid": "ad681742-542c-4103-85a9-c9ef037272d4",
                            "parentUUID": "5eb7d6e6-a951-4e86-be34-25d8e566cfae",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "afterHooks": [
                        {
                            "title": "\"after all\" hook",
                            "fullTitle": "NetIncome_T691_Ded3--Input F67820 (Form T691) without an amount at F22100 or F23200. Software must not allow.  //(Investment Expenses Tab: Are you claiming investment expenses? Did you pay interest on money borrowed to purchase partnership interest where you were a silent partner ? Amount = $ 500) \"after all\" hook",
                            "timedOut": false,
                            "duration": 5656,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "await logoutById(driver);\nawait driver.quit();",
                            "err": {},
                            "uuid": "a0459806-b294-4332-bf75-bcb17fce13c5",
                            "parentUUID": "5eb7d6e6-a951-4e86-be34-25d8e566cfae",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "tests": [
                        {
                            "title": " F22100 should be  allowed with amount    allow.value ==500",
                            "fullTitle": "NetIncome_T691_Ded3--Input F67820 (Form T691) without an amount at F22100 or F23200. Software must not allow.  //(Investment Expenses Tab: Are you claiming investment expenses? Did you pay interest on money borrowed to purchase partnership interest where you were a silent partner ? Amount = $ 500)  F22100 should be  allowed with amount    allow.value ==500",
                            "timedOut": false,
                            "duration": 1,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let  grossBusinessInvestmentlossFeild = getFieldId('22100');\n\t\tlet  grossBusinessInvestmentloss = savedForm[ grossBusinessInvestmentlossFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+grossBusinessInvestmentloss;\nassert.equal( grossBusinessInvestmentloss, '500', ' Feild should be built');",
                            "err": {},
                            "uuid": "3b8cbf45-1e86-44b8-a20f-b87dfaa01eef",
                            "parentUUID": "5eb7d6e6-a951-4e86-be34-25d8e566cfae",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F67820 should be  allowed with amount    allow.value ==1",
                            "fullTitle": "NetIncome_T691_Ded3--Input F67820 (Form T691) without an amount at F22100 or F23200. Software must not allow.  //(Investment Expenses Tab: Are you claiming investment expenses? Did you pay interest on money borrowed to purchase partnership interest where you were a silent partner ? Amount = $ 500)  F67820 should be  allowed with amount    allow.value ==1",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let amountOflossCreatedOrIncreasedByCCAAndCarryingChargesOnCertifiedFilmPropertyFeild = getFieldId('67820');\n\t\tlet  amountOflossCreatedOrIncreasedByCCAAndCarryingChargesOnCertifiedFilmProperty = savedForm[  amountOflossCreatedOrIncreasedByCCAAndCarryingChargesOnCertifiedFilmPropertyFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+ amountOflossCreatedOrIncreasedByCCAAndCarryingChargesOnCertifiedFilmProperty;\nassert.equal(   amountOflossCreatedOrIncreasedByCCAAndCarryingChargesOnCertifiedFilmProperty, '1', ' Feild should be built');",
                            "err": {},
                            "uuid": "5c340a8a-279a-4422-946b-b6ac8f76dffe",
                            "parentUUID": "5eb7d6e6-a951-4e86-be34-25d8e566cfae",
                            "isHook": false,
                            "skipped": false
                        }
                    ],
                    "suites": [],
                    "passes": [
                        "3b8cbf45-1e86-44b8-a20f-b87dfaa01eef",
                        "5c340a8a-279a-4422-946b-b6ac8f76dffe"
                    ],
                    "failures": [],
                    "pending": [],
                    "skipped": [],
                    "duration": 1,
                    "root": false,
                    "rootEmpty": false,
                    "_timeout": 150000
                },
                {
                    "uuid": "4c278f29-d4f1-47ec-8e16-24c273f8639d",
                    "title": "NetIncome_T691_Ded4--Input F67820 (Form T691) without an amount at F22100 or F23200. Software must not allow.  //(Investment Expenses Tab: Are you claiming investment expenses? Did you pay other expenses such as legal fees related to support payments or other investment expenses ? Carrying charges on films or videos = $ 500)",
                    "fullFile": "E:\\Rita\\Taxtron\\WebTest\\my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_T691_Ded4.js",
                    "file": "\\my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_T691_Ded4.js",
                    "beforeHooks": [
                        {
                            "title": "\"before all\" hook",
                            "fullTitle": "NetIncome_T691_Ded4--Input F67820 (Form T691) without an amount at F22100 or F23200. Software must not allow.  //(Investment Expenses Tab: Are you claiming investment expenses? Did you pay other expenses such as legal fees related to support payments or other investment expenses ? Carrying charges on films or videos = $ 500) \"before all\" hook",
                            "timedOut": false,
                            "duration": 66273,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "driver = new Builder()\n\t.withCapabilities(Capabilities.chrome().setAcceptInsecureCerts(true))\n\t.build();\ndriver.manage().window().setRect({ width: 1366, height: 768 });\nawait login(driver, 'ritakumar@outlook.com', 'rishu12rashi');\nawait selectNewReturn(driver,province);\nawait switchToastOff(driver);\n        await setInputById(driver, 'Firstnames0', 'FEE');\nawait setInputById(driver, 'Surname0', 'LEE');\nawait selectDateById(driver, 'DOB0', '1975/01/01');\nawait setInputById(driver, 'SIN0', '123123127');\n        await selectComboById(driver, 'MaritalStatus0', 'Single');\n        await selectToggleById(driver, 'domchanged0', '0');\n        await nextClick(driver);\nawait setInputById(driver, 'fullAdd0', '6464 Yonge St, North York, YT M2M 3X4, Canada');\nawait selectToggleById(driver, 'quesFP0', '0');\n        await selectToggleById(driver, 'quesPrinResi0', '0');\n        await selectToggleById(driver, 'bDisabled0tp', '0');\n        await nextClick(driver);\n        await selectTab(driver, 'Income');\nawait selectTab(driver, 'IncomeProfile');\nawait selectToggleById(driver, 'WorkedInYOR0tp', '1');\n        await clickDivById(driver, 'T40tp');\nawait nextClick(driver);\nawait setInputById(driver, 'T4B140', '10000');\n        await selectComboById(driver, 'T4_Box100tp', 'ON');\n        await nextClick(driver);\n        await nextClick(driver);\n        await selectTab(driver, 'Deduction');\n        await selectTab(driver, 'Investment_Main');\n        await selectToggleById(driver, 'qInvest0tp', '1');\n        await nextClick(driver);\n        await selectToggleById(driver, 'OtherEx0tp', '1');\n        await setInputById(driver, 'FilmCCharges0tp', '500');\n        await nextClick(driver);\n        await nextClick(driver);\n        savedForm = await getServerFile(driver);",
                            "err": {},
                            "uuid": "8a52b183-f995-42c1-b266-ba6af3b05cd6",
                            "parentUUID": "4c278f29-d4f1-47ec-8e16-24c273f8639d",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "afterHooks": [
                        {
                            "title": "\"after all\" hook",
                            "fullTitle": "NetIncome_T691_Ded4--Input F67820 (Form T691) without an amount at F22100 or F23200. Software must not allow.  //(Investment Expenses Tab: Are you claiming investment expenses? Did you pay other expenses such as legal fees related to support payments or other investment expenses ? Carrying charges on films or videos = $ 500) \"after all\" hook",
                            "timedOut": false,
                            "duration": 5684,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "await logoutById(driver);\nawait driver.quit();",
                            "err": {},
                            "uuid": "5cd197be-66c0-4bb7-ba24-cc3adefb931b",
                            "parentUUID": "4c278f29-d4f1-47ec-8e16-24c273f8639d",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "tests": [
                        {
                            "title": " F22100 should be  allowed with amount    allow.value ==500",
                            "fullTitle": "NetIncome_T691_Ded4--Input F67820 (Form T691) without an amount at F22100 or F23200. Software must not allow.  //(Investment Expenses Tab: Are you claiming investment expenses? Did you pay other expenses such as legal fees related to support payments or other investment expenses ? Carrying charges on films or videos = $ 500)  F22100 should be  allowed with amount    allow.value ==500",
                            "timedOut": false,
                            "duration": 1,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let  grossBusinessInvestmentlossFeild = getFieldId('22100');\n\t\tlet  grossBusinessInvestmentloss = savedForm[ grossBusinessInvestmentlossFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+grossBusinessInvestmentloss;\nassert.equal( grossBusinessInvestmentloss, '500', ' Feild should be built');",
                            "err": {},
                            "uuid": "0c242af4-36e1-4bba-b65a-d4da15bd0ed0",
                            "parentUUID": "4c278f29-d4f1-47ec-8e16-24c273f8639d",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F67820 should be  allowed with amount    allow.value ==500",
                            "fullTitle": "NetIncome_T691_Ded4--Input F67820 (Form T691) without an amount at F22100 or F23200. Software must not allow.  //(Investment Expenses Tab: Are you claiming investment expenses? Did you pay other expenses such as legal fees related to support payments or other investment expenses ? Carrying charges on films or videos = $ 500)  F67820 should be  allowed with amount    allow.value ==500",
                            "timedOut": false,
                            "duration": 0,
                            "state": "failed",
                            "speed": null,
                            "pass": false,
                            "fail": true,
                            "pending": false,
                            "context": null,
                            "code": "let amountOflossCreatedOrIncreasedByCCAAndCarryingChargesOnCertifiedFilmPropertyFeild = getFieldId('67820');\n\t\tlet  amountOflossCreatedOrIncreasedByCCAAndCarryingChargesOnCertifiedFilmProperty = savedForm[  amountOflossCreatedOrIncreasedByCCAAndCarryingChargesOnCertifiedFilmPropertyFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+ amountOflossCreatedOrIncreasedByCCAAndCarryingChargesOnCertifiedFilmProperty;\nassert.equal(   amountOflossCreatedOrIncreasedByCCAAndCarryingChargesOnCertifiedFilmProperty, '1', ' Feild should be built');",
                            "err": {
                                "message": "AssertionError:  Feild should be built",
                                "estack": "AssertionError [ERR_ASSERTION]:  Feild should be built\n    at Context.<anonymous> (my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_T691_Ded4.js:63:16)\n    at processImmediate (internal/timers.js:456:21)",
                                "diff": "- 500\n+ 1\n"
                            },
                            "uuid": "7bf0e874-57bb-4ff6-ba93-8dc19151a6e9",
                            "parentUUID": "4c278f29-d4f1-47ec-8e16-24c273f8639d",
                            "isHook": false,
                            "skipped": false
                        }
                    ],
                    "suites": [],
                    "passes": [
                        "0c242af4-36e1-4bba-b65a-d4da15bd0ed0"
                    ],
                    "failures": [
                        "7bf0e874-57bb-4ff6-ba93-8dc19151a6e9"
                    ],
                    "pending": [],
                    "skipped": [],
                    "duration": 1,
                    "root": false,
                    "rootEmpty": false,
                    "_timeout": 150000
                },
                {
                    "uuid": "bf883d19-2f29-487f-9370-e384e0a4ce09",
                    "title": "NetIncome_T691_Ded5--Input F67820 (Form T691) without an amount at F22100 or F23200. Software must not allow.  //(Investment Expenses Tab: Are you claiming investment expenses? Did you pay other expenses such as legal fees related to support payments or other investment expenses ? Carrying charges on resource properties = $ 500)",
                    "fullFile": "E:\\Rita\\Taxtron\\WebTest\\my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_T691_Ded5.js",
                    "file": "\\my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_T691_Ded5.js",
                    "beforeHooks": [
                        {
                            "title": "\"before all\" hook",
                            "fullTitle": "NetIncome_T691_Ded5--Input F67820 (Form T691) without an amount at F22100 or F23200. Software must not allow.  //(Investment Expenses Tab: Are you claiming investment expenses? Did you pay other expenses such as legal fees related to support payments or other investment expenses ? Carrying charges on resource properties = $ 500) \"before all\" hook",
                            "timedOut": false,
                            "duration": 66561,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "driver = new Builder()\n\t.withCapabilities(Capabilities.chrome().setAcceptInsecureCerts(true))\n\t.build();\ndriver.manage().window().setRect({ width: 1366, height: 768 });\nawait login(driver, 'ritakumar@outlook.com', 'rishu12rashi');\nawait selectNewReturn(driver,province);\nawait switchToastOff(driver);\n        await setInputById(driver, 'Firstnames0', 'FEE');\nawait setInputById(driver, 'Surname0', 'LEE');\nawait selectDateById(driver, 'DOB0', '1975/01/01');\nawait setInputById(driver, 'SIN0', '123123127');\n        await selectComboById(driver, 'MaritalStatus0', 'Single');\n        await selectToggleById(driver, 'domchanged0', '0');\n        await nextClick(driver);\nawait setInputById(driver, 'fullAdd0', '6464 Yonge St, North York, YT M2M 3X4, Canada');\nawait selectToggleById(driver, 'quesFP0', '0');\n        await selectToggleById(driver, 'quesPrinResi0', '0');\n        await selectToggleById(driver, 'bDisabled0tp', '0');\n        await nextClick(driver);\n        await selectTab(driver, 'Income');\nawait selectTab(driver, 'IncomeProfile');\nawait selectToggleById(driver, 'WorkedInYOR0tp', '1');\n        await clickDivById(driver, 'T40tp');\nawait nextClick(driver);\nawait setInputById(driver, 'T4B140', '10000');\n        await selectComboById(driver, 'T4_Box100tp', 'ON');\n        await nextClick(driver);\n        await nextClick(driver);\n        await selectTab(driver, 'Deduction');\n        await selectTab(driver, 'Investment_Main');\n        await selectToggleById(driver, 'qInvest0tp', '1');\n        await nextClick(driver);\n        await selectToggleById(driver, 'OtherEx0tp', '1');\n        await setInputById(driver, 'CCResources0tp', '500');\n        await nextClick(driver);\n        await nextClick(driver);\n        savedForm = await getServerFile(driver);",
                            "err": {},
                            "uuid": "13072f80-2a55-4e30-ab94-b86c2875fd74",
                            "parentUUID": "bf883d19-2f29-487f-9370-e384e0a4ce09",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "afterHooks": [
                        {
                            "title": "\"after all\" hook",
                            "fullTitle": "NetIncome_T691_Ded5--Input F67820 (Form T691) without an amount at F22100 or F23200. Software must not allow.  //(Investment Expenses Tab: Are you claiming investment expenses? Did you pay other expenses such as legal fees related to support payments or other investment expenses ? Carrying charges on resource properties = $ 500) \"after all\" hook",
                            "timedOut": false,
                            "duration": 5906,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "await logoutById(driver);\nawait driver.quit();",
                            "err": {},
                            "uuid": "e4737817-b712-4a9f-88e4-d43d86412e79",
                            "parentUUID": "bf883d19-2f29-487f-9370-e384e0a4ce09",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "tests": [
                        {
                            "title": " F22100 should be  allowed with amount    allow.value ==500",
                            "fullTitle": "NetIncome_T691_Ded5--Input F67820 (Form T691) without an amount at F22100 or F23200. Software must not allow.  //(Investment Expenses Tab: Are you claiming investment expenses? Did you pay other expenses such as legal fees related to support payments or other investment expenses ? Carrying charges on resource properties = $ 500)  F22100 should be  allowed with amount    allow.value ==500",
                            "timedOut": false,
                            "duration": 1,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let  grossBusinessInvestmentlossFeild = getFieldId('22100');\n\t\tlet  grossBusinessInvestmentloss = savedForm[ grossBusinessInvestmentlossFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+grossBusinessInvestmentloss;\nassert.equal( grossBusinessInvestmentloss, '500', ' Feild should be built');",
                            "err": {},
                            "uuid": "29892643-eaa2-40e3-a716-f0006c2465b1",
                            "parentUUID": "bf883d19-2f29-487f-9370-e384e0a4ce09",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F67820 should be  allowed with amount    allow.value ==1",
                            "fullTitle": "NetIncome_T691_Ded5--Input F67820 (Form T691) without an amount at F22100 or F23200. Software must not allow.  //(Investment Expenses Tab: Are you claiming investment expenses? Did you pay other expenses such as legal fees related to support payments or other investment expenses ? Carrying charges on resource properties = $ 500)  F67820 should be  allowed with amount    allow.value ==1",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let amountOflossCreatedOrIncreasedByCCAAndCarryingChargesOnCertifiedFilmPropertyFeild = getFieldId('67820');\n\t\tlet  amountOflossCreatedOrIncreasedByCCAAndCarryingChargesOnCertifiedFilmProperty = savedForm[  amountOflossCreatedOrIncreasedByCCAAndCarryingChargesOnCertifiedFilmPropertyFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+ amountOflossCreatedOrIncreasedByCCAAndCarryingChargesOnCertifiedFilmProperty;\nassert.equal(   amountOflossCreatedOrIncreasedByCCAAndCarryingChargesOnCertifiedFilmProperty, '1', ' Feild should be built');",
                            "err": {},
                            "uuid": "99a7ad48-e073-4a77-b6b2-458042f31f1f",
                            "parentUUID": "bf883d19-2f29-487f-9370-e384e0a4ce09",
                            "isHook": false,
                            "skipped": false
                        }
                    ],
                    "suites": [],
                    "passes": [
                        "29892643-eaa2-40e3-a716-f0006c2465b1",
                        "99a7ad48-e073-4a77-b6b2-458042f31f1f"
                    ],
                    "failures": [],
                    "pending": [],
                    "skipped": [],
                    "duration": 1,
                    "root": false,
                    "rootEmpty": false,
                    "_timeout": 150000
                },
                {
                    "uuid": "25e5f415-db17-480e-aed5-4306fb2ae38f",
                    "title": "NetIncome_T691_Ded6--Input F67820 (Form T691) without an amount at F22100 or F23200. Software must not allow.  //(Investment Expenses Tab: Are you claiming investment expenses? Did you pay other expenses such as legal fees related to support payments or other investment expenses ? Legal expenses paid to related to support payments = $ 500)",
                    "fullFile": "E:\\Rita\\Taxtron\\WebTest\\my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_T691_Ded6.js",
                    "file": "\\my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_T691_Ded6.js",
                    "beforeHooks": [
                        {
                            "title": "\"before all\" hook",
                            "fullTitle": "NetIncome_T691_Ded6--Input F67820 (Form T691) without an amount at F22100 or F23200. Software must not allow.  //(Investment Expenses Tab: Are you claiming investment expenses? Did you pay other expenses such as legal fees related to support payments or other investment expenses ? Legal expenses paid to related to support payments = $ 500) \"before all\" hook",
                            "timedOut": false,
                            "duration": 67778,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "driver = new Builder()\n\t.withCapabilities(Capabilities.chrome().setAcceptInsecureCerts(true))\n\t.build();\ndriver.manage().window().setRect({ width: 1366, height: 768 });\nawait login(driver, 'ritakumar@outlook.com', 'rishu12rashi');\nawait selectNewReturn(driver,province);\nawait switchToastOff(driver);\n        await setInputById(driver, 'Firstnames0', 'FEE');\nawait setInputById(driver, 'Surname0', 'LEE');\nawait selectDateById(driver, 'DOB0', '1975/01/01');\nawait setInputById(driver, 'SIN0', '123123127');\n        await selectComboById(driver, 'MaritalStatus0', 'Single');\n        await selectToggleById(driver, 'domchanged0', '0');\n        await nextClick(driver);\nawait setInputById(driver, 'fullAdd0', '6464 Yonge St, North York, YT M2M 3X4, Canada');\nawait selectToggleById(driver, 'quesFP0', '0');\n        await selectToggleById(driver, 'quesPrinResi0', '0');\n        await selectToggleById(driver, 'bDisabled0tp', '0');\n        await nextClick(driver);\n        await selectTab(driver, 'Income');\nawait selectTab(driver, 'IncomeProfile');\nawait selectToggleById(driver, 'WorkedInYOR0tp', '1');\n        await clickDivById(driver, 'T40tp');\nawait nextClick(driver);\nawait setInputById(driver, 'T4B140', '10000');\n        await selectComboById(driver, 'T4_Box100tp', 'ON');\n        await nextClick(driver);\n        await nextClick(driver);\n        await selectTab(driver, 'Deduction');\n        await selectTab(driver, 'Investment_Main');\n        await selectToggleById(driver, 'qInvest0tp', '1');\n        await nextClick(driver);\n        await selectToggleById(driver, 'OtherEx0tp', '1');\n        await setInputById(driver, 'CCResources0tp', '500');\n        await nextClick(driver);\n        await nextClick(driver);\n        savedForm = await getServerFile(driver);",
                            "err": {},
                            "uuid": "e52c7b16-eb3f-457f-adae-70965188db2f",
                            "parentUUID": "25e5f415-db17-480e-aed5-4306fb2ae38f",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "afterHooks": [
                        {
                            "title": "\"after all\" hook",
                            "fullTitle": "NetIncome_T691_Ded6--Input F67820 (Form T691) without an amount at F22100 or F23200. Software must not allow.  //(Investment Expenses Tab: Are you claiming investment expenses? Did you pay other expenses such as legal fees related to support payments or other investment expenses ? Legal expenses paid to related to support payments = $ 500) \"after all\" hook",
                            "timedOut": false,
                            "duration": 5952,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "await logoutById(driver);\nawait driver.quit();",
                            "err": {},
                            "uuid": "94a589eb-742a-429c-bf14-ba55f268c7bb",
                            "parentUUID": "25e5f415-db17-480e-aed5-4306fb2ae38f",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "tests": [
                        {
                            "title": " F22100 should be  allowed with amount    allow.value ==500",
                            "fullTitle": "NetIncome_T691_Ded6--Input F67820 (Form T691) without an amount at F22100 or F23200. Software must not allow.  //(Investment Expenses Tab: Are you claiming investment expenses? Did you pay other expenses such as legal fees related to support payments or other investment expenses ? Legal expenses paid to related to support payments = $ 500)  F22100 should be  allowed with amount    allow.value ==500",
                            "timedOut": false,
                            "duration": 1,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let  grossBusinessInvestmentlossFeild = getFieldId('22100');\n\t\tlet  grossBusinessInvestmentloss = savedForm[ grossBusinessInvestmentlossFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+grossBusinessInvestmentloss;\nassert.equal( grossBusinessInvestmentloss, '500', ' Feild should be built');",
                            "err": {},
                            "uuid": "4a8bdfde-7164-4481-a070-fdfcbf05d86f",
                            "parentUUID": "25e5f415-db17-480e-aed5-4306fb2ae38f",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F67820 should be  allowed with amount    allow.value ==1",
                            "fullTitle": "NetIncome_T691_Ded6--Input F67820 (Form T691) without an amount at F22100 or F23200. Software must not allow.  //(Investment Expenses Tab: Are you claiming investment expenses? Did you pay other expenses such as legal fees related to support payments or other investment expenses ? Legal expenses paid to related to support payments = $ 500)  F67820 should be  allowed with amount    allow.value ==1",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let amountOflossCreatedOrIncreasedByCCAAndCarryingChargesOnCertifiedFilmPropertyFeild = getFieldId('67820');\n\t\tlet  amountOflossCreatedOrIncreasedByCCAAndCarryingChargesOnCertifiedFilmProperty = savedForm[  amountOflossCreatedOrIncreasedByCCAAndCarryingChargesOnCertifiedFilmPropertyFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+ amountOflossCreatedOrIncreasedByCCAAndCarryingChargesOnCertifiedFilmProperty;\nassert.equal(   amountOflossCreatedOrIncreasedByCCAAndCarryingChargesOnCertifiedFilmProperty, '1', ' Feild should be built');",
                            "err": {},
                            "uuid": "afca7625-85c4-407a-af9f-f13d11ba0701",
                            "parentUUID": "25e5f415-db17-480e-aed5-4306fb2ae38f",
                            "isHook": false,
                            "skipped": false
                        }
                    ],
                    "suites": [],
                    "passes": [
                        "4a8bdfde-7164-4481-a070-fdfcbf05d86f",
                        "afca7625-85c4-407a-af9f-f13d11ba0701"
                    ],
                    "failures": [],
                    "pending": [],
                    "skipped": [],
                    "duration": 1,
                    "root": false,
                    "rootEmpty": false,
                    "_timeout": 150000
                },
                {
                    "uuid": "4beaa8c0-db57-4244-9b6d-24088a34009d",
                    "title": "NetIncome_T691_Ded7--Input F67820 (Form T691) without an amount at F22100 or F23200. Software must not allow.  //(Investment Expenses Tab: Are you claiming investment expenses? Did you pay other expenses such as legal fees related to support payments or other investment expenses ? Legal expenses paid to related to support payments = $ 500)",
                    "fullFile": "E:\\Rita\\Taxtron\\WebTest\\my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_T691_Ded7.js",
                    "file": "\\my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_T691_Ded7.js",
                    "beforeHooks": [
                        {
                            "title": "\"before all\" hook",
                            "fullTitle": "NetIncome_T691_Ded7--Input F67820 (Form T691) without an amount at F22100 or F23200. Software must not allow.  //(Investment Expenses Tab: Are you claiming investment expenses? Did you pay other expenses such as legal fees related to support payments or other investment expenses ? Legal expenses paid to related to support payments = $ 500) \"before all\" hook",
                            "timedOut": false,
                            "duration": 67182,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "driver = new Builder()\n\t.withCapabilities(Capabilities.chrome().setAcceptInsecureCerts(true))\n\t.build();\ndriver.manage().window().setRect({ width: 1366, height: 768 });\nawait login(driver, 'ritakumar@outlook.com', 'rishu12rashi');\nawait selectNewReturn(driver,province);\nawait switchToastOff(driver);\n        await setInputById(driver, 'Firstnames0', 'FEE');\nawait setInputById(driver, 'Surname0', 'LEE');\nawait selectDateById(driver, 'DOB0', '1975/01/01');\nawait setInputById(driver, 'SIN0', '123123127');\n        await selectComboById(driver, 'MaritalStatus0', 'Single');\n        await selectToggleById(driver, 'domchanged0', '0');\n        await nextClick(driver);\nawait setInputById(driver, 'fullAdd0', '6464 Yonge St, North York, YT M2M 3X4, Canada');\nawait selectToggleById(driver, 'quesFP0', '0');\n        await selectToggleById(driver, 'quesPrinResi0', '0');\n        await selectToggleById(driver, 'bDisabled0tp', '0');\n        await nextClick(driver);\n        await selectTab(driver, 'Income');\nawait selectTab(driver, 'IncomeProfile');\nawait selectToggleById(driver, 'WorkedInYOR0tp', '1');\n        await clickDivById(driver, 'T40tp');\nawait nextClick(driver);\nawait setInputById(driver, 'T4B140', '10000');\n        await selectComboById(driver, 'T4_Box100tp', 'ON');\n        await nextClick(driver);\n        await nextClick(driver);\n        await selectTab(driver, 'Deduction');\n        await selectTab(driver, 'Investment_Main');\n        await selectToggleById(driver, 'qInvest0tp', '1');\n        await nextClick(driver);\n        await selectToggleById(driver, 'OtherEx0tp', '1');\n        await setInputById(driver, 'S4LegalFees0tp', '500');\n        await nextClick(driver);\n        await nextClick(driver);\n        savedForm = await getServerFile(driver);",
                            "err": {},
                            "uuid": "87c93af0-81be-4adb-8cfc-9adfd12e77e1",
                            "parentUUID": "4beaa8c0-db57-4244-9b6d-24088a34009d",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "afterHooks": [],
                    "tests": [
                        {
                            "title": " F22100 should be  allowed with amount    allow.value ==500",
                            "fullTitle": "NetIncome_T691_Ded7--Input F67820 (Form T691) without an amount at F22100 or F23200. Software must not allow.  //(Investment Expenses Tab: Are you claiming investment expenses? Did you pay other expenses such as legal fees related to support payments or other investment expenses ? Legal expenses paid to related to support payments = $ 500)  F22100 should be  allowed with amount    allow.value ==500",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let  grossBusinessInvestmentlossFeild = getFieldId('22100');\n\t\tlet  grossBusinessInvestmentloss = savedForm[ grossBusinessInvestmentlossFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+grossBusinessInvestmentloss;\nassert.equal( grossBusinessInvestmentloss, '500', ' Feild should be built');",
                            "err": {},
                            "uuid": "f128eb03-de79-4a28-87a2-70724f00e440",
                            "parentUUID": "4beaa8c0-db57-4244-9b6d-24088a34009d",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F67820 should be  allowed with amount    allow.value ==1",
                            "fullTitle": "NetIncome_T691_Ded7--Input F67820 (Form T691) without an amount at F22100 or F23200. Software must not allow.  //(Investment Expenses Tab: Are you claiming investment expenses? Did you pay other expenses such as legal fees related to support payments or other investment expenses ? Legal expenses paid to related to support payments = $ 500)  F67820 should be  allowed with amount    allow.value ==1",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let amountOflossCreatedOrIncreasedByCCAAndCarryingChargesOnCertifiedFilmPropertyFeild = getFieldId('67820');\n\t\tlet  amountOflossCreatedOrIncreasedByCCAAndCarryingChargesOnCertifiedFilmProperty = savedForm[  amountOflossCreatedOrIncreasedByCCAAndCarryingChargesOnCertifiedFilmPropertyFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+ amountOflossCreatedOrIncreasedByCCAAndCarryingChargesOnCertifiedFilmProperty;\nassert.equal(   amountOflossCreatedOrIncreasedByCCAAndCarryingChargesOnCertifiedFilmProperty, '1', ' Feild should be built');",
                            "err": {},
                            "uuid": "440615f0-5399-4261-b076-c90169da491a",
                            "parentUUID": "4beaa8c0-db57-4244-9b6d-24088a34009d",
                            "isHook": false,
                            "skipped": false
                        }
                    ],
                    "suites": [],
                    "passes": [
                        "f128eb03-de79-4a28-87a2-70724f00e440",
                        "440615f0-5399-4261-b076-c90169da491a"
                    ],
                    "failures": [],
                    "pending": [],
                    "skipped": [],
                    "duration": 0,
                    "root": false,
                    "rootEmpty": false,
                    "_timeout": 150000
                },
                {
                    "uuid": "5e0b99e6-77b2-4cf0-840d-fbec7261d7c8",
                    "title": "NetIncome_T691_Ded8--Input F67820 (Form T691) without an amount at F22100 or F23200. Software must not allow.  //(Misc. Deduction Tab:  Do you have deductions which are not reported elsewhere? Legal fees = $ 500)",
                    "fullFile": "E:\\Rita\\Taxtron\\WebTest\\my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_T691_Ded8.js",
                    "file": "\\my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_T691_Ded8.js",
                    "beforeHooks": [
                        {
                            "title": "\"before all\" hook",
                            "fullTitle": "NetIncome_T691_Ded8--Input F67820 (Form T691) without an amount at F22100 or F23200. Software must not allow.  //(Misc. Deduction Tab:  Do you have deductions which are not reported elsewhere? Legal fees = $ 500) \"before all\" hook",
                            "timedOut": false,
                            "duration": 67875,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "driver = new Builder()\n\t.withCapabilities(Capabilities.chrome().setAcceptInsecureCerts(true))\n\t.build();\ndriver.manage().window().setRect({ width: 1366, height: 768 });\nawait login(driver, 'ritakumar@outlook.com', 'rishu12rashi');\nawait selectNewReturn(driver,province);\nawait switchToastOff(driver);\n        await setInputById(driver, 'Firstnames0', 'FEE');\nawait setInputById(driver, 'Surname0', 'LEE');\nawait selectDateById(driver, 'DOB0', '1975/01/01');\nawait setInputById(driver, 'SIN0', '123123127');\n        await selectComboById(driver, 'MaritalStatus0', 'Single');\n        await selectToggleById(driver, 'domchanged0', '0');\n        await nextClick(driver);\nawait setInputById(driver, 'fullAdd0', '6464 Yonge St, North York, YT M2M 3X4, Canada');\nawait selectToggleById(driver, 'quesFP0', '0');\n        await selectToggleById(driver, 'quesPrinResi0', '0');\n        await selectToggleById(driver, 'bDisabled0tp', '0');\n        await nextClick(driver);\n        await selectTab(driver, 'Income');\nawait selectTab(driver, 'IncomeProfile');\nawait selectToggleById(driver, 'WorkedInYOR0tp', '1');\n        await clickDivById(driver, 'T40tp');\nawait nextClick(driver);\nawait setInputById(driver, 'T4B140', '10000');\n        await selectComboById(driver, 'T4_Box100tp', 'ON');\n        await nextClick(driver);\n        await nextClick(driver);\n        await selectTab(driver, 'Deduction');\n        await selectTab(driver, 'MiscDeductions');\n        await selectToggleById(driver, 'qaddDeductions0tp', '1');\n        await nextClick(driver);\n        await setInputById(driver, 'SupportLfees0tp', '500');\n        await nextClick(driver);\n        await nextClick(driver);\n        savedForm = await getServerFile(driver);",
                            "err": {},
                            "uuid": "c5dc0d43-6608-49a4-bcbf-f9bfa11ecb41",
                            "parentUUID": "5e0b99e6-77b2-4cf0-840d-fbec7261d7c8",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "afterHooks": [
                        {
                            "title": "\"after all\" hook",
                            "fullTitle": "NetIncome_T691_Ded8--Input F67820 (Form T691) without an amount at F22100 or F23200. Software must not allow.  //(Misc. Deduction Tab:  Do you have deductions which are not reported elsewhere? Legal fees = $ 500) \"after all\" hook",
                            "timedOut": false,
                            "duration": 5787,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "await logoutById(driver);\nawait driver.quit();",
                            "err": {},
                            "uuid": "c2a02a73-01a1-4bcd-acc6-3d10d86d2353",
                            "parentUUID": "5e0b99e6-77b2-4cf0-840d-fbec7261d7c8",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "tests": [
                        {
                            "title": " F23200 should be  allowed with amount    allow.value ==500",
                            "fullTitle": "NetIncome_T691_Ded8--Input F67820 (Form T691) without an amount at F22100 or F23200. Software must not allow.  //(Misc. Deduction Tab:  Do you have deductions which are not reported elsewhere? Legal fees = $ 500)  F23200 should be  allowed with amount    allow.value ==500",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let  otherDeductionsFeild = getFieldId('23200');\n\t\tlet otherDeductions = savedForm[ otherDeductionsFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+otherDeductions;\nassert.equal(otherDeductions, '500', ' Feild should be built');",
                            "err": {},
                            "uuid": "f6ef1502-8136-49d0-bad1-96a3db93b83a",
                            "parentUUID": "5e0b99e6-77b2-4cf0-840d-fbec7261d7c8",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F67820 should be  allowed with amount    allow.value ==1",
                            "fullTitle": "NetIncome_T691_Ded8--Input F67820 (Form T691) without an amount at F22100 or F23200. Software must not allow.  //(Misc. Deduction Tab:  Do you have deductions which are not reported elsewhere? Legal fees = $ 500)  F67820 should be  allowed with amount    allow.value ==1",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let amountOflossCreatedOrIncreasedByCCAAndCarryingChargesOnCertifiedFilmPropertyFeild = getFieldId('67820');\n\t\tlet  amountOflossCreatedOrIncreasedByCCAAndCarryingChargesOnCertifiedFilmProperty = savedForm[  amountOflossCreatedOrIncreasedByCCAAndCarryingChargesOnCertifiedFilmPropertyFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+ amountOflossCreatedOrIncreasedByCCAAndCarryingChargesOnCertifiedFilmProperty;\nassert.equal(   amountOflossCreatedOrIncreasedByCCAAndCarryingChargesOnCertifiedFilmProperty, '1', ' Feild should be built');",
                            "err": {},
                            "uuid": "321bb86a-f4c8-4b07-91ca-c48cb14f5866",
                            "parentUUID": "5e0b99e6-77b2-4cf0-840d-fbec7261d7c8",
                            "isHook": false,
                            "skipped": false
                        }
                    ],
                    "suites": [],
                    "passes": [
                        "f6ef1502-8136-49d0-bad1-96a3db93b83a",
                        "321bb86a-f4c8-4b07-91ca-c48cb14f5866"
                    ],
                    "failures": [],
                    "pending": [],
                    "skipped": [],
                    "duration": 0,
                    "root": false,
                    "rootEmpty": false,
                    "_timeout": 150000
                },
                {
                    "uuid": "adefe804-7a99-41fa-97c9-b83cc8af08ab",
                    "title": "NetIncome_T691_Ded9--Input F67820 (Form T691) without an amount at F22100 or F23200. Software must not allow.  //(Misc. Deduction Tab:  Do you have deductions which are not reported elsewhere? Repayment of shareholder loans = $ 500)",
                    "fullFile": "E:\\Rita\\Taxtron\\WebTest\\my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_T691_Ded9.js",
                    "file": "\\my_work\\test_for_report_2020\\NETINC_2020\\tcNetIncome_T691_Ded9.js",
                    "beforeHooks": [
                        {
                            "title": "\"before all\" hook",
                            "fullTitle": "NetIncome_T691_Ded9--Input F67820 (Form T691) without an amount at F22100 or F23200. Software must not allow.  //(Misc. Deduction Tab:  Do you have deductions which are not reported elsewhere? Repayment of shareholder loans = $ 500) \"before all\" hook",
                            "timedOut": false,
                            "duration": 65063,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "driver = new Builder()\n\t.withCapabilities(Capabilities.chrome().setAcceptInsecureCerts(true))\n\t.build();\ndriver.manage().window().setRect({ width: 1366, height: 768 });\nawait login(driver, 'ritakumar@outlook.com', 'rishu12rashi');\nawait selectNewReturn(driver,province);\nawait switchToastOff(driver);\n        await setInputById(driver, 'Firstnames0', 'FEE');\nawait setInputById(driver, 'Surname0', 'LEE');\nawait selectDateById(driver, 'DOB0', '1975/01/01');\nawait setInputById(driver, 'SIN0', '123123127');\n        await selectComboById(driver, 'MaritalStatus0', 'Single');\n        await selectToggleById(driver, 'domchanged0', '0');\n        await nextClick(driver);\nawait setInputById(driver, 'fullAdd0', '6464 Yonge St, North York, YT M2M 3X4, Canada');\nawait selectToggleById(driver, 'quesFP0', '0');\n        await selectToggleById(driver, 'quesPrinResi0', '0');\n        await selectToggleById(driver, 'bDisabled0tp', '0');\n        await nextClick(driver);\n        await selectTab(driver, 'Income');\nawait selectTab(driver, 'IncomeProfile');\nawait selectToggleById(driver, 'WorkedInYOR0tp', '1');\n        await clickDivById(driver, 'T40tp');\nawait nextClick(driver);\nawait setInputById(driver, 'T4B140', '10000');\n        await selectComboById(driver, 'T4_Box100tp', 'ON');\n        await nextClick(driver);\n        await nextClick(driver);\n        await selectTab(driver, 'Deduction');\n        await selectTab(driver, 'MiscDeductions');\n        await selectToggleById(driver, 'qaddDeductions0tp', '1');\n        await nextClick(driver);\n        await setInputById(driver, 'ShareLoan0tp', '500');\n        await nextClick(driver);\n        await nextClick(driver);\n        savedForm = await getServerFile(driver);",
                            "err": {},
                            "uuid": "09d35244-a366-4010-93c8-47499fe8bc35",
                            "parentUUID": "adefe804-7a99-41fa-97c9-b83cc8af08ab",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "afterHooks": [
                        {
                            "title": "\"after all\" hook",
                            "fullTitle": "NetIncome_T691_Ded9--Input F67820 (Form T691) without an amount at F22100 or F23200. Software must not allow.  //(Misc. Deduction Tab:  Do you have deductions which are not reported elsewhere? Repayment of shareholder loans = $ 500) \"after all\" hook",
                            "timedOut": false,
                            "duration": 5633,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "await logoutById(driver);\nawait driver.quit();",
                            "err": {},
                            "uuid": "c7330040-18fc-445a-b995-278af6694a7b",
                            "parentUUID": "adefe804-7a99-41fa-97c9-b83cc8af08ab",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "tests": [
                        {
                            "title": " F23200 should be  allowed with amount    allow.value ==500",
                            "fullTitle": "NetIncome_T691_Ded9--Input F67820 (Form T691) without an amount at F22100 or F23200. Software must not allow.  //(Misc. Deduction Tab:  Do you have deductions which are not reported elsewhere? Repayment of shareholder loans = $ 500)  F23200 should be  allowed with amount    allow.value ==500",
                            "timedOut": false,
                            "duration": 1,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let  otherDeductionsFeild = getFieldId('23200');\n\t\tlet otherDeductions = savedForm[ otherDeductionsFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+otherDeductions;\nassert.strictEqual(otherDeductions, '500', ' Feild should be built');",
                            "err": {},
                            "uuid": "6ffe3d6d-5e78-4104-aa57-9a45aff44a6e",
                            "parentUUID": "adefe804-7a99-41fa-97c9-b83cc8af08ab",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F67820 should be  allowed with amount    allow.value ==1",
                            "fullTitle": "NetIncome_T691_Ded9--Input F67820 (Form T691) without an amount at F22100 or F23200. Software must not allow.  //(Misc. Deduction Tab:  Do you have deductions which are not reported elsewhere? Repayment of shareholder loans = $ 500)  F67820 should be  allowed with amount    allow.value ==1",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let amountOflossCreatedOrIncreasedByCCAAndCarryingChargesOnCertifiedFilmPropertyFeild = getFieldId('67820');\n\t\tlet  amountOflossCreatedOrIncreasedByCCAAndCarryingChargesOnCertifiedFilmProperty = savedForm[  amountOflossCreatedOrIncreasedByCCAAndCarryingChargesOnCertifiedFilmPropertyFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+ amountOflossCreatedOrIncreasedByCCAAndCarryingChargesOnCertifiedFilmProperty;\nassert.strictEqual(   amountOflossCreatedOrIncreasedByCCAAndCarryingChargesOnCertifiedFilmProperty, '1', ' Feild should be built');",
                            "err": {},
                            "uuid": "ea5a4a6d-4963-4d58-be51-1a0c15131ffd",
                            "parentUUID": "adefe804-7a99-41fa-97c9-b83cc8af08ab",
                            "isHook": false,
                            "skipped": false
                        }
                    ],
                    "suites": [],
                    "passes": [
                        "6ffe3d6d-5e78-4104-aa57-9a45aff44a6e",
                        "ea5a4a6d-4963-4d58-be51-1a0c15131ffd"
                    ],
                    "failures": [],
                    "pending": [],
                    "skipped": [],
                    "duration": 1,
                    "root": false,
                    "rootEmpty": false,
                    "_timeout": 150000
                },
                {
                    "uuid": "fb6db611-e213-4c62-b257-6d0bdccea847",
                    "title": "TaxableIncome_Line252_1 -Input F54960 (restricted farm loss from prior year) without an amount at F14100 (net farming income). Software must not allow.  //(TP=50 years: T4 Box 14=$65,000,T2042, Income $ 35,000)",
                    "fullFile": "E:\\Rita\\Taxtron\\WebTest\\my_work\\test_for_report_2020\\NETINC_2020\\tcTaxableIncome_Line252_1.js",
                    "file": "\\my_work\\test_for_report_2020\\NETINC_2020\\tcTaxableIncome_Line252_1.js",
                    "beforeHooks": [
                        {
                            "title": "\"before all\" hook",
                            "fullTitle": "TaxableIncome_Line252_1 -Input F54960 (restricted farm loss from prior year) without an amount at F14100 (net farming income). Software must not allow.  //(TP=50 years: T4 Box 14=$65,000,T2042, Income $ 35,000) \"before all\" hook",
                            "timedOut": false,
                            "duration": 76834,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "driver = new Builder()\n\t.withCapabilities(Capabilities.chrome().setAcceptInsecureCerts(true))\n\t.build();\ndriver.manage().window().setRect({ width: 1366, height: 768 });\nawait login(driver, 'ritakumar@outlook.com', 'rishu12rashi');\nawait selectNewReturn(driver,province);\nawait switchToastOff(driver);\n        await setInputById(driver, 'Firstnames0', 'FEE');\nawait setInputById(driver, 'Surname0', 'LEE');\n\t    await selectAgeDateById(driver, 'DOB0tp',Fed.TaxYear,'60', '/05/15');\nawait setInputById(driver, 'SIN0', '123123127');\n        await selectComboById(driver, 'MaritalStatus0', 'Single');\n        await selectToggleById(driver, 'domchanged0', '0');\n        await nextClick(driver);\nawait setInputById(driver, 'fullAdd0', '6464 Yonge St, North York, YT M2M 3X4, Canada');\nawait selectToggleById(driver, 'quesFP0', '0');\n        await selectToggleById(driver, 'quesPrinResi0', '0');\n        await nextClick(driver);\n        await selectTab(driver, 'Income');\n        await selectTab(driver, 'IncomeProfile');\n        await selectToggleById(driver, 'WorkedInYOR0tp', '1');\n        await clickDivById(driver, 'T40tp');\nawait selectToggleById(driver, 'SelfEmployed0tp', '1');\n        await nextClick(driver);\n        await setInputById(driver, 'T4B140', '65000');\n        await selectComboById(driver, 'T4_Box100tp', 'ON');\n        await nextClick(driver);\n        await selectToggleById(driver, 'FIncome0tp', '1');\nawait nextClick(driver);\nawait setInputById(driver, 'FarmName0tp', 'CDR');\n        await setInputById(driver, 'FarmRAN0tp', '100000025');\n        await selectSFDDateById(driver, 'T2042_SFDStart0tp', Fed.TaxYear,'0','/01/25');\n        await selectSFDDateById(driver, 'T2042_SFDEnd0tp', Fed.TaxYear,'0','/12/31');\n        await selectComboById(driver, 'FarmSIC0tp', 'Hay Farming ');\n        await selectToggleById(driver, 'T2042AccountingMethod0tp', '1');\n        await nextClick(driver);\n        await setInputById(driver, 'IWheat0tp', '35000');\n        await nextClick(driver);\n        // await setInputById(driver, 'NISA5220tp', '60000');\n        // await nextClick(driver);\n        await selectTab(driver, 'Deduction');\n        await selectTab(driver, 'S3Losses');\n        await selectToggleById(driver, 'S3Profile_10tp', '1');\n        await selectToggleById(driver, 'restricted0tp', '1');\n        await nextClick(driver);\n        await selectComboById(driver, 'RCFClossesCombo0tp', '2018 ');\n        await setInputById(driver, 'RCFClossesval0tp', '50000');\n        await nextClick(driver);\n        await nextClick(driver);\n        savedForm = await getServerFile(driver);",
                            "err": {},
                            "uuid": "09c1fe68-703e-4128-9111-fc92d70f54f2",
                            "parentUUID": "fb6db611-e213-4c62-b257-6d0bdccea847",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "afterHooks": [
                        {
                            "title": "\"after all\" hook",
                            "fullTitle": "TaxableIncome_Line252_1 -Input F54960 (restricted farm loss from prior year) without an amount at F14100 (net farming income). Software must not allow.  //(TP=50 years: T4 Box 14=$65,000,T2042, Income $ 35,000) \"after all\" hook",
                            "timedOut": false,
                            "duration": 5663,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "await logoutById(driver);\nawait driver.quit();",
                            "err": {},
                            "uuid": "d1d64455-21aa-4379-8050-7a4d7fd2d183",
                            "parentUUID": "fb6db611-e213-4c62-b257-6d0bdccea847",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "tests": [
                        {
                            "title": " F10100 should be  allowed with amount    allow.value ==65000",
                            "fullTitle": "TaxableIncome_Line252_1 -Input F54960 (restricted farm loss from prior year) without an amount at F14100 (net farming income). Software must not allow.  //(TP=50 years: T4 Box 14=$65,000,T2042, Income $ 35,000)  F10100 should be  allowed with amount    allow.value ==65000",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let employmentIncomeFromT4SlipsFeild = getFieldId('10100');\n\t\tlet employmentIncomeFromT4Slips = savedForm[  employmentIncomeFromT4SlipsFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+ employmentIncomeFromT4Slips;\nassert.strictEqual(   employmentIncomeFromT4Slips, '65000', ' Feild should be built');",
                            "err": {},
                            "uuid": "eec66606-dcaf-4eec-bc76-a157d7a90604",
                            "parentUUID": "fb6db611-e213-4c62-b257-6d0bdccea847",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F14100 should be  allowed with amount    allow.value ==35000",
                            "fullTitle": "TaxableIncome_Line252_1 -Input F54960 (restricted farm loss from prior year) without an amount at F14100 (net farming income). Software must not allow.  //(TP=50 years: T4 Box 14=$65,000,T2042, Income $ 35,000)  F14100 should be  allowed with amount    allow.value ==35000",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let netFarmingIncomelossFeild = getFieldId('14100');\n\t\tlet netFarmingIncomeloss = savedForm[ netFarmingIncomelossFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+ netFarmingIncomeloss;\nassert.strictEqual( netFarmingIncomeloss, '35000', ' Feild should be built');",
                            "err": {},
                            "uuid": "a5a7210c-36a6-4248-8d71-4fba7598179d",
                            "parentUUID": "fb6db611-e213-4c62-b257-6d0bdccea847",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F54960 should be  allowed with amount    allow.value ==35000",
                            "fullTitle": "TaxableIncome_Line252_1 -Input F54960 (restricted farm loss from prior year) without an amount at F14100 (net farming income). Software must not allow.  //(TP=50 years: T4 Box 14=$65,000,T2042, Income $ 35,000)  F54960 should be  allowed with amount    allow.value ==35000",
                            "timedOut": false,
                            "duration": 1,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let restrictedFarmlossFeild = getFieldId('54960');\n\t\tlet restrictedFarmloss = savedForm[ restrictedFarmlossFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+ restrictedFarmloss;\nassert.strictEqual( restrictedFarmloss, '35000', ' Feild should be built');",
                            "err": {},
                            "uuid": "6b708b69-c1da-4a62-be33-856a832db2a8",
                            "parentUUID": "fb6db611-e213-4c62-b257-6d0bdccea847",
                            "isHook": false,
                            "skipped": false
                        }
                    ],
                    "suites": [],
                    "passes": [
                        "eec66606-dcaf-4eec-bc76-a157d7a90604",
                        "a5a7210c-36a6-4248-8d71-4fba7598179d",
                        "6b708b69-c1da-4a62-be33-856a832db2a8"
                    ],
                    "failures": [],
                    "pending": [],
                    "skipped": [],
                    "duration": 1,
                    "root": false,
                    "rootEmpty": false,
                    "_timeout": 150000
                },
                {
                    "uuid": "5f64616c-d419-41fd-b187-99e2cd53e165",
                    "title": "TaxableIncome_252_10 Create a return with amounts deducted at any of fields 20700 to 25600, 54920, and/or 54960 such that F26000 (taxable income) is negative. Software must allow. Software must build F26000 to 0 if the calculated amount is negative.   //(T4= Box 14 =$ 15,000. Misc.Deduction>Losses> Do you have deductions which are not reported elsewhere? , Other deductions =$ 20,000.) ",
                    "fullFile": "E:\\Rita\\Taxtron\\WebTest\\my_work\\test_for_report_2020\\NETINC_2020\\tcTaxableIncome_Line252_10.js",
                    "file": "\\my_work\\test_for_report_2020\\NETINC_2020\\tcTaxableIncome_Line252_10.js",
                    "beforeHooks": [
                        {
                            "title": "\"before all\" hook",
                            "fullTitle": "TaxableIncome_252_10 Create a return with amounts deducted at any of fields 20700 to 25600, 54920, and/or 54960 such that F26000 (taxable income) is negative. Software must allow. Software must build F26000 to 0 if the calculated amount is negative.   //(T4= Box 14 =$ 15,000. Misc.Deduction>Losses> Do you have deductions which are not reported elsewhere? , Other deductions =$ 20,000.)  \"before all\" hook",
                            "timedOut": false,
                            "duration": 63126,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "driver = new Builder()\n\t.withCapabilities(Capabilities.chrome().setAcceptInsecureCerts(true))\n\t.build();\ndriver.manage().window().setRect({ width: 1366, height: 768 });\nawait login(driver, 'ritakumar@outlook.com', 'rishu12rashi');\nawait selectNewReturn(driver,province);\nawait switchToastOff(driver);\n        await setInputById(driver, 'Firstnames0', 'henry');\nawait setInputById(driver, 'Surname0', 'Farm');\nawait selectDateById(driver, 'DOB0', '1975/01/01');\nawait setInputById(driver, 'SIN0', '100000009');\nawait selectComboById(driver, 'MaritalStatus0', 'Single');\nawait nextClick(driver);\nawait addressExpandClick(driver, 'fullAdd');\nawait setInputById(driver, 'StreetNo0', '11');\nawait setInputById(driver, 'StreetName0', 'bn');\nawait setInputById(driver, 'City0', 'nb');\nawait selectComboById(driver, 'ProvinceOfRes0', 'Northwest Territories');\n        await setInputById(driver, 'PCodeC0', 'X0E 0A0');\n       await selectToggleById(driver, 'quesFP0', '0');\nawait selectToggleById(driver, 'quesPrinResi0', '0');\nawait selectToggleById(driver, 'qCitizen0', '1');\nawait selectToggleById(driver, 'allowCra0', '1');\n        await nextClick(driver);\nawait selectTab(driver, 'Income');\nawait selectToggleById(driver, 'WorkedInYOR0', '1');\n        await clickDivById(driver, 'T40tp');\n        await nextClick(driver);\n        await setInputById(driver, 'T4B140', '15000');\n        await selectComboById(driver, 'T4_Box100', 'NT');\n        await nextClick(driver);\n        await selectTab(driver, 'Deduction');\n        await selectTab(driver, 'MiscDeductions');\nawait selectToggleById(driver, 'qaddDeductions0tp', '1');\n        await nextClick(driver);\n        await setInputById(driver, 'ADOtherAmount0tp', '20000');\n        await nextClick(driver);\n        savedForm = await getServerFile(driver);",
                            "err": {},
                            "uuid": "6ef2fb79-4880-462a-9b29-3bed1d9bc655",
                            "parentUUID": "5f64616c-d419-41fd-b187-99e2cd53e165",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "afterHooks": [
                        {
                            "title": "\"after all\" hook",
                            "fullTitle": "TaxableIncome_252_10 Create a return with amounts deducted at any of fields 20700 to 25600, 54920, and/or 54960 such that F26000 (taxable income) is negative. Software must allow. Software must build F26000 to 0 if the calculated amount is negative.   //(T4= Box 14 =$ 15,000. Misc.Deduction>Losses> Do you have deductions which are not reported elsewhere? , Other deductions =$ 20,000.)  \"after all\" hook",
                            "timedOut": false,
                            "duration": 1785,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "await logoutById(driver);\nawait driver.quit();",
                            "err": {},
                            "uuid": "2c4b4576-cc05-40f8-8b87-f6b7c831f0cd",
                            "parentUUID": "5f64616c-d419-41fd-b187-99e2cd53e165",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "tests": [
                        {
                            "title": " F10100 should be  allowed with amount    allow.value ==15000",
                            "fullTitle": "TaxableIncome_252_10 Create a return with amounts deducted at any of fields 20700 to 25600, 54920, and/or 54960 such that F26000 (taxable income) is negative. Software must allow. Software must build F26000 to 0 if the calculated amount is negative.   //(T4= Box 14 =$ 15,000. Misc.Deduction>Losses> Do you have deductions which are not reported elsewhere? , Other deductions =$ 20,000.)   F10100 should be  allowed with amount    allow.value ==15000",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let employmentIncomeFromT4SlipsFeild = getFieldId('10100');\nlet employmentIncomeFromT4Slips = savedForm[  employmentIncomeFromT4SlipsFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ employmentIncomeFromT4Slips;\nassert.strictEqual(   employmentIncomeFromT4Slips, '15000', ' Feild should be built');",
                            "err": {},
                            "uuid": "f213085b-7b2a-4c42-adde-97485d4c8a08",
                            "parentUUID": "5f64616c-d419-41fd-b187-99e2cd53e165",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": "  F25600 Software must  allow.   allow.value ==20000",
                            "fullTitle": "TaxableIncome_252_10 Create a return with amounts deducted at any of fields 20700 to 25600, 54920, and/or 54960 such that F26000 (taxable income) is negative. Software must allow. Software must build F26000 to 0 if the calculated amount is negative.   //(T4= Box 14 =$ 15,000. Misc.Deduction>Losses> Do you have deductions which are not reported elsewhere? , Other deductions =$ 20,000.)    F25600 Software must  allow.   allow.value ==20000",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let additionalDeductionsFeild = getFieldId('25600');\n\t\tlet additionalDeductions = savedForm[additionalDeductionsFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+additionalDeductions;\nassert.strictEqual(additionalDeductions , '20000','F25600 should be built .');",
                            "err": {},
                            "uuid": "3b1355f0-d9da-41a1-b388-bb979244ec3b",
                            "parentUUID": "5f64616c-d419-41fd-b187-99e2cd53e165",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": "  F26000 Software must  allow.   allow.value ==undefined",
                            "fullTitle": "TaxableIncome_252_10 Create a return with amounts deducted at any of fields 20700 to 25600, 54920, and/or 54960 such that F26000 (taxable income) is negative. Software must allow. Software must build F26000 to 0 if the calculated amount is negative.   //(T4= Box 14 =$ 15,000. Misc.Deduction>Losses> Do you have deductions which are not reported elsewhere? , Other deductions =$ 20,000.)    F26000 Software must  allow.   allow.value ==undefined",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let taxableIncomeFeild = getFieldId('26000');\n\t\tlet taxableIncome = savedForm[taxableIncomeFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+taxableIncome;\nassert.strictEqual(taxableIncome , undefined,'F26000 should be built .');",
                            "err": {},
                            "uuid": "ac82a169-437e-4188-bd76-169e5b08c696",
                            "parentUUID": "5f64616c-d419-41fd-b187-99e2cd53e165",
                            "isHook": false,
                            "skipped": false
                        }
                    ],
                    "suites": [],
                    "passes": [
                        "f213085b-7b2a-4c42-adde-97485d4c8a08",
                        "3b1355f0-d9da-41a1-b388-bb979244ec3b",
                        "ac82a169-437e-4188-bd76-169e5b08c696"
                    ],
                    "failures": [],
                    "pending": [],
                    "skipped": [],
                    "duration": 0,
                    "root": false,
                    "rootEmpty": false,
                    "_timeout": 150000
                },
                {
                    "uuid": "78d9c14b-e89d-4bdc-838e-5b90cb636379",
                    "title": "TaxableIncome_Line252_2.1(SP)--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14=$65,000, SP, T4 Box 14 =$ 50,000, T2042:Income $ 35,000, Farming Expenses =$ 60,000. Hobby Farm =Yes. Farm is shared 50%-50%).  ",
                    "fullFile": "E:\\Rita\\Taxtron\\WebTest\\my_work\\test_for_report_2020\\NETINC_2020\\tcTaxableIncome_Line252_2.1.js",
                    "file": "\\my_work\\test_for_report_2020\\NETINC_2020\\tcTaxableIncome_Line252_2.1.js",
                    "beforeHooks": [
                        {
                            "title": "\"before all\" hook",
                            "fullTitle": "TaxableIncome_Line252_2.1(SP)--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14=$65,000, SP, T4 Box 14 =$ 50,000, T2042:Income $ 35,000, Farming Expenses =$ 60,000. Hobby Farm =Yes. Farm is shared 50%-50%).   \"before all\" hook",
                            "timedOut": false,
                            "duration": 89172,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "driver = new Builder()\n    .withCapabilities(Capabilities.chrome().setAcceptInsecureCerts(true))\n    .build();\ndriver.manage().window().setRect({ width: 1366, height: 768 });\nawait login(driver, 'ritakumar@outlook.com', 'rishu12rashi');\nawait selectNewReturn(driver,province);\nawait switchToastOff(driver);\n    \nawait nextClick(driver);\nawait setInputById(driver, 'Firstnames0', 'king');\nawait setInputById(driver, 'Surname0', 'smith');\nawait selectDateById(driver, 'DOB0', '1968/10/10');\nawait setInputById(driver, 'SIN0', '100000009');\nawait selectComboById(driver, 'MaritalStatus0', 'Common-law');\nawait selectToggleById(driver, 'domchanged0', '0');\nawait selectToggleById(driver, 'IsLinkedReturn0', '1');\nawait nextClick(driver);\nawait addressExpandClick(driver, 'fullAdd');\nawait setInputById(driver, 'StreetNo0', '25');\nawait setInputById(driver, 'StreetName0', 'JANE ST');\nawait setInputById(driver, 'City0', 'ETOBICOKE');\nawait selectComboById(driver, 'ProvinceOfRes0', 'Manitoba');\nawait setInputById(driver, 'PCodeC0', 'R0H 1N1');\nawait selectToggleById(driver, 'quesFP0', '0');\nawait selectToggleById(driver, 'quesPrinResi0', '0');\nawait selectToggleById(driver, 'qCitizen0', '0');\nawait nextClick(driver);\nawait nextClick(driver);\nawait setInputById(driver, 'Firstnames0sp', 'jone');\nawait setInputById(driver, 'Surname0sp', 'smith');\nawait selectDateById(driver, 'DOB0sp', '1968/10/10');\nawait setInputById(driver, 'SIN0sp', '100000025');\nawait selectComboById(driver, 'Province0sp', 'British Columbia');\nawait nextClick(driver);\nawait selectTab(driver, 'Income');\nawait selectTab(driver, 'IncomeProfile');\nawait selectToggleById(driver, 'WorkedInYOR0tp', '1');\nawait clickDivById(driver, 'T40tp');\n\t\t    await selectToggleById(driver, 'SelfEmployed0tp', '1');\nawait nextClick(driver);\nawait selectToggleById(driver, 'WorkedInYOR0sp', '1');\nawait clickDivById(driver, 'T40sp');\nawait nextClick(driver);\nawait setInputById(driver, 'T4B140', '65000');\nawait selectComboById(driver, 'T4_Box100tp', 'ON');\nawait nextClick(driver);\nawait setInputById(driver, 'T4B140sp', '50000');\nawait selectComboById(driver, 'T4_Box100sp', 'ON');\nawait nextClick(driver);\nawait selectToggleById(driver, 'FIncome0tp', '1');\nawait nextClick(driver);\nawait setInputById(driver, 'FarmName0tp', 'CDR');\nawait setInputById(driver, 'FarmRAN0tp', '100000025');\nawait selectSFDDateById(driver, 'T2042_SFDStart0tp', Fed.TaxYear,'0','/01/25');\nawait selectSFDDateById(driver, 'T2042_SFDEnd0tp', Fed.TaxYear,'0','/12/31');\nawait selectComboById(driver, 'FarmSIC0tp', 'Hay Farming ');\nawait selectToggleById(driver, 'T2042AccountingMethod0tp', '1');\nawait selectToggleById(driver, 'RFLCheck0tp', '1');\nawait selectToggleById(driver, 'partnership0tp', '1');\nawait selectToggleById(driver, 'iSpartnershipWithSp0tp', '1');\nawait setInputById(driver, 'FarmPSpShare0tp', '50');\nawait setInputById(driver, 'FarmPTPShare0tp', '50');\nawait nextClick(driver);\nawait setInputById(driver, 'IWheat0tp', '35000');\nawait nextClick(driver);\nawait setInputById(driver, 'NISA5220tp', '60000');\nawait nextClick(driver);\nsavedForm = await getServerFileSp(driver,'sp');",
                            "err": {},
                            "uuid": "6b673119-aee6-4794-a729-1a468750170f",
                            "parentUUID": "78d9c14b-e89d-4bdc-838e-5b90cb636379",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "afterHooks": [
                        {
                            "title": "\"after all\" hook",
                            "fullTitle": "TaxableIncome_Line252_2.1(SP)--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14=$65,000, SP, T4 Box 14 =$ 50,000, T2042:Income $ 35,000, Farming Expenses =$ 60,000. Hobby Farm =Yes. Farm is shared 50%-50%).   \"after all\" hook",
                            "timedOut": false,
                            "duration": 5502,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "await logoutById(driver);\nawait driver.quit();",
                            "err": {},
                            "uuid": "361f6eb2-de31-4f43-a0a6-d2b80a6e3c75",
                            "parentUUID": "78d9c14b-e89d-4bdc-838e-5b90cb636379",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "tests": [
                        {
                            "title": " F10100 should be  allowed with amount    allow.value ==50000",
                            "fullTitle": "TaxableIncome_Line252_2.1(SP)--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14=$65,000, SP, T4 Box 14 =$ 50,000, T2042:Income $ 35,000, Farming Expenses =$ 60,000. Hobby Farm =Yes. Farm is shared 50%-50%).    F10100 should be  allowed with amount    allow.value ==50000",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let employmentIncomeFromT4SlipsFeild = getFieldId('10100');\nlet employmentIncomeFromT4Slips = savedForm[  employmentIncomeFromT4SlipsFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ employmentIncomeFromT4Slips;\nassert.strictEqual(   employmentIncomeFromT4Slips, '50000', ' Feild should be built');",
                            "err": {},
                            "uuid": "df2d6ffd-cf2a-4db4-875d-37200bfad55f",
                            "parentUUID": "78d9c14b-e89d-4bdc-838e-5b90cb636379",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F14100 should be  allowed with amount    allow.value ==-12500",
                            "fullTitle": "TaxableIncome_Line252_2.1(SP)--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14=$65,000, SP, T4 Box 14 =$ 50,000, T2042:Income $ 35,000, Farming Expenses =$ 60,000. Hobby Farm =Yes. Farm is shared 50%-50%).    F14100 should be  allowed with amount    allow.value ==-12500",
                            "timedOut": false,
                            "duration": 1,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let netFarmingIncomelossFeild = getFieldId('14100');\nlet netFarmingIncomeloss = savedForm[ netFarmingIncomelossFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ netFarmingIncomeloss;\nassert.strictEqual( netFarmingIncomeloss, '-12500', ' Feild should be built');",
                            "err": {},
                            "uuid": "98ea0bd2-53c8-4c63-acd8-e5392e03fa67",
                            "parentUUID": "78d9c14b-e89d-4bdc-838e-5b90cb636379",
                            "isHook": false,
                            "skipped": false
                        }
                    ],
                    "suites": [],
                    "passes": [
                        "df2d6ffd-cf2a-4db4-875d-37200bfad55f",
                        "98ea0bd2-53c8-4c63-acd8-e5392e03fa67"
                    ],
                    "failures": [],
                    "pending": [],
                    "skipped": [],
                    "duration": 1,
                    "root": false,
                    "rootEmpty": false,
                    "_timeout": 150000
                },
                {
                    "uuid": "1b54d01d-dba2-4848-a393-ddb1ba065ebf",
                    "title": "TaxableIncome_Line252_2 (TP)--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14=$65,000, SP, T4 Box 14 =$ 50,000, T2042:Income $ 35,000, Farming Expenses =$ 60,000. Hobby Farm =Yes. Farm is shared 50%-50%).  ",
                    "fullFile": "E:\\Rita\\Taxtron\\WebTest\\my_work\\test_for_report_2020\\NETINC_2020\\tcTaxableIncome_Line252_2.js",
                    "file": "\\my_work\\test_for_report_2020\\NETINC_2020\\tcTaxableIncome_Line252_2.js",
                    "beforeHooks": [
                        {
                            "title": "\"before all\" hook",
                            "fullTitle": "TaxableIncome_Line252_2 (TP)--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14=$65,000, SP, T4 Box 14 =$ 50,000, T2042:Income $ 35,000, Farming Expenses =$ 60,000. Hobby Farm =Yes. Farm is shared 50%-50%).   \"before all\" hook",
                            "timedOut": false,
                            "duration": 87576,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "driver = new Builder()\n    .withCapabilities(Capabilities.chrome().setAcceptInsecureCerts(true))\n    .build();\ndriver.manage().window().setRect({ width: 1366, height: 768 });\nawait login(driver, 'ritakumar@outlook.com', 'rishu12rashi');\nawait selectNewReturn(driver,province);\nawait switchToastOff(driver);\n    \nawait nextClick(driver);\nawait setInputById(driver, 'Firstnames0', 'king');\nawait setInputById(driver, 'Surname0', 'smith');\nawait selectDateById(driver, 'DOB0', '1968/10/10');\nawait setInputById(driver, 'SIN0', '100000009');\nawait selectComboById(driver, 'MaritalStatus0', 'Common-law');\nawait selectToggleById(driver, 'domchanged0', '0');\nawait selectToggleById(driver, 'IsLinkedReturn0', '1');\nawait nextClick(driver);\nawait addressExpandClick(driver, 'fullAdd');\nawait setInputById(driver, 'StreetNo0', '25');\nawait setInputById(driver, 'StreetName0', 'JANE ST');\nawait setInputById(driver, 'City0', 'ETOBICOKE');\nawait selectComboById(driver, 'ProvinceOfRes0', 'Manitoba');\nawait setInputById(driver, 'PCodeC0', 'R0H 1N1');\nawait selectToggleById(driver, 'quesFP0', '0');\nawait selectToggleById(driver, 'quesPrinResi0', '0');\nawait selectToggleById(driver, 'qCitizen0', '0');\nawait nextClick(driver);\nawait nextClick(driver);\nawait setInputById(driver, 'Firstnames0sp', 'jone');\nawait setInputById(driver, 'Surname0sp', 'smith');\nawait selectDateById(driver, 'DOB0sp', '1968/10/10');\nawait setInputById(driver, 'SIN0sp', '100000025');\nawait selectComboById(driver, 'Province0sp', 'British Columbia');\nawait nextClick(driver);\nawait selectTab(driver, 'Income');\nawait selectTab(driver, 'IncomeProfile');\nawait selectToggleById(driver, 'WorkedInYOR0tp', '1');\nawait clickDivById(driver, 'T40tp');\n\t\t    await selectToggleById(driver, 'SelfEmployed0tp', '1');\nawait nextClick(driver);\nawait selectToggleById(driver, 'WorkedInYOR0sp', '1');\nawait clickDivById(driver, 'T40sp');\nawait nextClick(driver);\nawait setInputById(driver, 'T4B140', '65000');\nawait selectComboById(driver, 'T4_Box100tp', 'ON');\nawait nextClick(driver);\nawait setInputById(driver, 'T4B140sp', '50000');\nawait selectComboById(driver, 'T4_Box100sp', 'ON');\nawait nextClick(driver);\nawait selectToggleById(driver, 'FIncome0tp', '1');\nawait nextClick(driver);\nawait setInputById(driver, 'FarmName0tp', 'CDR');\nawait setInputById(driver, 'FarmRAN0tp', '100000025');\nawait selectSFDDateById(driver, 'T2042_SFDStart0tp', Fed.TaxYear,'0','/01/25');\nawait selectSFDDateById(driver, 'T2042_SFDEnd0tp', Fed.TaxYear,'0','/12/31');\nawait selectComboById(driver, 'FarmSIC0tp', 'Hay Farming ');\nawait selectToggleById(driver, 'T2042AccountingMethod0tp', '1');\nawait selectToggleById(driver, 'RFLCheck0tp', '1');\nawait selectToggleById(driver, 'partnership0tp', '1');\nawait selectToggleById(driver, 'iSpartnershipWithSp0tp', '1');\nawait setInputById(driver, 'FarmPSpShare0tp', '50');\nawait setInputById(driver, 'FarmPTPShare0tp', '50');\nawait nextClick(driver);\nawait setInputById(driver, 'IWheat0tp', '35000');\nawait nextClick(driver);\nawait setInputById(driver, 'NISA5220tp', '60000');\nawait nextClick(driver);\nsavedForm = await getServerFile(driver);",
                            "err": {},
                            "uuid": "5b31cada-1789-4183-935a-4e7635e42354",
                            "parentUUID": "1b54d01d-dba2-4848-a393-ddb1ba065ebf",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "afterHooks": [
                        {
                            "title": "\"after all\" hook",
                            "fullTitle": "TaxableIncome_Line252_2 (TP)--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14=$65,000, SP, T4 Box 14 =$ 50,000, T2042:Income $ 35,000, Farming Expenses =$ 60,000. Hobby Farm =Yes. Farm is shared 50%-50%).   \"after all\" hook",
                            "timedOut": false,
                            "duration": 5698,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "await logoutById(driver);\nawait driver.quit();",
                            "err": {},
                            "uuid": "e3902376-6ffa-42e9-b215-51e0e5a025da",
                            "parentUUID": "1b54d01d-dba2-4848-a393-ddb1ba065ebf",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "tests": [
                        {
                            "title": " F10100 should be  allowed with amount    allow.value ==65000",
                            "fullTitle": "TaxableIncome_Line252_2 (TP)--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14=$65,000, SP, T4 Box 14 =$ 50,000, T2042:Income $ 35,000, Farming Expenses =$ 60,000. Hobby Farm =Yes. Farm is shared 50%-50%).    F10100 should be  allowed with amount    allow.value ==65000",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let employmentIncomeFromT4SlipsFeild = getFieldId('10100');\nlet employmentIncomeFromT4Slips = savedForm[  employmentIncomeFromT4SlipsFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ employmentIncomeFromT4Slips;\nassert.strictEqual(   employmentIncomeFromT4Slips, '65000', ' Feild should be built');",
                            "err": {},
                            "uuid": "ecf9e985-d9b2-42ef-ab98-221398902b38",
                            "parentUUID": "1b54d01d-dba2-4848-a393-ddb1ba065ebf",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F14100 should be  allowed with amount    allow.value ==-7500",
                            "fullTitle": "TaxableIncome_Line252_2 (TP)--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14=$65,000, SP, T4 Box 14 =$ 50,000, T2042:Income $ 35,000, Farming Expenses =$ 60,000. Hobby Farm =Yes. Farm is shared 50%-50%).    F14100 should be  allowed with amount    allow.value ==-7500",
                            "timedOut": false,
                            "duration": 0,
                            "state": "failed",
                            "speed": null,
                            "pass": false,
                            "fail": true,
                            "pending": false,
                            "context": null,
                            "code": "let netFarmingIncomelossFeild = getFieldId('14100');\nlet netFarmingIncomeloss = savedForm[ netFarmingIncomelossFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ netFarmingIncomeloss;\nassert.strictEqual( netFarmingIncomeloss, '-12500', ' Feild should be built');",
                            "err": {
                                "message": "AssertionError:  Feild should be built",
                                "estack": "AssertionError [ERR_ASSERTION]:  Feild should be built\n    at Context.<anonymous> (my_work\\test_for_report_2020\\NETINC_2020\\tcTaxableIncome_Line252_2.js:96:20)\n    at processImmediate (internal/timers.js:456:21)",
                                "diff": "- -7500\n+ -12500\n"
                            },
                            "uuid": "f4138b46-0b1a-4fbc-9c1e-2e2e627605ab",
                            "parentUUID": "1b54d01d-dba2-4848-a393-ddb1ba065ebf",
                            "isHook": false,
                            "skipped": false
                        }
                    ],
                    "suites": [],
                    "passes": [
                        "ecf9e985-d9b2-42ef-ab98-221398902b38"
                    ],
                    "failures": [
                        "f4138b46-0b1a-4fbc-9c1e-2e2e627605ab"
                    ],
                    "pending": [],
                    "skipped": [],
                    "duration": 0,
                    "root": false,
                    "rootEmpty": false,
                    "_timeout": 150000
                },
                {
                    "uuid": "1b5a6f30-dc82-4260-8e94-a9fd24ac892e",
                    "title": "TaxableIncome_Line252_3--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: T2042, Partnership =Yes, Shared with Spouse= Yes. Farm is shared 50%-50%, Yes to Hobby Farm.).  ",
                    "fullFile": "E:\\Rita\\Taxtron\\WebTest\\my_work\\test_for_report_2020\\NETINC_2020\\tcTaxableIncome_Line252_3.1.js",
                    "file": "\\my_work\\test_for_report_2020\\NETINC_2020\\tcTaxableIncome_Line252_3.1.js",
                    "beforeHooks": [
                        {
                            "title": "\"before all\" hook for \" F14100 should be  allowed with amount  \"",
                            "fullTitle": "TaxableIncome_Line252_3--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: T2042, Partnership =Yes, Shared with Spouse= Yes. Farm is shared 50%-50%, Yes to Hobby Farm.).   \"before all\" hook for \" F14100 should be  allowed with amount  \"",
                            "timedOut": false,
                            "duration": 103619,
                            "state": "failed",
                            "speed": null,
                            "pass": false,
                            "fail": true,
                            "pending": false,
                            "context": null,
                            "code": "driver = new Builder()\n    .withCapabilities(Capabilities.chrome().setAcceptInsecureCerts(true))\n    .build();\ndriver.manage().window().setRect({ width: 1366, height: 768 });\nawait login(driver, 'ritakumar@outlook.com', 'rishu12rashi');\nawait selectNewReturn(driver,province);\nawait switchToastOff(driver);\n    \nawait nextClick(driver);\nawait setInputById(driver, 'Firstnames0', 'king');\nawait setInputById(driver, 'Surname0', 'smith');\nawait selectDateById(driver, 'DOB0', '1968/10/10');\nawait setInputById(driver, 'SIN0', '100000009');\nawait selectComboById(driver, 'MaritalStatus0', 'Common-law');\nawait selectToggleById(driver, 'domchanged0', '0');\nawait selectToggleById(driver, 'IsLinkedReturn0', '1');\nawait nextClick(driver);\nawait addressExpandClick(driver, 'fullAdd');\nawait setInputById(driver, 'StreetNo0', '25');\nawait setInputById(driver, 'StreetName0', 'JANE ST');\nawait setInputById(driver, 'City0', 'ETOBICOKE');\nawait selectComboById(driver, 'ProvinceOfRes0', 'Manitoba');\nawait setInputById(driver, 'PCodeC0', 'R0H 1N1');\nawait selectToggleById(driver, 'quesFP0', '0');\nawait selectToggleById(driver, 'quesPrinResi0', '0');\nawait selectToggleById(driver, 'qCitizen0', '0');\nawait nextClick(driver);\nawait nextClick(driver);\nawait setInputById(driver, 'Firstnames0sp', 'jone');\nawait setInputById(driver, 'Surname0sp', 'smith');\nawait selectDateById(driver, 'DOB0sp', '1968/10/10');\nawait setInputById(driver, 'SIN0sp', '100000025');\nawait selectComboById(driver, 'Province0sp', 'British Columbia');\nawait nextClick(driver);\nawait selectTab(driver, 'Income');\nawait selectTab(driver, 'IncomeProfile');\nawait selectToggleById(driver, 'SelfEmployed0tp', '1');\nawait nextClick(driver);\nawait selectToggleById(driver, 'WorkedInYOR0sp', '0');\nawait nextClick(driver);\nawait selectToggleById(driver, 'FIncome0tp', '1');\nawait nextClick(driver);\nawait setInputById(driver, 'FarmName0tp', 'CDR');\nawait setInputById(driver, 'FarmProduct0tp', 'CHICKEN');\nawait setInputById(driver, 'FarmRAN0tp', '100000025');\nawait selectSFDDateById(driver, 'T2042_SFDStart0tp', Fed.TaxYear,'0','/01/25');\nawait selectSFDDateById(driver, 'T2042_SFDEnd0tp', Fed.TaxYear,'0','/12/31');\nawait selectComboById(driver, 'FarmSIC0tp', 'Hay Farming ');\nawait selectToggleById(driver, 'T2042AccountingMethod0tp', '1');\nawait selectToggleById(driver, 'RFLCheck0tp', '1');\nawait selectToggleById(driver, 'partnership0tp', '1');\nawait selectToggleById(driver, 'iSpartnershipWithSp0tp', '1');\nawait setInputById(driver, 'FarmPSpShare0tp', '50');\nawait setInputById(driver, 'FarmPTPShare0tp', '50');\nawait nextClick(driver);\nawait setInputById(driver, 'IWheat0tp', '1');\nawait setInputById(driver, 'IOats0tp', '2');\nawait setInputById(driver, 'IBarley0tp', '3');\nawait setInputById(driver, 'IMixedgrains0tp', '4');\nawait setInputById(driver, 'Icorn0tp', '5');\nawait setInputById(driver, 'ICanola0tp', '6');\nawait setInputById(driver, 'IFlaxseed0tp', '7');\nawait setInputById(driver, 'ISoyabeans0tp', '8');\nawait setInputById(driver, 'Line93700tp', '9');\nawait setInputById(driver, 'Line94210tp', '10');\nawait setInputById(driver, 'Line94220tp', '11');\nawait setInputById(driver, 'Line94230tp', '12');\nawait setInputById(driver, 'Line94240tp', '13');\nawait setInputById(driver, 'Line94200tp', '14');\nawait setInputById(driver, 'Line94250tp', '15');\nawait setInputById(driver, 'Line94260tp', '16');\nawait selectToggleById(driver, 'livestocksale0tp', '1');\nawait setInputById(driver, 'Line94710tp', '17');\nawait setInputById(driver, 'Line94720tp', '18');\nawait setInputById(driver, 'Line94730tp', '19');\nawait setInputById(driver, 'Line94740tp', '20');\nawait setInputById(driver, 'Line94700tp', '21');\nawait setInputById(driver, 'Line94760tp', '22');\nawait setInputById(driver, 'Line94770tp', '23');\nawait setInputById(driver, 'Line95200tp', '24');\nawait selectToggleById(driver, 'paymentreceived0tp', '1');\nawait setInputById(driver, 'FLine4750tp', '25');\nawait setInputById(driver, 'FLine4800tp', '26');\nawait setInputById(driver, 'Line95700tp', '27');\nawait setInputById(driver, 'NISA5020tp', '28');\nawait setInputById(driver, 'Line96040tp', '29');\nawait setInputById(driver, 'NISA5030tp', '30');\nawait setInputById(driver, 'Line95400tp', '31');\nawait setInputById(driver, 'T2042_1100tp', '32');\nawait nextClick(driver);\nawait setInputById(driver, 'NISA5220tp', '100');\nawait setInputById(driver, 'NISA5180tp', '200');\nawait setInputById(driver, 'NISA5140tp', '300');\nawait setInputById(driver, 'Line96640tp', '400');\nawait setInputById(driver, 'Line97110tp', '500');\nawait setInputById(driver, 'Line97120tp', '600');\nawait setInputById(driver, 'NISA5190tp', '700');\nawait setInputById(driver, 'NISA5160tp', '800');\nawait setInputById(driver, 'NISA5150tp', '900');\nawait setInputById(driver, 'Line97950tp', '1000');\nawait setInputById(driver, 'Line97960tp', '1100');\nawait setInputById(driver, 'Line97970tp', '1200');\nawait setInputById(driver, 'Line97980tp', '1300');\nawait setInputById(driver, 'Line97990tp', '1400');\nawait setInputById(driver, 'Line98020tp', '1500');\nawait setInputById(driver, 'Line98030tp', '1600');\nawait setInputById(driver, 'Line98040tp', '1700');\nawait setInputById(driver, 'Line98050tp', '1800');\nawait setInputById(driver, 'Line98080tp', '1900');\nawait setInputById(driver, 'Line98090tp', '2000');\nawait setInputById(driver, 'NISA5480tp', '2100');\nawait setInputById(driver, 'Line98110tp', '2200');\nawait setInputById(driver, 'Line98140tp', '2300');\nawait setInputById(driver, 'Line98200tp', '2400');\nawait setInputById(driver, 'Line99370tp', '2500');\nawait setInputById(driver, 'Line99380tp', '2600');\nawait setInputById(driver, 'Line99410tp', '2700');\nawait setInputById(driver, 'FLine6350tp', '2800');\nawait setInputById(driver, 'T2042_99740tp', '2900');\nawait setInputById(driver, 'T2042_2_360tp', '3000');\nawait setInputById(driver, 'T2042_2_380tp', '3100');\nawait nextClick(driver);\nawait selectToggleById(driver, 'MotorVehicleExp0tp', '1');\nawait selectToggleById(driver, 'leaseOrPurchase0tp', '1');\nawait selectDateById(driver, 'FarmAutoPDate10tp', '2017/01/01');\nawait setInputById(driver, 'FarmAutoKM10tp', '10000');\nawait setInputById(driver, 'FarmAutoKmTotal10tp', '10000');\nawait setInputById(driver, 'FarmAutoFuel10tp', '1000');\nawait selectToggleById(driver, 'FarmAutoShare10tp', '1');\nawait nextClick(driver);\nawait nextClick(driver);\nawait selectToggleById(driver, 'S8Q10tp', '1');\nawait selectComboById(driver, 'FarmIX10tp', ' Class 1 - 4% Most buildings you bought after 1987 ');\nawait setInputById(driver, 'T2042_3_600tp', '100');\nawait setInputById(driver, 'propDetail0tp', 'ASEWD');\nawait addTabT2042_3Atrclick(driver);\nawait selectComboById(driver, 'FarmIX11tp', 'Class 1.1 - 10% Eligible non-residential buildings acquired by a taxpayer after March 18, 2007, and used in Canada to manufacture or process goods for sale or lease ');\nawait setInputById(driver, 'T2042_3_601tp', '200');\nawait addTabT2042_3Atrclick(driver);\nawait selectComboById(driver, 'FarmIX12tp', 'Class 1.2 - 6% Eligible non-residential buildings acquired by a taxpayer after March 18, 2007');\nawait setInputById(driver, 'T2042_3_602tp', '300');\nawait addTabT2042_3Atrclick(driver);\nawait selectComboById(driver, 'FarmIX13tp', 'Class 1.3 - 10% Eligible liquefaction activities in respect of the eligible liquefaction facility acquired after Feburary 19, 2015');\nawait setInputById(driver, 'T2042_3_603tp', '400');\nawait addTabT2042_3Atrclick(driver);\nawait selectComboById(driver, 'FarmIX14tp', 'Class 2 - 6% Electrical generating equipment, pipelines, and plant used in production of electric energy');\nawait setInputById(driver, 'T2042_3_604tp', '500');\nawait addTabT2042_3Atrclick(driver);\nawait selectComboById(driver, 'FarmIX15tp', 'Class 3 - 5% Most buildings acquired before 1988');\nawait setInputById(driver, 'T2042_3_605tp', '600');\nawait addTabT2042_3Atrclick(driver);\nawait selectComboById(driver, 'FarmIX16tp', 'Class 4 - 6% Railway or trolley bus systems ');\nawait setInputById(driver, 'T2042_3_606tp', '700');\n// await addTabT2042_3Atrclick(driver);\n// await selectComboById(driver, 'FarmIX17tp', ' Class 1.3 - 10% Eligible liquefaction activities in respect of the eligible liquefaction facility acquired after Feburary 19, 2015 ');\nawait nextClick(driver);\nawait setInputById(driver, 'T2042_1_WebsitePageCount0tp', '10');\nawait setInputById(driver, 'T2042_1_WebAddress10tp', 'INTERNETCHICKEN1@TAXTRON.CA');\nawait setInputById(driver, 'T2042_1_WebAddress11tp', 'INTERNETCHICKEN2@TAXTRON.CA');\nawait setInputById(driver, 'T2042_1_WebAddress12tp', 'INTERNETCHICKEN3@TAXTRON.CA');\nawait setInputById(driver, 'T2042_1_WebAddress13tp', 'INTERNETCHICKEN4@TAXTRON.CA');\nawait setInputById(driver, 'T2042_1_WebAddress14tp', 'INTERNETCHICKEN5@TAXTRON.CA');\nawait setInputById(driver, 'T2042_1_WebpagesGross0tp', '.49');\nawait nextClick(driver);\nsavedForm = await getServerFileSp(driver,'sp');",
                            "err": {
                                "message": "TimeoutError: Wait timed out after 1206ms",
                                "estack": "TimeoutError: Wait timed out after 1206ms\n    at E:\\Rita\\Taxtron\\WebTest\\node_modules\\selenium-webdriver\\lib\\webdriver.js:842:17\n    at runMicrotasks (<anonymous>)\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)",
                                "diff": null
                            },
                            "uuid": "500bdfbd-6071-4431-a55b-9a604934e039",
                            "parentUUID": "1b5a6f30-dc82-4260-8e94-a9fd24ac892e",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "afterHooks": [
                        {
                            "title": "\"after all\" hook",
                            "fullTitle": "TaxableIncome_Line252_3--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: T2042, Partnership =Yes, Shared with Spouse= Yes. Farm is shared 50%-50%, Yes to Hobby Farm.).   \"after all\" hook",
                            "timedOut": false,
                            "duration": 1584,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "await logoutById(driver);\nawait driver.quit();",
                            "err": {},
                            "uuid": "5ebcae36-3802-4216-9490-8b442b902650",
                            "parentUUID": "1b5a6f30-dc82-4260-8e94-a9fd24ac892e",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "tests": [
                        {
                            "title": " F14100 should be  allowed with amount  ",
                            "fullTitle": "TaxableIncome_Line252_3--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: T2042, Partnership =Yes, Shared with Spouse= Yes. Farm is shared 50%-50%, Yes to Hobby Farm.).    F14100 should be  allowed with amount  ",
                            "timedOut": false,
                            "duration": 0,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let netFarmingIncomelossFeild = getFieldId('14100');\nlet netFarmingIncomeloss = savedForm[ netFarmingIncomelossFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ netFarmingIncomeloss;\nassert.strictEqual( netFarmingIncomeloss, '-8843', ' Feild should be built');",
                            "err": {},
                            "uuid": "f448701a-1093-423a-acf8-7b0831f8d026",
                            "parentUUID": "1b5a6f30-dc82-4260-8e94-a9fd24ac892e",
                            "isHook": false,
                            "skipped": true
                        },
                        {
                            "title": " F9371 should be  allowed with amount  ",
                            "fullTitle": "TaxableIncome_Line252_3--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: T2042, Partnership =Yes, Shared with Spouse= Yes. Farm is shared 50%-50%, Yes to Hobby Farm.).    F9371 should be  allowed with amount  ",
                            "timedOut": false,
                            "duration": 0,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let wheatFeild =  FarmingActivityDataId('9371');\nlet  wheat = savedForm[  wheatFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+  wheat;\nassert.strictEqual(  wheat, '1', ' Feild should be built');",
                            "err": {},
                            "uuid": "0b77e2cd-69a1-442a-a8cc-8113c56b5b3c",
                            "parentUUID": "1b5a6f30-dc82-4260-8e94-a9fd24ac892e",
                            "isHook": false,
                            "skipped": true
                        },
                        {
                            "title": " F9372 should be  allowed with amount  ",
                            "fullTitle": "TaxableIncome_Line252_3--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: T2042, Partnership =Yes, Shared with Spouse= Yes. Farm is shared 50%-50%, Yes to Hobby Farm.).    F9372 should be  allowed with amount  ",
                            "timedOut": false,
                            "duration": 0,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let oatsFeild =  FarmingActivityDataId('9372');\nlet  oats = savedForm[  oatsFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+  oats;\nassert.strictEqual( oats, '2', ' Feild should be built');",
                            "err": {},
                            "uuid": "04ed2514-def2-4187-bc71-6314b0df6040",
                            "parentUUID": "1b5a6f30-dc82-4260-8e94-a9fd24ac892e",
                            "isHook": false,
                            "skipped": true
                        },
                        {
                            "title": " F9373 should be  allowed with amount  ",
                            "fullTitle": "TaxableIncome_Line252_3--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: T2042, Partnership =Yes, Shared with Spouse= Yes. Farm is shared 50%-50%, Yes to Hobby Farm.).    F9373 should be  allowed with amount  ",
                            "timedOut": false,
                            "duration": 0,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let barleyFeild =  FarmingActivityDataId('9373');\nlet  barley = savedForm[   barleyFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+   barley;\nassert.strictEqual(   barley, '3', ' Feild should be built');",
                            "err": {},
                            "uuid": "ae26d933-8c92-4c92-91fe-1c3e43068239",
                            "parentUUID": "1b5a6f30-dc82-4260-8e94-a9fd24ac892e",
                            "isHook": false,
                            "skipped": true
                        },
                        {
                            "title": " F9374 should be  allowed with amount  ",
                            "fullTitle": "TaxableIncome_Line252_3--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: T2042, Partnership =Yes, Shared with Spouse= Yes. Farm is shared 50%-50%, Yes to Hobby Farm.).    F9374 should be  allowed with amount  ",
                            "timedOut": false,
                            "duration": 0,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let mixedGrainsFeild =  FarmingActivityDataId('9374');\nlet  mixedGrains = savedForm[  mixedGrainsFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+  mixedGrains;\nassert.strictEqual(  mixedGrains, '4', ' Feild should be built');",
                            "err": {},
                            "uuid": "971b7823-5878-4650-86f7-c9c568ccea4f",
                            "parentUUID": "1b5a6f30-dc82-4260-8e94-a9fd24ac892e",
                            "isHook": false,
                            "skipped": true
                        },
                        {
                            "title": " F9375 should be  allowed with amount  ",
                            "fullTitle": "TaxableIncome_Line252_3--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: T2042, Partnership =Yes, Shared with Spouse= Yes. Farm is shared 50%-50%, Yes to Hobby Farm.).    F9375 should be  allowed with amount  ",
                            "timedOut": false,
                            "duration": 0,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let cornFeild =  FarmingActivityDataId('9375');\nlet corn = savedForm[  cornFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+  corn;\nassert.strictEqual( corn, '5', ' Feild should be built');",
                            "err": {},
                            "uuid": "e9da890a-ab1f-486d-beef-215763f305ca",
                            "parentUUID": "1b5a6f30-dc82-4260-8e94-a9fd24ac892e",
                            "isHook": false,
                            "skipped": true
                        },
                        {
                            "title": " F9376 should be  allowed with amount  ",
                            "fullTitle": "TaxableIncome_Line252_3--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: T2042, Partnership =Yes, Shared with Spouse= Yes. Farm is shared 50%-50%, Yes to Hobby Farm.).    F9376 should be  allowed with amount  ",
                            "timedOut": false,
                            "duration": 0,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let canolaFeild =  FarmingActivityDataId('9376');\nlet canola = savedForm[  canolaFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ canola;\nassert.strictEqual( canola, '6', ' Feild should be built');",
                            "err": {},
                            "uuid": "b58b6b8a-e274-4a37-90d3-b88df069457c",
                            "parentUUID": "1b5a6f30-dc82-4260-8e94-a9fd24ac892e",
                            "isHook": false,
                            "skipped": true
                        },
                        {
                            "title": " F9377 should be  allowed with amount  ",
                            "fullTitle": "TaxableIncome_Line252_3--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: T2042, Partnership =Yes, Shared with Spouse= Yes. Farm is shared 50%-50%, Yes to Hobby Farm.).    F9377 should be  allowed with amount  ",
                            "timedOut": false,
                            "duration": 0,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let flaxSeedFeild =  FarmingActivityDataId('9377');\nlet  flaxSeed = savedForm[ flaxSeedFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ flaxSeed;\nassert.strictEqual( flaxSeed, '7', ' Feild should be built');",
                            "err": {},
                            "uuid": "dd32118e-e83d-49a7-9311-91c0961014f7",
                            "parentUUID": "1b5a6f30-dc82-4260-8e94-a9fd24ac892e",
                            "isHook": false,
                            "skipped": true
                        },
                        {
                            "title": " F9378 should be  allowed with amount  ",
                            "fullTitle": "TaxableIncome_Line252_3--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: T2042, Partnership =Yes, Shared with Spouse= Yes. Farm is shared 50%-50%, Yes to Hobby Farm.).    F9378 should be  allowed with amount  ",
                            "timedOut": false,
                            "duration": 0,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let soyaBeansFeild =  FarmingActivityDataId('9378');\nlet  soyaBeans = savedForm[ soyaBeansFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+  soyaBeans;\nassert.strictEqual(  soyaBeans, '8', ' Feild should be built');",
                            "err": {},
                            "uuid": "abd6e047-a05b-463b-a54e-39bfa254deb6",
                            "parentUUID": "1b5a6f30-dc82-4260-8e94-a9fd24ac892e",
                            "isHook": false,
                            "skipped": true
                        },
                        {
                            "title": " F9370 should be  allowed with amount  ",
                            "fullTitle": "TaxableIncome_Line252_3--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: T2042, Partnership =Yes, Shared with Spouse= Yes. Farm is shared 50%-50%, Yes to Hobby Farm.).    F9370 should be  allowed with amount  ",
                            "timedOut": false,
                            "duration": 0,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let otherGrainsAndOilseedsFeild =  FarmingActivityDataId('9370');\nlet  otherGrainsAndOilseeds = savedForm[ otherGrainsAndOilseedsFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+  otherGrainsAndOilseeds;\nassert.strictEqual( otherGrainsAndOilseeds, '9', ' Feild should be built');",
                            "err": {},
                            "uuid": "7e5a30dd-1b99-481c-804b-d06ad8fbd042",
                            "parentUUID": "1b5a6f30-dc82-4260-8e94-a9fd24ac892e",
                            "isHook": false,
                            "skipped": true
                        },
                        {
                            "title": " F9421 should be  allowed with amount  ",
                            "fullTitle": "TaxableIncome_Line252_3--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: T2042, Partnership =Yes, Shared with Spouse= Yes. Farm is shared 50%-50%, Yes to Hobby Farm.).    F9421 should be  allowed with amount  ",
                            "timedOut": false,
                            "duration": 0,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let fruitsFeild =  FarmingActivityDataId('9421');\nlet  fruits = savedForm[ fruitsFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ fruits;\nassert.strictEqual( fruits, '10', ' Feild should be built');",
                            "err": {},
                            "uuid": "35f826ff-db8d-490a-bff2-ff7a36d52f3d",
                            "parentUUID": "1b5a6f30-dc82-4260-8e94-a9fd24ac892e",
                            "isHook": false,
                            "skipped": true
                        },
                        {
                            "title": " F9422 should be  allowed with amount  ",
                            "fullTitle": "TaxableIncome_Line252_3--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: T2042, Partnership =Yes, Shared with Spouse= Yes. Farm is shared 50%-50%, Yes to Hobby Farm.).    F9422 should be  allowed with amount  ",
                            "timedOut": false,
                            "duration": 0,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let potatoesFeild =  FarmingActivityDataId('9422');\nlet potatoes = savedForm[ potatoesFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+  potatoes;\nassert.strictEqual( potatoes, '11', ' Feild should be built');",
                            "err": {},
                            "uuid": "a92e8abf-5a16-44a7-94a0-d4c4304b2786",
                            "parentUUID": "1b5a6f30-dc82-4260-8e94-a9fd24ac892e",
                            "isHook": false,
                            "skipped": true
                        },
                        {
                            "title": " F9423 should be  allowed with amount  ",
                            "fullTitle": "TaxableIncome_Line252_3--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: T2042, Partnership =Yes, Shared with Spouse= Yes. Farm is shared 50%-50%, Yes to Hobby Farm.).    F9423 should be  allowed with amount  ",
                            "timedOut": false,
                            "duration": 0,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let vegetablesExcludingPotatoesFeild =  FarmingActivityDataId('9423');\nlet  vegetablesExcludingPotatoes = savedForm[  vegetablesExcludingPotatoesFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+  vegetablesExcludingPotatoes;\nassert.strictEqual( vegetablesExcludingPotatoes, '12', ' Feild should be built');",
                            "err": {},
                            "uuid": "fbb7f07e-19c9-4aba-ada3-6a4073b50628",
                            "parentUUID": "1b5a6f30-dc82-4260-8e94-a9fd24ac892e",
                            "isHook": false,
                            "skipped": true
                        },
                        {
                            "title": " F9424 should be  allowed with amount  ",
                            "fullTitle": "TaxableIncome_Line252_3--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: T2042, Partnership =Yes, Shared with Spouse= Yes. Farm is shared 50%-50%, Yes to Hobby Farm.).    F9424 should be  allowed with amount  ",
                            "timedOut": false,
                            "duration": 0,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let tobaccoFeild = FarmingActivityDataId('9424');\nlet  tobacco = savedForm[ tobaccoFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ tobacco;\nassert.strictEqual( tobacco, '13', ' Feild should be built');",
                            "err": {},
                            "uuid": "e448054c-6234-49ee-b397-4b933c5fef61",
                            "parentUUID": "1b5a6f30-dc82-4260-8e94-a9fd24ac892e",
                            "isHook": false,
                            "skipped": true
                        },
                        {
                            "title": " F9420 should be  allowed with amount  ",
                            "fullTitle": "TaxableIncome_Line252_3--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: T2042, Partnership =Yes, Shared with Spouse= Yes. Farm is shared 50%-50%, Yes to Hobby Farm.).    F9420 should be  allowed with amount  ",
                            "timedOut": false,
                            "duration": 0,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let otherCropsFeild =  FarmingActivityDataId('9420');\nlet  otherCrops = savedForm[ otherCropsFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ otherCrops;\nassert.strictEqual(  otherCrops, '14', ' Feild should be built');",
                            "err": {},
                            "uuid": "318ad158-2f38-4580-9766-175ff917d61e",
                            "parentUUID": "1b5a6f30-dc82-4260-8e94-a9fd24ac892e",
                            "isHook": false,
                            "skipped": true
                        },
                        {
                            "title": " F9425 should be  allowed with amount  ",
                            "fullTitle": "TaxableIncome_Line252_3--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: T2042, Partnership =Yes, Shared with Spouse= Yes. Farm is shared 50%-50%, Yes to Hobby Farm.).    F9425 should be  allowed with amount  ",
                            "timedOut": false,
                            "duration": 0,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let greenhouseAndNurseryProductsFeild =  FarmingActivityDataId('9425');\nlet  greenhouseAndNurseryProducts = savedForm[greenhouseAndNurseryProductsFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ greenhouseAndNurseryProducts;\nassert.strictEqual(  greenhouseAndNurseryProducts, '15', ' Feild should be built');",
                            "err": {},
                            "uuid": "b5591530-48b5-4b36-bbcd-f48f77a588ea",
                            "parentUUID": "1b5a6f30-dc82-4260-8e94-a9fd24ac892e",
                            "isHook": false,
                            "skipped": true
                        },
                        {
                            "title": " F9426 should be  allowed with amount  ",
                            "fullTitle": "TaxableIncome_Line252_3--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: T2042, Partnership =Yes, Shared with Spouse= Yes. Farm is shared 50%-50%, Yes to Hobby Farm.).    F9426 should be  allowed with amount  ",
                            "timedOut": false,
                            "duration": 0,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let forageCropsOrSeedsFeild =  FarmingActivityDataId('9426');\nlet forageCropsOrSeeds = savedForm[ forageCropsOrSeedsFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+forageCropsOrSeeds;\nassert.strictEqual(  forageCropsOrSeeds, '16', ' Feild should be built');",
                            "err": {},
                            "uuid": "8baab722-654a-49cc-a647-71d5a257a96a",
                            "parentUUID": "1b5a6f30-dc82-4260-8e94-a9fd24ac892e",
                            "isHook": false,
                            "skipped": true
                        },
                        {
                            "title": " F9471 should be  allowed with amount  ",
                            "fullTitle": "TaxableIncome_Line252_3--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: T2042, Partnership =Yes, Shared with Spouse= Yes. Farm is shared 50%-50%, Yes to Hobby Farm.).    F9471 should be  allowed with amount  ",
                            "timedOut": false,
                            "duration": 0,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let liveStockSoldCattleFeild =  FarmingActivityDataId('9471');\nlet  liveStockSoldCattle = savedForm[ liveStockSoldCattleFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ liveStockSoldCattle;\nassert.strictEqual( liveStockSoldCattle, '17', ' Feild should be built');",
                            "err": {},
                            "uuid": "54943ad9-d982-4069-add0-58c19b69ca49",
                            "parentUUID": "1b5a6f30-dc82-4260-8e94-a9fd24ac892e",
                            "isHook": false,
                            "skipped": true
                        },
                        {
                            "title": " F9472 should be  allowed with amount  ",
                            "fullTitle": "TaxableIncome_Line252_3--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: T2042, Partnership =Yes, Shared with Spouse= Yes. Farm is shared 50%-50%, Yes to Hobby Farm.).    F9472 should be  allowed with amount  ",
                            "timedOut": false,
                            "duration": 0,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let livestockSoldSwinesFeild =  FarmingActivityDataId('9472');\nlet livestockSoldSwines = savedForm[livestockSoldSwinesFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ livestockSoldSwines;\nassert.strictEqual(  livestockSoldSwines, '18', ' Feild should be built');",
                            "err": {},
                            "uuid": "641b62ac-079c-4b61-989b-16430897cf6e",
                            "parentUUID": "1b5a6f30-dc82-4260-8e94-a9fd24ac892e",
                            "isHook": false,
                            "skipped": true
                        },
                        {
                            "title": " F9473 should be  allowed with amount  ",
                            "fullTitle": "TaxableIncome_Line252_3--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: T2042, Partnership =Yes, Shared with Spouse= Yes. Farm is shared 50%-50%, Yes to Hobby Farm.).    F9473 should be  allowed with amount  ",
                            "timedOut": false,
                            "duration": 0,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let livestockSoldPoultryFeild =  FarmingActivityDataId('9473');\nlet  livestockSoldPoultry = savedForm[ livestockSoldPoultryFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ livestockSoldPoultry;\nassert.strictEqual(  livestockSoldPoultry, '19', ' Feild should be built');",
                            "err": {},
                            "uuid": "e1749b80-1ff6-4fbb-b26f-4f57e214b6d2",
                            "parentUUID": "1b5a6f30-dc82-4260-8e94-a9fd24ac892e",
                            "isHook": false,
                            "skipped": true
                        },
                        {
                            "title": " F9474 should be  allowed with amount  ",
                            "fullTitle": "TaxableIncome_Line252_3--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: T2042, Partnership =Yes, Shared with Spouse= Yes. Farm is shared 50%-50%, Yes to Hobby Farm.).    F9474 should be  allowed with amount  ",
                            "timedOut": false,
                            "duration": 0,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let livestockSoldSheepAndlambsFeild =  FarmingActivityDataId('9474');\nlet livestockSoldSheepAndlambs = savedForm[ livestockSoldSheepAndlambsFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+livestockSoldSheepAndlambs;\nassert.strictEqual( livestockSoldSheepAndlambs, '20', ' Feild should be built');",
                            "err": {},
                            "uuid": "a1b72ca0-83b9-4c67-af7b-bcd76fc49bb1",
                            "parentUUID": "1b5a6f30-dc82-4260-8e94-a9fd24ac892e",
                            "isHook": false,
                            "skipped": true
                        },
                        {
                            "title": " F9470 should be  allowed with amount  ",
                            "fullTitle": "TaxableIncome_Line252_3--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: T2042, Partnership =Yes, Shared with Spouse= Yes. Farm is shared 50%-50%, Yes to Hobby Farm.).    F9470 should be  allowed with amount  ",
                            "timedOut": false,
                            "duration": 0,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let livestockSoldLivestockAndAnimalProductsRevenueFeild =  FarmingActivityDataId('9470');\nlet livestockSoldLivestockAndAnimalProductsRevenue = savedForm[livestockSoldLivestockAndAnimalProductsRevenueFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ livestockSoldLivestockAndAnimalProductsRevenue;\nassert.strictEqual(  livestockSoldLivestockAndAnimalProductsRevenue, '21', ' Feild should be built');",
                            "err": {},
                            "uuid": "9ad7d78d-a6eb-497e-b160-0e3451fae5fc",
                            "parentUUID": "1b5a6f30-dc82-4260-8e94-a9fd24ac892e",
                            "isHook": false,
                            "skipped": true
                        },
                        {
                            "title": " F9476 should be  allowed with amount  ",
                            "fullTitle": "TaxableIncome_Line252_3--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: T2042, Partnership =Yes, Shared with Spouse= Yes. Farm is shared 50%-50%, Yes to Hobby Farm.).    F9476 should be  allowed with amount  ",
                            "timedOut": false,
                            "duration": 0,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let milkAndCreamNotIncludingDairySubsidiesFeild =  FarmingActivityDataId('9476');\nlet milkAndCreamNotIncludingDairySubsidies = savedForm[milkAndCreamNotIncludingDairySubsidiesFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ milkAndCreamNotIncludingDairySubsidies;\nassert.strictEqual(  milkAndCreamNotIncludingDairySubsidies, '22', ' Feild should be built');",
                            "err": {},
                            "uuid": "dd4c4978-8817-4b17-a23a-bfd7c40c8c2b",
                            "parentUUID": "1b5a6f30-dc82-4260-8e94-a9fd24ac892e",
                            "isHook": false,
                            "skipped": true
                        },
                        {
                            "title": " F9477 should be  allowed with amount  ",
                            "fullTitle": "TaxableIncome_Line252_3--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: T2042, Partnership =Yes, Shared with Spouse= Yes. Farm is shared 50%-50%, Yes to Hobby Farm.).    F9477 should be  allowed with amount  ",
                            "timedOut": false,
                            "duration": 0,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let eggsForConsumptionFeild =  FarmingActivityDataId('9477');\nlet eggsForConsumption = savedForm[eggsForConsumptionFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ eggsForConsumption;\nassert.strictEqual( eggsForConsumption, '23', ' Feild should be built');",
                            "err": {},
                            "uuid": "a11c2c3b-2128-41e3-9950-f8de47d9bd22",
                            "parentUUID": "1b5a6f30-dc82-4260-8e94-a9fd24ac892e",
                            "isHook": false,
                            "skipped": true
                        },
                        {
                            "title": " F9520 should be  allowed with amount  ",
                            "fullTitle": "TaxableIncome_Line252_3--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: T2042, Partnership =Yes, Shared with Spouse= Yes. Farm is shared 50%-50%, Yes to Hobby Farm.).    F9520 should be  allowed with amount  ",
                            "timedOut": false,
                            "duration": 0,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let otherCommoditiesFeild =  FarmingActivityDataId('9520');\nlet otherCommodities = savedForm[otherCommoditiesFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ otherCommodities;\nassert.strictEqual( otherCommodities, '24', ' Feild should be built');",
                            "err": {},
                            "uuid": "80a86bc1-8621-4696-95b9-f317cabedba8",
                            "parentUUID": "1b5a6f30-dc82-4260-8e94-a9fd24ac892e",
                            "isHook": false,
                            "skipped": true
                        },
                        {
                            "title": " F9541 should be  allowed with amount  ",
                            "fullTitle": "TaxableIncome_Line252_3--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: T2042, Partnership =Yes, Shared with Spouse= Yes. Farm is shared 50%-50%, Yes to Hobby Farm.).    F9541 should be  allowed with amount  ",
                            "timedOut": false,
                            "duration": 0,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let programPaymentsDairySubsidiesFeild =  FarmingActivityDataId('9541');\nlet programPaymentsDairySubsidies = savedForm[programPaymentsDairySubsidiesFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ programPaymentsDairySubsidies;\nassert.strictEqual(  programPaymentsDairySubsidies, '25', ' Feild should be built');",
                            "err": {},
                            "uuid": "c0043762-ae54-4000-b14a-6cc175749631",
                            "parentUUID": "1b5a6f30-dc82-4260-8e94-a9fd24ac892e",
                            "isHook": false,
                            "skipped": true
                        },
                        {
                            "title": " F9542 should be  allowed with amount  ",
                            "fullTitle": "TaxableIncome_Line252_3--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: T2042, Partnership =Yes, Shared with Spouse= Yes. Farm is shared 50%-50%, Yes to Hobby Farm.).    F9542 should be  allowed with amount  ",
                            "timedOut": false,
                            "duration": 0,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let programPaymentsCropInsuranceFeild =  FarmingActivityDataId('9542');\nlet programPaymentsCropInsurance = savedForm[ programPaymentsCropInsuranceFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+  programPaymentsCropInsurance;\nassert.strictEqual(  programPaymentsCropInsurance, '26', ' Feild should be built');",
                            "err": {},
                            "uuid": "cb10139e-f27d-42f2-a937-7b02f133337c",
                            "parentUUID": "1b5a6f30-dc82-4260-8e94-a9fd24ac892e",
                            "isHook": false,
                            "skipped": true
                        },
                        {
                            "title": " F9540 should be  allowed with amount  ",
                            "fullTitle": "TaxableIncome_Line252_3--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: T2042, Partnership =Yes, Shared with Spouse= Yes. Farm is shared 50%-50%, Yes to Hobby Farm.).    F9540 should be  allowed with amount  ",
                            "timedOut": false,
                            "duration": 0,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let programPaymentSOtherProgramPaymentsFeild =  FarmingActivityDataId('9540');\nlet programPaymentSOtherProgramPayments = savedForm[ programPaymentSOtherProgramPaymentsFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ programPaymentSOtherProgramPayments;\nassert.strictEqual( programPaymentSOtherProgramPayments, '31', ' Feild should be built');",
                            "err": {},
                            "uuid": "7bec1b9b-de1f-4e32-927c-cba52fd87b77",
                            "parentUUID": "1b5a6f30-dc82-4260-8e94-a9fd24ac892e",
                            "isHook": false,
                            "skipped": true
                        },
                        {
                            "title": " F9570 should be  allowed with amount  ",
                            "fullTitle": "TaxableIncome_Line252_3--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: T2042, Partnership =Yes, Shared with Spouse= Yes. Farm is shared 50%-50%, Yes to Hobby Farm.).    F9570 should be  allowed with amount  ",
                            "timedOut": false,
                            "duration": 0,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let rebatesFeild =  FarmingActivityDataId('9570');\nlet rebates = savedForm[rebatesFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+  rebates;\nassert.strictEqual( rebates, '27', ' Feild should be built');",
                            "err": {},
                            "uuid": "c203ce48-702c-4ca8-b789-47fc41467575",
                            "parentUUID": "1b5a6f30-dc82-4260-8e94-a9fd24ac892e",
                            "isHook": false,
                            "skipped": true
                        },
                        {
                            "title": " F9601 should be  allowed with amount  ",
                            "fullTitle": "TaxableIncome_Line252_3--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: T2042, Partnership =Yes, Shared with Spouse= Yes. Farm is shared 50%-50%, Yes to Hobby Farm.).    F9601 should be  allowed with amount  ",
                            "timedOut": false,
                            "duration": 0,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let customOrContractWorkIncludesMachineRentalsFeild =  FarmingActivityDataId('9601');\nlet customOrContractWorkIncludesMachineRentals = savedForm[customOrContractWorkIncludesMachineRentalsFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ customOrContractWorkIncludesMachineRentals;\nassert.strictEqual(  customOrContractWorkIncludesMachineRentals, '28', ' Feild should be built');",
                            "err": {},
                            "uuid": "3947a087-04e5-47b5-8574-c1aa5583ef18",
                            "parentUUID": "1b5a6f30-dc82-4260-8e94-a9fd24ac892e",
                            "isHook": false,
                            "skipped": true
                        },
                        {
                            "title": " F9604 should be  allowed with amount  ",
                            "fullTitle": "TaxableIncome_Line252_3--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: T2042, Partnership =Yes, Shared with Spouse= Yes. Farm is shared 50%-50%, Yes to Hobby Farm.).    F9604 should be  allowed with amount  ",
                            "timedOut": false,
                            "duration": 0,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let insuranceProceedsFeild =  FarmingActivityDataId('9604');\nlet insuranceProceeds = savedForm[ insuranceProceedsFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ insuranceProceeds;\nassert.strictEqual( insuranceProceeds, '29', ' Feild should be built');",
                            "err": {},
                            "uuid": "f6cecaba-da44-487f-ad16-97bd153f7974",
                            "parentUUID": "1b5a6f30-dc82-4260-8e94-a9fd24ac892e",
                            "isHook": false,
                            "skipped": true
                        },
                        {
                            "title": " F9605 should be  allowed with amount  ",
                            "fullTitle": "TaxableIncome_Line252_3--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: T2042, Partnership =Yes, Shared with Spouse= Yes. Farm is shared 50%-50%, Yes to Hobby Farm.).    F9605 should be  allowed with amount  ",
                            "timedOut": false,
                            "duration": 0,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let patronageDividendsFeild =  FarmingActivityDataId('9605');\nlet patronageDividends = savedForm[patronageDividendsFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+  patronageDividends;\nassert.strictEqual( patronageDividends, '30', ' Feild should be built');",
                            "err": {},
                            "uuid": "1caf632d-b91d-4259-aedf-1ceb084c04b9",
                            "parentUUID": "1b5a6f30-dc82-4260-8e94-a9fd24ac892e",
                            "isHook": false,
                            "skipped": true
                        },
                        {
                            "title": " F9600 should be  allowed with amount  ",
                            "fullTitle": "TaxableIncome_Line252_3--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: T2042, Partnership =Yes, Shared with Spouse= Yes. Farm is shared 50%-50%, Yes to Hobby Farm.).    F9600 should be  allowed with amount  ",
                            "timedOut": false,
                            "duration": 0,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let otherIncomeFeild =  FarmingActivityDataId('9600');\nlet otherIncome = savedForm[otherIncomeFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ otherIncome;\nassert.strictEqual( otherIncome, '32', ' Feild should be built');",
                            "err": {},
                            "uuid": "b6f2fda4-6299-40e3-a421-e01ea6c94cb7",
                            "parentUUID": "1b5a6f30-dc82-4260-8e94-a9fd24ac892e",
                            "isHook": false,
                            "skipped": true
                        },
                        {
                            "title": " F9659 should be  allowed with amount  ",
                            "fullTitle": "TaxableIncome_Line252_3--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: T2042, Partnership =Yes, Shared with Spouse= Yes. Farm is shared 50%-50%, Yes to Hobby Farm.).    F9659 should be  allowed with amount  ",
                            "timedOut": false,
                            "duration": 0,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let grossIncomeFeild =  FarmingActivityDataId('9659');\nlet grossIncome = savedForm[grossIncomeFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+  grossIncome;\nassert.strictEqual( grossIncome, '528', ' Feild should be built');",
                            "err": {},
                            "uuid": "0a9a8572-111a-4ba1-927a-b238ead86fe6",
                            "parentUUID": "1b5a6f30-dc82-4260-8e94-a9fd24ac892e",
                            "isHook": false,
                            "skipped": true
                        },
                        {
                            "title": " F9661 should be  allowed with amount  ",
                            "fullTitle": "TaxableIncome_Line252_3--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: T2042, Partnership =Yes, Shared with Spouse= Yes. Farm is shared 50%-50%, Yes to Hobby Farm.).    F9661 should be  allowed with amount  ",
                            "timedOut": false,
                            "duration": 0,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let containersAndTwineFeild =  FarmingActivityDataId('9661');\nlet  containersAndTwine = savedForm[ containersAndTwineFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+   containersAndTwine;\nassert.strictEqual(  containersAndTwine, '100', ' Feild should be built');",
                            "err": {},
                            "uuid": "d1b7276a-9f3e-4392-8d55-a1409d525ef4",
                            "parentUUID": "1b5a6f30-dc82-4260-8e94-a9fd24ac892e",
                            "isHook": false,
                            "skipped": true
                        },
                        {
                            "title": " F9662 should be  allowed with amount  ",
                            "fullTitle": "TaxableIncome_Line252_3--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: T2042, Partnership =Yes, Shared with Spouse= Yes. Farm is shared 50%-50%, Yes to Hobby Farm.).    F9662 should be  allowed with amount  ",
                            "timedOut": false,
                            "duration": 0,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let fertilizersAndlimeFeild =  FarmingActivityDataId('9662');\nlet  fertilizersAndlime = savedForm[ fertilizersAndlimeFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ fertilizersAndlime;\nassert.strictEqual(  fertilizersAndlime, '200', ' Feild should be built');",
                            "err": {},
                            "uuid": "b318f5d4-1ad0-43f5-a8b5-41fa2e5144a2",
                            "parentUUID": "1b5a6f30-dc82-4260-8e94-a9fd24ac892e",
                            "isHook": false,
                            "skipped": true
                        },
                        {
                            "title": " F9663 should be  allowed with amount  ",
                            "fullTitle": "TaxableIncome_Line252_3--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: T2042, Partnership =Yes, Shared with Spouse= Yes. Farm is shared 50%-50%, Yes to Hobby Farm.).    F9663 should be  allowed with amount  ",
                            "timedOut": false,
                            "duration": 0,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let pesticidesHerbicidesInsecticidesFungicidesFeild =  FarmingActivityDataId('9663');\nlet pesticidesHerbicidesInsecticidesFungicides = savedForm[pesticidesHerbicidesInsecticidesFungicidesFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+  pesticidesHerbicidesInsecticidesFungicides;\nassert.strictEqual( pesticidesHerbicidesInsecticidesFungicides, '300', ' Feild should be built');",
                            "err": {},
                            "uuid": "2839b430-088e-4c1d-9f95-eb1f92f4a6f9",
                            "parentUUID": "1b5a6f30-dc82-4260-8e94-a9fd24ac892e",
                            "isHook": false,
                            "skipped": true
                        },
                        {
                            "title": " F9664 should be  allowed with amount  ",
                            "fullTitle": "TaxableIncome_Line252_3--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: T2042, Partnership =Yes, Shared with Spouse= Yes. Farm is shared 50%-50%, Yes to Hobby Farm.).    F9664 should be  allowed with amount  ",
                            "timedOut": false,
                            "duration": 0,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let seedsAndPlantsFeild =  FarmingActivityDataId('9664');\nlet seedsAndPlants = savedForm[seedsAndPlantsFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+  seedsAndPlants;\nassert.strictEqual( seedsAndPlants, '400', ' Feild should be built');",
                            "err": {},
                            "uuid": "8ee83614-5807-4d13-9ec8-55d63e7a5093",
                            "parentUUID": "1b5a6f30-dc82-4260-8e94-a9fd24ac892e",
                            "isHook": false,
                            "skipped": true
                        },
                        {
                            "title": " F9711 should be  allowed with amount  ",
                            "fullTitle": "TaxableIncome_Line252_3--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: T2042, Partnership =Yes, Shared with Spouse= Yes. Farm is shared 50%-50%, Yes to Hobby Farm.).    F9711 should be  allowed with amount  ",
                            "timedOut": false,
                            "duration": 0,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let feedSupplementsStrawAndBeddingFeild =  FarmingActivityDataId('9711');\nlet feedSupplementsStrawAndBedding = savedForm[feedSupplementsStrawAndBeddingFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+feedSupplementsStrawAndBedding;\nassert.strictEqual(feedSupplementsStrawAndBedding, '500', ' Feild should be built');",
                            "err": {},
                            "uuid": "0c7a8dc8-dbde-405b-9cfa-90cd3c5797f9",
                            "parentUUID": "1b5a6f30-dc82-4260-8e94-a9fd24ac892e",
                            "isHook": false,
                            "skipped": true
                        },
                        {
                            "title": " F9712 should be  allowed with amount  ",
                            "fullTitle": "TaxableIncome_Line252_3--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: T2042, Partnership =Yes, Shared with Spouse= Yes. Farm is shared 50%-50%, Yes to Hobby Farm.).    F9712 should be  allowed with amount  ",
                            "timedOut": false,
                            "duration": 0,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let livestockBoughtFeild =  FarmingActivityDataId('9712');\nlet livestockBought = savedForm[ livestockBoughtFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+  livestockBought;\nassert.strictEqual( livestockBought, '600', ' Feild should be built');",
                            "err": {},
                            "uuid": "c449e5ef-cc38-4512-9ec8-5bfe5b6513dc",
                            "parentUUID": "1b5a6f30-dc82-4260-8e94-a9fd24ac892e",
                            "isHook": false,
                            "skipped": true
                        },
                        {
                            "title": " F9713 should be  allowed with amount  ",
                            "fullTitle": "TaxableIncome_Line252_3--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: T2042, Partnership =Yes, Shared with Spouse= Yes. Farm is shared 50%-50%, Yes to Hobby Farm.).    F9713 should be  allowed with amount  ",
                            "timedOut": false,
                            "duration": 0,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let veterinaryFeesMedicineAndBreedingFeesFeild =  FarmingActivityDataId('9713');\nlet veterinaryFeesMedicineAndBreedingFees = savedForm[ veterinaryFeesMedicineAndBreedingFeesFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+   veterinaryFeesMedicineAndBreedingFees;\nassert.strictEqual(  veterinaryFeesMedicineAndBreedingFees, '700', ' Feild should be built');",
                            "err": {},
                            "uuid": "4d6c9b24-7350-41c1-b20e-f325d662fc3f",
                            "parentUUID": "1b5a6f30-dc82-4260-8e94-a9fd24ac892e",
                            "isHook": false,
                            "skipped": true
                        },
                        {
                            "title": " F9760 should be  allowed with amount  ",
                            "fullTitle": "TaxableIncome_Line252_3--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: T2042, Partnership =Yes, Shared with Spouse= Yes. Farm is shared 50%-50%, Yes to Hobby Farm.).    F9760 should be  allowed with amount  ",
                            "timedOut": false,
                            "duration": 0,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let repairslicencesInsuranceFeild =  FarmingActivityDataId('9760');\nlet repairslicencesInsurance = savedForm[repairslicencesInsuranceFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+  repairslicencesInsurance;\nassert.strictEqual( repairslicencesInsurance, '800', ' Feild should be built');",
                            "err": {},
                            "uuid": "4561f482-0fb9-4539-b396-cd4facd67b79",
                            "parentUUID": "1b5a6f30-dc82-4260-8e94-a9fd24ac892e",
                            "isHook": false,
                            "skipped": true
                        },
                        {
                            "title": " F9764 should be  allowed with amount  ",
                            "fullTitle": "TaxableIncome_Line252_3--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: T2042, Partnership =Yes, Shared with Spouse= Yes. Farm is shared 50%-50%, Yes to Hobby Farm.).    F9764 should be  allowed with amount  ",
                            "timedOut": false,
                            "duration": 0,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let gasolineDieselFuelOilFeild =  FarmingActivityDataId('9764');\nlet gasolineDieselFuelOil = savedForm[gasolineDieselFuelOilFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ gasolineDieselFuelOil;\nassert.strictEqual(gasolineDieselFuelOil, '900', ' Feild should be built');",
                            "err": {},
                            "uuid": "3a3d3341-63af-47c4-b0dc-782651fb2119",
                            "parentUUID": "1b5a6f30-dc82-4260-8e94-a9fd24ac892e",
                            "isHook": false,
                            "skipped": true
                        },
                        {
                            "title": " F9795 should be  allowed with amount  ",
                            "fullTitle": "TaxableIncome_Line252_3--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: T2042, Partnership =Yes, Shared with Spouse= Yes. Farm is shared 50%-50%, Yes to Hobby Farm.).    F9795 should be  allowed with amount  ",
                            "timedOut": false,
                            "duration": 0,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let buildingAndFenceRepairsFeild =  FarmingActivityDataId('9795');\nlet buildingAndFenceRepairs = savedForm[buildingAndFenceRepairsFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ buildingAndFenceRepairs;\nassert.strictEqual(buildingAndFenceRepairs, '1000', ' Feild should be built');",
                            "err": {},
                            "uuid": "96cd2d95-3f90-4386-8f2a-93a0ab5c2574",
                            "parentUUID": "1b5a6f30-dc82-4260-8e94-a9fd24ac892e",
                            "isHook": false,
                            "skipped": true
                        },
                        {
                            "title": " F9796 should be  allowed with amount  ",
                            "fullTitle": "TaxableIncome_Line252_3--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: T2042, Partnership =Yes, Shared with Spouse= Yes. Farm is shared 50%-50%, Yes to Hobby Farm.).    F9796 should be  allowed with amount  ",
                            "timedOut": false,
                            "duration": 0,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let clearinglevellingAndDraininglandFeild =  FarmingActivityDataId('9796');\nlet  clearinglevellingAndDrainingland = savedForm[  clearinglevellingAndDraininglandFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+  clearinglevellingAndDrainingland;\nassert.strictEqual(   clearinglevellingAndDrainingland, '1100', ' Feild should be built');",
                            "err": {},
                            "uuid": "fe0cad3b-48b5-49f4-8cac-40d4e0f09f62",
                            "parentUUID": "1b5a6f30-dc82-4260-8e94-a9fd24ac892e",
                            "isHook": false,
                            "skipped": true
                        },
                        {
                            "title": " F9797 should be  allowed with amount  ",
                            "fullTitle": "TaxableIncome_Line252_3--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: T2042, Partnership =Yes, Shared with Spouse= Yes. Farm is shared 50%-50%, Yes to Hobby Farm.).    F9797 should be  allowed with amount  ",
                            "timedOut": false,
                            "duration": 0,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let cropInsuranceFeild =  FarmingActivityDataId('9797');\nlet  cropInsurance = savedForm[ cropInsuranceFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ cropInsurance;\nassert.strictEqual( cropInsurance, '1200', ' Feild should be built');",
                            "err": {},
                            "uuid": "b702d987-4867-4bf1-b08b-23445908d7cb",
                            "parentUUID": "1b5a6f30-dc82-4260-8e94-a9fd24ac892e",
                            "isHook": false,
                            "skipped": true
                        },
                        {
                            "title": " F9798 should be  allowed with amount  ",
                            "fullTitle": "TaxableIncome_Line252_3--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: T2042, Partnership =Yes, Shared with Spouse= Yes. Farm is shared 50%-50%, Yes to Hobby Farm.).    F9798 should be  allowed with amount  ",
                            "timedOut": false,
                            "duration": 0,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let customOrContractWorkAndMachineryRentalT2042_2Line9798PriorFeild =  FarmingActivityDataId('9798');\nlet customOrContractWorkAndMachineryRentalT2042_2Line9798Prior = savedForm[customOrContractWorkAndMachineryRentalT2042_2Line9798PriorFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ customOrContractWorkAndMachineryRentalT2042_2Line9798Prior;\nassert.strictEqual(customOrContractWorkAndMachineryRentalT2042_2Line9798Prior, '1300', ' Feild should be built');",
                            "err": {},
                            "uuid": "1f28fc61-956f-44b3-b241-739728bacc84",
                            "parentUUID": "1b5a6f30-dc82-4260-8e94-a9fd24ac892e",
                            "isHook": false,
                            "skipped": true
                        },
                        {
                            "title": " F9799 should be  allowed with amount  ",
                            "fullTitle": "TaxableIncome_Line252_3--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: T2042, Partnership =Yes, Shared with Spouse= Yes. Farm is shared 50%-50%, Yes to Hobby Farm.).    F9799 should be  allowed with amount  ",
                            "timedOut": false,
                            "duration": 0,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let electricityFeild =  FarmingActivityDataId('9799');\nlet electricity = savedForm[electricityFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ electricity;\nassert.strictEqual( electricity, '1400', ' Feild should be built');",
                            "err": {},
                            "uuid": "597e3009-f378-4feb-b7fd-5ea4ada7609b",
                            "parentUUID": "1b5a6f30-dc82-4260-8e94-a9fd24ac892e",
                            "isHook": false,
                            "skipped": true
                        },
                        {
                            "title": " F9802 should be  allowed with amount  ",
                            "fullTitle": "TaxableIncome_Line252_3--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: T2042, Partnership =Yes, Shared with Spouse= Yes. Farm is shared 50%-50%, Yes to Hobby Farm.).    F9802 should be  allowed with amount  ",
                            "timedOut": false,
                            "duration": 0,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let heatingFuelFeild =  FarmingActivityDataId('9802');\nlet  heatingFuel = savedForm[ heatingFuelFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+  heatingFuel;\nassert.strictEqual(  heatingFuel, '1500', ' Feild should be built');",
                            "err": {},
                            "uuid": "74f8c128-f067-49f9-a082-116c807660de",
                            "parentUUID": "1b5a6f30-dc82-4260-8e94-a9fd24ac892e",
                            "isHook": false,
                            "skipped": true
                        },
                        {
                            "title": " F9803 should be  allowed with amount  ",
                            "fullTitle": "TaxableIncome_Line252_3--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: T2042, Partnership =Yes, Shared with Spouse= Yes. Farm is shared 50%-50%, Yes to Hobby Farm.).    F9803 should be  allowed with amount  ",
                            "timedOut": false,
                            "duration": 0,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let insuranceProgramOverpaymentRecaptureFeild =  FarmingActivityDataId('9803');\nlet insuranceProgramOverpaymentRecapture = savedForm[insuranceProgramOverpaymentRecaptureFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ insuranceProgramOverpaymentRecapture;\nassert.strictEqual( insuranceProgramOverpaymentRecapture, '1600', ' Feild should be built');",
                            "err": {},
                            "uuid": "30a0e833-18fd-4a22-be8c-d6839090cf8c",
                            "parentUUID": "1b5a6f30-dc82-4260-8e94-a9fd24ac892e",
                            "isHook": false,
                            "skipped": true
                        },
                        {
                            "title": " F9804 should be  allowed with amount  ",
                            "fullTitle": "TaxableIncome_Line252_3--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: T2042, Partnership =Yes, Shared with Spouse= Yes. Farm is shared 50%-50%, Yes to Hobby Farm.).    F9804 should be  allowed with amount  ",
                            "timedOut": false,
                            "duration": 0,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let otherInsuranceFeild =  FarmingActivityDataId('9804');\nlet otherInsurance = savedForm[otherInsuranceFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ otherInsurance;\nassert.strictEqual(otherInsurance, '1700', ' Feild should be built');",
                            "err": {},
                            "uuid": "0a771b53-555f-4497-9cfa-6a28c58295a0",
                            "parentUUID": "1b5a6f30-dc82-4260-8e94-a9fd24ac892e",
                            "isHook": false,
                            "skipped": true
                        },
                        {
                            "title": " F9805 should be  allowed with amount  ",
                            "fullTitle": "TaxableIncome_Line252_3--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: T2042, Partnership =Yes, Shared with Spouse= Yes. Farm is shared 50%-50%, Yes to Hobby Farm.).    F9805 should be  allowed with amount  ",
                            "timedOut": false,
                            "duration": 0,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let interestFeild =  FarmingActivityDataId('9805');\nlet interest = savedForm[interestFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ interest;\nassert.strictEqual( interest, '1800', ' Feild should be built');",
                            "err": {},
                            "uuid": "0d75a00f-0346-4112-85a7-e498c493cef1",
                            "parentUUID": "1b5a6f30-dc82-4260-8e94-a9fd24ac892e",
                            "isHook": false,
                            "skipped": true
                        },
                        {
                            "title": " F9808 should be  allowed with amount  ",
                            "fullTitle": "TaxableIncome_Line252_3--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: T2042, Partnership =Yes, Shared with Spouse= Yes. Farm is shared 50%-50%, Yes to Hobby Farm.).    F9808 should be  allowed with amount  ",
                            "timedOut": false,
                            "duration": 0,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let officeExpensesFeild =  FarmingActivityDataId('9808');\nlet officeExpenses = savedForm[officeExpensesFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ officeExpenses;\nassert.strictEqual( officeExpenses, '1900', ' Feild should be built');",
                            "err": {},
                            "uuid": "b6d04861-3e3c-4c8d-9f4b-a4a90a56d2d2",
                            "parentUUID": "1b5a6f30-dc82-4260-8e94-a9fd24ac892e",
                            "isHook": false,
                            "skipped": true
                        },
                        {
                            "title": " F9809 should be  allowed with amount  ",
                            "fullTitle": "TaxableIncome_Line252_3--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: T2042, Partnership =Yes, Shared with Spouse= Yes. Farm is shared 50%-50%, Yes to Hobby Farm.).    F9809 should be  allowed with amount  ",
                            "timedOut": false,
                            "duration": 0,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let legalAndAccountingFeesFeild =  FarmingActivityDataId('9809');\nlet legalAndAccountingFees = savedForm[legalAndAccountingFeesFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+legalAndAccountingFees;\nassert.strictEqual(legalAndAccountingFees, '2000', ' Feild should be built');",
                            "err": {},
                            "uuid": "bd194e18-e429-47ed-b3af-b662f3556192",
                            "parentUUID": "1b5a6f30-dc82-4260-8e94-a9fd24ac892e",
                            "isHook": false,
                            "skipped": true
                        },
                        {
                            "title": " F9810 should be  allowed with amount  ",
                            "fullTitle": "TaxableIncome_Line252_3--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: T2042, Partnership =Yes, Shared with Spouse= Yes. Farm is shared 50%-50%, Yes to Hobby Farm.).    F9810 should be  allowed with amount  ",
                            "timedOut": false,
                            "duration": 0,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let propertyTaxesFeild =  FarmingActivityDataId('9810');\nlet propertyTaxes = savedForm[propertyTaxesFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ propertyTaxes;\nassert.strictEqual( propertyTaxes, '2100', ' Feild should be built');",
                            "err": {},
                            "uuid": "0f2ca87b-316e-4c35-9f85-f297b6785e78",
                            "parentUUID": "1b5a6f30-dc82-4260-8e94-a9fd24ac892e",
                            "isHook": false,
                            "skipped": true
                        },
                        {
                            "title": " F9811 should be  allowed with amount  ",
                            "fullTitle": "TaxableIncome_Line252_3--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: T2042, Partnership =Yes, Shared with Spouse= Yes. Farm is shared 50%-50%, Yes to Hobby Farm.).    F9811 should be  allowed with amount  ",
                            "timedOut": false,
                            "duration": 0,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let rentLandBuildingsPastureFeild =  FarmingActivityDataId('9811');\nlet rentLandBuildingsPasture = savedForm[rentLandBuildingsPastureFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ rentLandBuildingsPasture;\nassert.strictEqual( rentLandBuildingsPasture, '2200', ' Feild should be built');",
                            "err": {},
                            "uuid": "933fdd8c-7185-427c-8006-4f8fb60548ca",
                            "parentUUID": "1b5a6f30-dc82-4260-8e94-a9fd24ac892e",
                            "isHook": false,
                            "skipped": true
                        },
                        {
                            "title": " F9814 should be  allowed with amount  ",
                            "fullTitle": "TaxableIncome_Line252_3--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: T2042, Partnership =Yes, Shared with Spouse= Yes. Farm is shared 50%-50%, Yes to Hobby Farm.).    F9814 should be  allowed with amount  ",
                            "timedOut": false,
                            "duration": 0,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let salariesWagesAndBenefitsIncludingEmployerContributionsFeild =  FarmingActivityDataId('9814');\nlet salariesWagesAndBenefitsIncludingEmployerContributions = savedForm[salariesWagesAndBenefitsIncludingEmployerContributionsFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ salariesWagesAndBenefitsIncludingEmployerContributions;\nassert.strictEqual( salariesWagesAndBenefitsIncludingEmployerContributions, '2300', ' Feild should be built');",
                            "err": {},
                            "uuid": "145dae12-e3e1-4f8c-8561-6ee05ccd6894",
                            "parentUUID": "1b5a6f30-dc82-4260-8e94-a9fd24ac892e",
                            "isHook": false,
                            "skipped": true
                        },
                        {
                            "title": " F9819 should be  allowed with amount  ",
                            "fullTitle": "TaxableIncome_Line252_3--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: T2042, Partnership =Yes, Shared with Spouse= Yes. Farm is shared 50%-50%, Yes to Hobby Farm.).    F9819 should be  allowed with amount  ",
                            "timedOut": false,
                            "duration": 0,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let fuelAndOilFeild =  FarmingActivityDataId('9819');\nlet fuelAndOil = savedForm[fuelAndOilFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+fuelAndOil;\nassert.strictEqual( fuelAndOil, '1000', ' Feild should be built');",
                            "err": {},
                            "uuid": "2472eda9-636d-4da0-b370-e417406f274d",
                            "parentUUID": "1b5a6f30-dc82-4260-8e94-a9fd24ac892e",
                            "isHook": false,
                            "skipped": true
                        },
                        {
                            "title": " F9820 should be  allowed with amount  ",
                            "fullTitle": "TaxableIncome_Line252_3--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: T2042, Partnership =Yes, Shared with Spouse= Yes. Farm is shared 50%-50%, Yes to Hobby Farm.).    F9820 should be  allowed with amount  ",
                            "timedOut": false,
                            "duration": 0,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let smallToolsFeild =  FarmingActivityDataId('9820');\nlet smallTools = savedForm[smallToolsFeild];\nthis._runnable.title = this._runnable.title + ' allow.value =='+ smallTools;\nassert.strictEqual( smallTools, '2400', ' Feild should be built');",
                            "err": {},
                            "uuid": "07f28761-d696-4f0a-ad9e-97ff541890b5",
                            "parentUUID": "1b5a6f30-dc82-4260-8e94-a9fd24ac892e",
                            "isHook": false,
                            "skipped": true
                        },
                        {
                            "title": " F9936 should be  allowed with amount  ",
                            "fullTitle": "TaxableIncome_Line252_3--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: T2042, Partnership =Yes, Shared with Spouse= Yes. Farm is shared 50%-50%, Yes to Hobby Farm.).    F9936 should be  allowed with amount  ",
                            "timedOut": false,
                            "duration": 0,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let capitalCostAllowanceFeild =fishingActivityCoOwnerDataId('9936');\nlet  capitalCostAllowance = savedForm[  capitalCostAllowanceFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+  capitalCostAllowance;\nassert.strictEqual(  capitalCostAllowance, undefined, ' Feild should be built');",
                            "err": {},
                            "uuid": "099871d3-27c1-4059-96ee-341cd888481c",
                            "parentUUID": "1b5a6f30-dc82-4260-8e94-a9fd24ac892e",
                            "isHook": false,
                            "skipped": true
                        },
                        {
                            "title": " F9937 should be  allowed with amount  ",
                            "fullTitle": "TaxableIncome_Line252_3--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: T2042, Partnership =Yes, Shared with Spouse= Yes. Farm is shared 50%-50%, Yes to Hobby Farm.).    F9937 should be  allowed with amount  ",
                            "timedOut": false,
                            "duration": 0,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let mandatoryInventoryAdjustmentIn2018Feild =  FarmingActivityDataId('9937');\nlet mandatoryInventoryAdjustmentIn2018 = savedForm[mandatoryInventoryAdjustmentIn2018Feild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ mandatoryInventoryAdjustmentIn2018;\nassert.strictEqual( mandatoryInventoryAdjustmentIn2018, '2500', ' Feild should be built');",
                            "err": {},
                            "uuid": "7966e764-2e15-4361-9879-94c7527ceb49",
                            "parentUUID": "1b5a6f30-dc82-4260-8e94-a9fd24ac892e",
                            "isHook": false,
                            "skipped": true
                        },
                        {
                            "title": " F9938 should be  allowed with amount  ",
                            "fullTitle": "TaxableIncome_Line252_3--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: T2042, Partnership =Yes, Shared with Spouse= Yes. Farm is shared 50%-50%, Yes to Hobby Farm.).    F9938 should be  allowed with amount  ",
                            "timedOut": false,
                            "duration": 0,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let optionalInventoryAdjustment2018Feild =  FarmingActivityDataId('9938');\nlet  optionalInventoryAdjustment2018 = savedForm[ optionalInventoryAdjustment2018Feild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+  optionalInventoryAdjustment2018;\nassert.strictEqual(  optionalInventoryAdjustment2018, '2600', ' Feild should be built');",
                            "err": {},
                            "uuid": "934aaa11-e7b7-49bf-ae92-db7c49706ad2",
                            "parentUUID": "1b5a6f30-dc82-4260-8e94-a9fd24ac892e",
                            "isHook": false,
                            "skipped": true
                        },
                        {
                            "title": " F9941 should be  allowed with amount  ",
                            "fullTitle": "TaxableIncome_Line252_3--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: T2042, Partnership =Yes, Shared with Spouse= Yes. Farm is shared 50%-50%, Yes to Hobby Farm.).    F9941 should be  allowed with amount  ",
                            "timedOut": false,
                            "duration": 0,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let optionalInventoryAdjustmentIncludedIn2019Feild =  FarmingActivityDataId('9941');\nlet optionalInventoryAdjustmentIncludedIn2019 = savedForm[optionalInventoryAdjustmentIncludedIn2019Feild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+optionalInventoryAdjustmentIncludedIn2019;\nassert.strictEqual( optionalInventoryAdjustmentIncludedIn2019, '2700', ' Feild should be built');",
                            "err": {},
                            "uuid": "f91bf2cc-dbfd-41ec-b10b-c7d6f98aef47",
                            "parentUUID": "1b5a6f30-dc82-4260-8e94-a9fd24ac892e",
                            "isHook": false,
                            "skipped": true
                        },
                        {
                            "title": " F9942 should be  allowed with amount  ",
                            "fullTitle": "TaxableIncome_Line252_3--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: T2042, Partnership =Yes, Shared with Spouse= Yes. Farm is shared 50%-50%, Yes to Hobby Farm.).    F9942 should be  allowed with amount  ",
                            "timedOut": false,
                            "duration": 0,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let mandatoryInventoryAdjustmentIncludedIn2019Feild =  FarmingActivityDataId('9942');\nlet mandatoryInventoryAdjustmentIncludedIn2019 = savedForm[mandatoryInventoryAdjustmentIncludedIn2019Feild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+mandatoryInventoryAdjustmentIncludedIn2019;\nassert.strictEqual( mandatoryInventoryAdjustmentIncludedIn2019, '2800', ' Feild should be built');",
                            "err": {},
                            "uuid": "478f2f35-1e7d-4c95-a141-028f55313a92",
                            "parentUUID": "1b5a6f30-dc82-4260-8e94-a9fd24ac892e",
                            "isHook": false,
                            "skipped": true
                        },
                        {
                            "title": " F9974 should be  allowed with amount  ",
                            "fullTitle": "TaxableIncome_Line252_3--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: T2042, Partnership =Yes, Shared with Spouse= Yes. Farm is shared 50%-50%, Yes to Hobby Farm.).    F9974 should be  allowed with amount  ",
                            "timedOut": false,
                            "duration": 0,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let gSTHSTRebateForPartnersIfApplicableAndIfReceivedIn2019Feild =  FarmingActivityDataId('9974');\nlet gSTHSTRebateForPartnersIfApplicableAndIfReceivedIn2019 = savedForm[gSTHSTRebateForPartnersIfApplicableAndIfReceivedIn2019Feild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+gSTHSTRebateForPartnersIfApplicableAndIfReceivedIn2019;\nassert.strictEqual( gSTHSTRebateForPartnersIfApplicableAndIfReceivedIn2019, '2900', ' Feild should be built');",
                            "err": {},
                            "uuid": "bd5210de-4c83-4008-b8db-ac3aa2257684",
                            "parentUUID": "1b5a6f30-dc82-4260-8e94-a9fd24ac892e",
                            "isHook": false,
                            "skipped": true
                        }
                    ],
                    "suites": [],
                    "passes": [],
                    "failures": [],
                    "pending": [],
                    "skipped": [
                        "f448701a-1093-423a-acf8-7b0831f8d026",
                        "0b77e2cd-69a1-442a-a8cc-8113c56b5b3c",
                        "04ed2514-def2-4187-bc71-6314b0df6040",
                        "ae26d933-8c92-4c92-91fe-1c3e43068239",
                        "971b7823-5878-4650-86f7-c9c568ccea4f",
                        "e9da890a-ab1f-486d-beef-215763f305ca",
                        "b58b6b8a-e274-4a37-90d3-b88df069457c",
                        "dd32118e-e83d-49a7-9311-91c0961014f7",
                        "abd6e047-a05b-463b-a54e-39bfa254deb6",
                        "7e5a30dd-1b99-481c-804b-d06ad8fbd042",
                        "35f826ff-db8d-490a-bff2-ff7a36d52f3d",
                        "a92e8abf-5a16-44a7-94a0-d4c4304b2786",
                        "fbb7f07e-19c9-4aba-ada3-6a4073b50628",
                        "e448054c-6234-49ee-b397-4b933c5fef61",
                        "318ad158-2f38-4580-9766-175ff917d61e",
                        "b5591530-48b5-4b36-bbcd-f48f77a588ea",
                        "8baab722-654a-49cc-a647-71d5a257a96a",
                        "54943ad9-d982-4069-add0-58c19b69ca49",
                        "641b62ac-079c-4b61-989b-16430897cf6e",
                        "e1749b80-1ff6-4fbb-b26f-4f57e214b6d2",
                        "a1b72ca0-83b9-4c67-af7b-bcd76fc49bb1",
                        "9ad7d78d-a6eb-497e-b160-0e3451fae5fc",
                        "dd4c4978-8817-4b17-a23a-bfd7c40c8c2b",
                        "a11c2c3b-2128-41e3-9950-f8de47d9bd22",
                        "80a86bc1-8621-4696-95b9-f317cabedba8",
                        "c0043762-ae54-4000-b14a-6cc175749631",
                        "cb10139e-f27d-42f2-a937-7b02f133337c",
                        "7bec1b9b-de1f-4e32-927c-cba52fd87b77",
                        "c203ce48-702c-4ca8-b789-47fc41467575",
                        "3947a087-04e5-47b5-8574-c1aa5583ef18",
                        "f6cecaba-da44-487f-ad16-97bd153f7974",
                        "1caf632d-b91d-4259-aedf-1ceb084c04b9",
                        "b6f2fda4-6299-40e3-a421-e01ea6c94cb7",
                        "0a9a8572-111a-4ba1-927a-b238ead86fe6",
                        "d1b7276a-9f3e-4392-8d55-a1409d525ef4",
                        "b318f5d4-1ad0-43f5-a8b5-41fa2e5144a2",
                        "2839b430-088e-4c1d-9f95-eb1f92f4a6f9",
                        "8ee83614-5807-4d13-9ec8-55d63e7a5093",
                        "0c7a8dc8-dbde-405b-9cfa-90cd3c5797f9",
                        "c449e5ef-cc38-4512-9ec8-5bfe5b6513dc",
                        "4d6c9b24-7350-41c1-b20e-f325d662fc3f",
                        "4561f482-0fb9-4539-b396-cd4facd67b79",
                        "3a3d3341-63af-47c4-b0dc-782651fb2119",
                        "96cd2d95-3f90-4386-8f2a-93a0ab5c2574",
                        "fe0cad3b-48b5-49f4-8cac-40d4e0f09f62",
                        "b702d987-4867-4bf1-b08b-23445908d7cb",
                        "1f28fc61-956f-44b3-b241-739728bacc84",
                        "597e3009-f378-4feb-b7fd-5ea4ada7609b",
                        "74f8c128-f067-49f9-a082-116c807660de",
                        "30a0e833-18fd-4a22-be8c-d6839090cf8c",
                        "0a771b53-555f-4497-9cfa-6a28c58295a0",
                        "0d75a00f-0346-4112-85a7-e498c493cef1",
                        "b6d04861-3e3c-4c8d-9f4b-a4a90a56d2d2",
                        "bd194e18-e429-47ed-b3af-b662f3556192",
                        "0f2ca87b-316e-4c35-9f85-f297b6785e78",
                        "933fdd8c-7185-427c-8006-4f8fb60548ca",
                        "145dae12-e3e1-4f8c-8561-6ee05ccd6894",
                        "2472eda9-636d-4da0-b370-e417406f274d",
                        "07f28761-d696-4f0a-ad9e-97ff541890b5",
                        "099871d3-27c1-4059-96ee-341cd888481c",
                        "7966e764-2e15-4361-9879-94c7527ceb49",
                        "934aaa11-e7b7-49bf-ae92-db7c49706ad2",
                        "f91bf2cc-dbfd-41ec-b10b-c7d6f98aef47",
                        "478f2f35-1e7d-4c95-a141-028f55313a92",
                        "bd5210de-4c83-4008-b8db-ac3aa2257684"
                    ],
                    "duration": 0,
                    "root": false,
                    "rootEmpty": false,
                    "_timeout": 200000
                },
                {
                    "uuid": "c56c6f59-3dce-4abb-8bb8-c11eead7a0bc",
                    "title": "TaxableIncome_Line252_3--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: T2042, Partnership =Yes, Shared with Spouse= Yes. Farm is shared 50%-50%, Yes to Hobby Farm.).  ",
                    "fullFile": "D:\\Rita\\taxtron\\code\\TaxTronWebTests\\my_work\\test_for_report_2020\\TCASES\\tcTaxableIncome_Line252_3.js",
                    "file": "\\my_work\\test_for_report_2020\\TCASES\\tcTaxableIncome_Line252_3.js",
                    "beforeHooks": [
                        {
                            "title": "\"before all\" hook",
                            "fullTitle": "TaxableIncome_Line252_3--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: T2042, Partnership =Yes, Shared with Spouse= Yes. Farm is shared 50%-50%, Yes to Hobby Farm.).   \"before all\" hook",
                            "timedOut": false,
                            "duration": 144982,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "driver = new Builder()\n    .withCapabilities(Capabilities.chrome().setAcceptInsecureCerts(true))\n    .build();\ndriver.manage().window().setRect({ width: 1366, height: 768 });\nawait login(driver, 'ritakumar@outlook.com', 'rishu12rashi');\nawait selectNewReturn(driver,province);\nawait switchToastOff(driver);\n    \nawait nextClick(driver);\nawait setInputById(driver, 'Firstnames0', 'king');\nawait setInputById(driver, 'Surname0', 'smith');\nawait selectDateById(driver, 'DOB0', '1968/10/10');\nawait setInputById(driver, 'SIN0', '100000009');\nawait selectComboById(driver, 'MaritalStatus0', 'Common-law');\nawait selectToggleById(driver, 'domchanged0', '0');\nawait selectToggleById(driver, 'IsLinkedReturn0', '1');\nawait nextClick(driver);\nawait addressExpandClick(driver, 'fullAdd');\nawait setInputById(driver, 'StreetNo0', '25');\nawait setInputById(driver, 'StreetName0', 'JANE ST');\nawait setInputById(driver, 'City0', 'ETOBICOKE');\nawait selectComboById(driver, 'ProvinceOfRes0', 'Manitoba');\nawait setInputById(driver, 'PCodeC0', 'R0H 1N1');\nawait selectToggleById(driver, 'quesFP0', '0');\nawait selectToggleById(driver, 'quesPrinResi0', '0');\nawait selectToggleById(driver, 'qCitizen0', '0');\nawait nextClick(driver);\nawait nextClick(driver);\nawait setInputById(driver, 'Firstnames0sp', 'jone');\nawait setInputById(driver, 'Surname0sp', 'smith');\nawait selectDateById(driver, 'DOB0sp', '1968/10/10');\nawait setInputById(driver, 'SIN0sp', '100000025');\nawait selectComboById(driver, 'Province0sp', 'British Columbia');\nawait nextClick(driver);\nawait selectTab(driver, 'Income');\nawait selectTab(driver, 'IncomeProfile');\nawait selectToggleById(driver, 'SelfEmployed0tp', '1');\nawait nextClick(driver);\nawait selectToggleById(driver, 'WorkedInYOR0sp', '0');\nawait nextClick(driver);\nawait selectToggleById(driver, 'FIncome0tp', '1');\nawait nextClick(driver);\nawait setInputById(driver, 'FarmName0tp', 'CDR');\nawait setInputById(driver, 'FarmProduct0tp', 'CHICKEN');\nawait setInputById(driver, 'FarmRAN0tp', '100000025');\nawait selectSFDDateById(driver, 'T2042_SFDStart0tp', Fed.TaxYear,'0','/01/25');\nawait selectSFDDateById(driver, 'T2042_SFDEnd0tp', Fed.TaxYear,'0','/12/31');\nawait selectComboById(driver, 'FarmSIC0tp', 'Hay Farming ');\nawait selectToggleById(driver, 'T2042AccountingMethod0tp', '1');\nawait selectToggleById(driver, 'RFLCheck0tp', '1');\nawait selectToggleById(driver, 'partnership0tp', '1');\nawait selectToggleById(driver, 'iSpartnershipWithSp0tp', '1');\nawait setInputById(driver, 'FarmPSpShare0tp', '50');\nawait setInputById(driver, 'FarmPTPShare0tp', '50');\nawait nextClick(driver);\nawait setInputById(driver, 'IWheat0tp', '1');\nawait setInputById(driver, 'IOats0tp', '2');\nawait setInputById(driver, 'IBarley0tp', '3');\nawait setInputById(driver, 'IMixedgrains0tp', '4');\nawait setInputById(driver, 'Icorn0tp', '5');\nawait setInputById(driver, 'ICanola0tp', '6');\nawait setInputById(driver, 'IFlaxseed0tp', '7');\nawait setInputById(driver, 'ISoyabeans0tp', '8');\nawait setInputById(driver, 'Line93700tp', '9');\nawait setInputById(driver, 'Line94210tp', '10');\nawait setInputById(driver, 'Line94220tp', '11');\nawait setInputById(driver, 'Line94230tp', '12');\nawait setInputById(driver, 'Line94240tp', '13');\nawait setInputById(driver, 'Line94200tp', '14');\nawait setInputById(driver, 'Line94250tp', '15');\nawait setInputById(driver, 'Line94260tp', '16');\nawait selectToggleById(driver, 'livestocksale0tp', '1');\nawait setInputById(driver, 'Line94710tp', '17');\nawait setInputById(driver, 'Line94720tp', '18');\nawait setInputById(driver, 'Line94730tp', '19');\nawait setInputById(driver, 'Line94740tp', '20');\nawait setInputById(driver, 'Line94700tp', '21');\nawait setInputById(driver, 'Line94760tp', '22');\nawait setInputById(driver, 'Line94770tp', '23');\nawait setInputById(driver, 'Line95200tp', '24');\nawait selectToggleById(driver, 'paymentreceived0tp', '1');\nawait setInputById(driver, 'FLine4750tp', '25');\nawait setInputById(driver, 'FLine4800tp', '26');\nawait setInputById(driver, 'Line95700tp', '27');\nawait setInputById(driver, 'NISA5020tp', '28');\nawait setInputById(driver, 'Line96040tp', '29');\nawait setInputById(driver, 'NISA5030tp', '30');\nawait setInputById(driver, 'Line95400tp', '31');\nawait setInputById(driver, 'T2042_1100tp', '32');\nawait nextClick(driver);\nawait setInputById(driver, 'NISA5220tp', '100');\nawait setInputById(driver, 'NISA5180tp', '200');\nawait setInputById(driver, 'NISA5140tp', '300');\nawait setInputById(driver, 'Line96640tp', '400');\nawait setInputById(driver, 'Line97110tp', '500');\nawait setInputById(driver, 'Line97120tp', '600');\nawait setInputById(driver, 'NISA5190tp', '700');\nawait setInputById(driver, 'NISA5160tp', '800');\nawait setInputById(driver, 'NISA5150tp', '900');\nawait setInputById(driver, 'Line97950tp', '1000');\nawait setInputById(driver, 'Line97960tp', '1100');\nawait setInputById(driver, 'Line97970tp', '1200');\nawait setInputById(driver, 'Line97980tp', '1300');\nawait setInputById(driver, 'Line97990tp', '1400');\nawait setInputById(driver, 'Line98020tp', '1500');\nawait setInputById(driver, 'Line98030tp', '1600');\nawait setInputById(driver, 'Line98040tp', '1700');\nawait setInputById(driver, 'Line98050tp', '1800');\nawait setInputById(driver, 'Line98080tp', '1900');\nawait setInputById(driver, 'Line98090tp', '2000');\nawait setInputById(driver, 'NISA5480tp', '2100');\nawait setInputById(driver, 'Line98110tp', '2200');\nawait setInputById(driver, 'Line98140tp', '2300');\nawait setInputById(driver, 'Line98200tp', '2400');\nawait setInputById(driver, 'Line99370tp', '2500');\nawait setInputById(driver, 'Line99380tp', '2600');\nawait setInputById(driver, 'Line99410tp', '2700');\nawait setInputById(driver, 'FLine6350tp', '2800');\nawait setInputById(driver, 'T2042_99740tp', '2900');\nawait setInputById(driver, 'T2042_2_360tp', '3000');\nawait setInputById(driver, 'T2042_2_380tp', '3100');\nawait nextClick(driver);\nawait selectToggleById(driver, 'MotorVehicleExp0tp', '1');\nawait selectToggleById(driver, 'leaseOrPurchase0tp', '1');\nawait selectDateById(driver, 'FarmAutoPDate10tp', '2017/01/01');\nawait setInputById(driver, 'FarmAutoKM10tp', '10000');\nawait setInputById(driver, 'FarmAutoKmTotal10tp', '10000');\nawait setInputById(driver, 'FarmAutoFuel10tp', '1000');\nawait selectToggleById(driver, 'FarmAutoShare10tp', '1');\nawait nextClick(driver);\nawait nextClick(driver);\nawait selectToggleById(driver, 'S8Q10tp', '1');\nawait selectComboById(driver, 'FarmIX10tp', ' Class 1 - 4% Most buildings you bought after 1987 ');\nawait setInputById(driver, 'T2042_3_600tp', '100');\nawait setInputById(driver, 'propDetail0tp', 'ASEWD');\nawait addTabT2042_3Atrclick(driver);\nawait selectComboById(driver, 'FarmIX11tp', 'Class 1.1 - 10% Eligible non-residential buildings acquired by a taxpayer after March 18, 2007, and used in Canada to manufacture or process goods for sale or lease ');\nawait setInputById(driver, 'T2042_3_601tp', '200');\nawait addTabT2042_3Atrclick(driver);\nawait selectComboById(driver, 'FarmIX12tp', 'Class 1.2 - 6% Eligible non-residential buildings acquired by a taxpayer after March 18, 2007');\nawait setInputById(driver, 'T2042_3_602tp', '300');\nawait addTabT2042_3Atrclick(driver);\nawait selectComboById(driver, 'FarmIX13tp', 'Class 1.3 - 10% Eligible liquefaction activities in respect of the eligible liquefaction facility acquired after Feburary 19, 2015');\nawait setInputById(driver, 'T2042_3_603tp', '400');\nawait addTabT2042_3Atrclick(driver);\nawait selectComboById(driver, 'FarmIX14tp', 'Class 2 - 6% Electrical generating equipment, pipelines, and plant used in production of electric energy');\nawait setInputById(driver, 'T2042_3_604tp', '500');\nawait addTabT2042_3Atrclick(driver);\nawait selectComboById(driver, 'FarmIX15tp', 'Class 3 - 5% Most buildings acquired before 1988');\nawait setInputById(driver, 'T2042_3_605tp', '600');\nawait addTabT2042_3Atrclick(driver);\nawait selectComboById(driver, 'FarmIX16tp', 'Class 4 - 6% Railway or trolley bus systems ');\nawait setInputById(driver, 'T2042_3_606tp', '700');\n// await addTabT2042_3Atrclick(driver);\n// await selectComboById(driver, 'FarmIX17tp', ' Class 1.3 - 10% Eligible liquefaction activities in respect of the eligible liquefaction facility acquired after Feburary 19, 2015 ');\nawait nextClick(driver);\nawait setInputById(driver, 'T2042_1_WebsitePageCount0tp', '10');\nawait setInputById(driver, 'T2042_1_WebAddress10tp', 'INTERNETCHICKEN1@TAXTRON.CA');\nawait setInputById(driver, 'T2042_1_WebAddress11tp', 'INTERNETCHICKEN2@TAXTRON.CA');\nawait setInputById(driver, 'T2042_1_WebAddress12tp', 'INTERNETCHICKEN3@TAXTRON.CA');\nawait setInputById(driver, 'T2042_1_WebAddress13tp', 'INTERNETCHICKEN4@TAXTRON.CA');\nawait setInputById(driver, 'T2042_1_WebAddress14tp', 'INTERNETCHICKEN5@TAXTRON.CA');\nawait setInputById(driver, 'T2042_1_WebpagesGross0tp', '.49');\nawait nextClick(driver);\nsavedForm = await getServerFile(driver);",
                            "err": {},
                            "uuid": "5fd186a2-a7f6-43e9-ac43-d6533322d5c7",
                            "parentUUID": "c56c6f59-3dce-4abb-8bb8-c11eead7a0bc",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "afterHooks": [],
                    "tests": [
                        {
                            "title": " F14100 should be  allowed with amount    allow.value ==-8843",
                            "fullTitle": "TaxableIncome_Line252_3--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: T2042, Partnership =Yes, Shared with Spouse= Yes. Farm is shared 50%-50%, Yes to Hobby Farm.).    F14100 should be  allowed with amount    allow.value ==-8843",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let netFarmingIncomelossFeild = getFieldId('14100');\nlet netFarmingIncomeloss = savedForm[ netFarmingIncomelossFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ netFarmingIncomeloss;\nassert.strictEqual( netFarmingIncomeloss, '-8843', ' Feild should be built');",
                            "err": {},
                            "uuid": "3c53394b-7310-4266-8a6d-a3580b9d8d9f",
                            "parentUUID": "c56c6f59-3dce-4abb-8bb8-c11eead7a0bc",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F9371 should be  allowed with amount    allow.value ==1",
                            "fullTitle": "TaxableIncome_Line252_3--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: T2042, Partnership =Yes, Shared with Spouse= Yes. Farm is shared 50%-50%, Yes to Hobby Farm.).    F9371 should be  allowed with amount    allow.value ==1",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let wheatFeild =  FarmingActivityDataId('9371');\nlet  wheat = savedForm[  wheatFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+  wheat;\nassert.strictEqual(  wheat, '1', ' Feild should be built');",
                            "err": {},
                            "uuid": "afcb343e-85e7-4a73-97df-d6abdf45dd79",
                            "parentUUID": "c56c6f59-3dce-4abb-8bb8-c11eead7a0bc",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F9372 should be  allowed with amount    allow.value ==2",
                            "fullTitle": "TaxableIncome_Line252_3--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: T2042, Partnership =Yes, Shared with Spouse= Yes. Farm is shared 50%-50%, Yes to Hobby Farm.).    F9372 should be  allowed with amount    allow.value ==2",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let oatsFeild =  FarmingActivityDataId('9372');\nlet  oats = savedForm[  oatsFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+  oats;\nassert.strictEqual( oats, '2', ' Feild should be built');",
                            "err": {},
                            "uuid": "f68ac86b-1180-48b2-b90d-0706e48d37fe",
                            "parentUUID": "c56c6f59-3dce-4abb-8bb8-c11eead7a0bc",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F9373 should be  allowed with amount    allow.value ==3",
                            "fullTitle": "TaxableIncome_Line252_3--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: T2042, Partnership =Yes, Shared with Spouse= Yes. Farm is shared 50%-50%, Yes to Hobby Farm.).    F9373 should be  allowed with amount    allow.value ==3",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let barleyFeild =  FarmingActivityDataId('9373');\nlet  barley = savedForm[   barleyFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+   barley;\nassert.strictEqual(   barley, '3', ' Feild should be built');",
                            "err": {},
                            "uuid": "6f775496-2210-455f-96c7-a3339b9575e3",
                            "parentUUID": "c56c6f59-3dce-4abb-8bb8-c11eead7a0bc",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F9374 should be  allowed with amount    allow.value ==4",
                            "fullTitle": "TaxableIncome_Line252_3--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: T2042, Partnership =Yes, Shared with Spouse= Yes. Farm is shared 50%-50%, Yes to Hobby Farm.).    F9374 should be  allowed with amount    allow.value ==4",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let mixedGrainsFeild =  FarmingActivityDataId('9374');\nlet  mixedGrains = savedForm[  mixedGrainsFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+  mixedGrains;\nassert.strictEqual(  mixedGrains, '4', ' Feild should be built');",
                            "err": {},
                            "uuid": "e72151fb-b16b-4845-8576-42d76d05ce63",
                            "parentUUID": "c56c6f59-3dce-4abb-8bb8-c11eead7a0bc",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F9375 should be  allowed with amount    allow.value ==5",
                            "fullTitle": "TaxableIncome_Line252_3--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: T2042, Partnership =Yes, Shared with Spouse= Yes. Farm is shared 50%-50%, Yes to Hobby Farm.).    F9375 should be  allowed with amount    allow.value ==5",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let cornFeild =  FarmingActivityDataId('9375');\nlet corn = savedForm[  cornFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+  corn;\nassert.strictEqual( corn, '5', ' Feild should be built');",
                            "err": {},
                            "uuid": "2d4858ce-9360-42dd-8287-72dfa8d9b849",
                            "parentUUID": "c56c6f59-3dce-4abb-8bb8-c11eead7a0bc",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F9376 should be  allowed with amount    allow.value ==6",
                            "fullTitle": "TaxableIncome_Line252_3--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: T2042, Partnership =Yes, Shared with Spouse= Yes. Farm is shared 50%-50%, Yes to Hobby Farm.).    F9376 should be  allowed with amount    allow.value ==6",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let canolaFeild =  FarmingActivityDataId('9376');\nlet canola = savedForm[  canolaFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ canola;\nassert.strictEqual( canola, '6', ' Feild should be built');",
                            "err": {},
                            "uuid": "1f407476-c503-4ec3-a56e-ea662e8b667c",
                            "parentUUID": "c56c6f59-3dce-4abb-8bb8-c11eead7a0bc",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F9377 should be  allowed with amount    allow.value ==7",
                            "fullTitle": "TaxableIncome_Line252_3--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: T2042, Partnership =Yes, Shared with Spouse= Yes. Farm is shared 50%-50%, Yes to Hobby Farm.).    F9377 should be  allowed with amount    allow.value ==7",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let flaxSeedFeild =  FarmingActivityDataId('9377');\nlet  flaxSeed = savedForm[ flaxSeedFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ flaxSeed;\nassert.strictEqual( flaxSeed, '7', ' Feild should be built');",
                            "err": {},
                            "uuid": "9387dcf4-6cba-4e29-8ce3-777a693d1e10",
                            "parentUUID": "c56c6f59-3dce-4abb-8bb8-c11eead7a0bc",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F9378 should be  allowed with amount    allow.value ==8",
                            "fullTitle": "TaxableIncome_Line252_3--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: T2042, Partnership =Yes, Shared with Spouse= Yes. Farm is shared 50%-50%, Yes to Hobby Farm.).    F9378 should be  allowed with amount    allow.value ==8",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let soyaBeansFeild =  FarmingActivityDataId('9378');\nlet  soyaBeans = savedForm[ soyaBeansFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+  soyaBeans;\nassert.strictEqual(  soyaBeans, '8', ' Feild should be built');",
                            "err": {},
                            "uuid": "4d506956-de08-4680-8c3d-8ab4c2ac6f9a",
                            "parentUUID": "c56c6f59-3dce-4abb-8bb8-c11eead7a0bc",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F9370 should be  allowed with amount    allow.value ==9",
                            "fullTitle": "TaxableIncome_Line252_3--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: T2042, Partnership =Yes, Shared with Spouse= Yes. Farm is shared 50%-50%, Yes to Hobby Farm.).    F9370 should be  allowed with amount    allow.value ==9",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let otherGrainsAndOilseedsFeild =  FarmingActivityDataId('9370');\nlet  otherGrainsAndOilseeds = savedForm[ otherGrainsAndOilseedsFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+  otherGrainsAndOilseeds;\nassert.strictEqual( otherGrainsAndOilseeds, '9', ' Feild should be built');",
                            "err": {},
                            "uuid": "8d8af7ba-0d6d-4e24-8aba-61710c2de03a",
                            "parentUUID": "c56c6f59-3dce-4abb-8bb8-c11eead7a0bc",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F9421 should be  allowed with amount    allow.value ==10",
                            "fullTitle": "TaxableIncome_Line252_3--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: T2042, Partnership =Yes, Shared with Spouse= Yes. Farm is shared 50%-50%, Yes to Hobby Farm.).    F9421 should be  allowed with amount    allow.value ==10",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let fruitsFeild =  FarmingActivityDataId('9421');\nlet  fruits = savedForm[ fruitsFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ fruits;\nassert.strictEqual( fruits, '10', ' Feild should be built');",
                            "err": {},
                            "uuid": "2379616c-4ba4-4376-8f57-20560cb63243",
                            "parentUUID": "c56c6f59-3dce-4abb-8bb8-c11eead7a0bc",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F9422 should be  allowed with amount    allow.value ==11",
                            "fullTitle": "TaxableIncome_Line252_3--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: T2042, Partnership =Yes, Shared with Spouse= Yes. Farm is shared 50%-50%, Yes to Hobby Farm.).    F9422 should be  allowed with amount    allow.value ==11",
                            "timedOut": false,
                            "duration": 1,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let potatoesFeild =  FarmingActivityDataId('9422');\nlet potatoes = savedForm[ potatoesFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+  potatoes;\nassert.strictEqual( potatoes, '11', ' Feild should be built');",
                            "err": {},
                            "uuid": "50ccf446-6831-4ee5-a5a2-f74562d74b81",
                            "parentUUID": "c56c6f59-3dce-4abb-8bb8-c11eead7a0bc",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F9423 should be  allowed with amount    allow.value ==12",
                            "fullTitle": "TaxableIncome_Line252_3--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: T2042, Partnership =Yes, Shared with Spouse= Yes. Farm is shared 50%-50%, Yes to Hobby Farm.).    F9423 should be  allowed with amount    allow.value ==12",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let vegetablesExcludingPotatoesFeild =  FarmingActivityDataId('9423');\nlet  vegetablesExcludingPotatoes = savedForm[  vegetablesExcludingPotatoesFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+  vegetablesExcludingPotatoes;\nassert.strictEqual( vegetablesExcludingPotatoes, '12', ' Feild should be built');",
                            "err": {},
                            "uuid": "1bf31c3b-210b-44c2-ab1b-5ad7500e841e",
                            "parentUUID": "c56c6f59-3dce-4abb-8bb8-c11eead7a0bc",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F9424 should be  allowed with amount    allow.value ==13",
                            "fullTitle": "TaxableIncome_Line252_3--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: T2042, Partnership =Yes, Shared with Spouse= Yes. Farm is shared 50%-50%, Yes to Hobby Farm.).    F9424 should be  allowed with amount    allow.value ==13",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let tobaccoFeild = FarmingActivityDataId('9424');\nlet  tobacco = savedForm[ tobaccoFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ tobacco;\nassert.strictEqual( tobacco, '13', ' Feild should be built');",
                            "err": {},
                            "uuid": "9a0e6266-3274-4c73-b276-35e0f2a201c8",
                            "parentUUID": "c56c6f59-3dce-4abb-8bb8-c11eead7a0bc",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F9420 should be  allowed with amount    allow.value ==14",
                            "fullTitle": "TaxableIncome_Line252_3--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: T2042, Partnership =Yes, Shared with Spouse= Yes. Farm is shared 50%-50%, Yes to Hobby Farm.).    F9420 should be  allowed with amount    allow.value ==14",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let otherCropsFeild =  FarmingActivityDataId('9420');\nlet  otherCrops = savedForm[ otherCropsFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ otherCrops;\nassert.strictEqual(  otherCrops, '14', ' Feild should be built');",
                            "err": {},
                            "uuid": "b446ce67-e770-4b1e-b9ec-13a8ecfd9424",
                            "parentUUID": "c56c6f59-3dce-4abb-8bb8-c11eead7a0bc",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F9425 should be  allowed with amount    allow.value ==15",
                            "fullTitle": "TaxableIncome_Line252_3--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: T2042, Partnership =Yes, Shared with Spouse= Yes. Farm is shared 50%-50%, Yes to Hobby Farm.).    F9425 should be  allowed with amount    allow.value ==15",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let greenhouseAndNurseryProductsFeild =  FarmingActivityDataId('9425');\nlet  greenhouseAndNurseryProducts = savedForm[greenhouseAndNurseryProductsFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ greenhouseAndNurseryProducts;\nassert.strictEqual(  greenhouseAndNurseryProducts, '15', ' Feild should be built');",
                            "err": {},
                            "uuid": "a7cc382c-3b79-4f68-920a-9735dd82fc63",
                            "parentUUID": "c56c6f59-3dce-4abb-8bb8-c11eead7a0bc",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F9426 should be  allowed with amount    allow.value ==16",
                            "fullTitle": "TaxableIncome_Line252_3--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: T2042, Partnership =Yes, Shared with Spouse= Yes. Farm is shared 50%-50%, Yes to Hobby Farm.).    F9426 should be  allowed with amount    allow.value ==16",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let forageCropsOrSeedsFeild =  FarmingActivityDataId('9426');\nlet forageCropsOrSeeds = savedForm[ forageCropsOrSeedsFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+forageCropsOrSeeds;\nassert.strictEqual(  forageCropsOrSeeds, '16', ' Feild should be built');",
                            "err": {},
                            "uuid": "fcd3fb76-6d87-4dd9-8106-1bf9cd3a18af",
                            "parentUUID": "c56c6f59-3dce-4abb-8bb8-c11eead7a0bc",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F9471 should be  allowed with amount    allow.value ==17",
                            "fullTitle": "TaxableIncome_Line252_3--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: T2042, Partnership =Yes, Shared with Spouse= Yes. Farm is shared 50%-50%, Yes to Hobby Farm.).    F9471 should be  allowed with amount    allow.value ==17",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let liveStockSoldCattleFeild =  FarmingActivityDataId('9471');\nlet  liveStockSoldCattle = savedForm[ liveStockSoldCattleFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ liveStockSoldCattle;\nassert.strictEqual( liveStockSoldCattle, '17', ' Feild should be built');",
                            "err": {},
                            "uuid": "29a58268-8aa6-4e4a-90b3-717a1ee9ea62",
                            "parentUUID": "c56c6f59-3dce-4abb-8bb8-c11eead7a0bc",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F9472 should be  allowed with amount    allow.value ==18",
                            "fullTitle": "TaxableIncome_Line252_3--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: T2042, Partnership =Yes, Shared with Spouse= Yes. Farm is shared 50%-50%, Yes to Hobby Farm.).    F9472 should be  allowed with amount    allow.value ==18",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let livestockSoldSwinesFeild =  FarmingActivityDataId('9472');\nlet livestockSoldSwines = savedForm[livestockSoldSwinesFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ livestockSoldSwines;\nassert.strictEqual(  livestockSoldSwines, '18', ' Feild should be built');",
                            "err": {},
                            "uuid": "d31a0e3e-24bd-434c-8861-5ef18011a81c",
                            "parentUUID": "c56c6f59-3dce-4abb-8bb8-c11eead7a0bc",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F9473 should be  allowed with amount    allow.value ==19",
                            "fullTitle": "TaxableIncome_Line252_3--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: T2042, Partnership =Yes, Shared with Spouse= Yes. Farm is shared 50%-50%, Yes to Hobby Farm.).    F9473 should be  allowed with amount    allow.value ==19",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let livestockSoldPoultryFeild =  FarmingActivityDataId('9473');\nlet  livestockSoldPoultry = savedForm[ livestockSoldPoultryFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ livestockSoldPoultry;\nassert.strictEqual(  livestockSoldPoultry, '19', ' Feild should be built');",
                            "err": {},
                            "uuid": "c8cccc11-8f07-4157-a233-8e3133fac9b9",
                            "parentUUID": "c56c6f59-3dce-4abb-8bb8-c11eead7a0bc",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F9474 should be  allowed with amount    allow.value ==20",
                            "fullTitle": "TaxableIncome_Line252_3--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: T2042, Partnership =Yes, Shared with Spouse= Yes. Farm is shared 50%-50%, Yes to Hobby Farm.).    F9474 should be  allowed with amount    allow.value ==20",
                            "timedOut": false,
                            "duration": 1,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let livestockSoldSheepAndlambsFeild =  FarmingActivityDataId('9474');\nlet livestockSoldSheepAndlambs = savedForm[ livestockSoldSheepAndlambsFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+livestockSoldSheepAndlambs;\nassert.strictEqual( livestockSoldSheepAndlambs, '20', ' Feild should be built');",
                            "err": {},
                            "uuid": "fd637944-a8f7-4778-99dc-4d7fdb88e52c",
                            "parentUUID": "c56c6f59-3dce-4abb-8bb8-c11eead7a0bc",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F9470 should be  allowed with amount    allow.value ==21",
                            "fullTitle": "TaxableIncome_Line252_3--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: T2042, Partnership =Yes, Shared with Spouse= Yes. Farm is shared 50%-50%, Yes to Hobby Farm.).    F9470 should be  allowed with amount    allow.value ==21",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let livestockSoldLivestockAndAnimalProductsRevenueFeild =  FarmingActivityDataId('9470');\nlet livestockSoldLivestockAndAnimalProductsRevenue = savedForm[livestockSoldLivestockAndAnimalProductsRevenueFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ livestockSoldLivestockAndAnimalProductsRevenue;\nassert.strictEqual(  livestockSoldLivestockAndAnimalProductsRevenue, '21', ' Feild should be built');",
                            "err": {},
                            "uuid": "15018d7a-99e1-4f12-9202-11f726aac28d",
                            "parentUUID": "c56c6f59-3dce-4abb-8bb8-c11eead7a0bc",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F9476 should be  allowed with amount    allow.value ==22",
                            "fullTitle": "TaxableIncome_Line252_3--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: T2042, Partnership =Yes, Shared with Spouse= Yes. Farm is shared 50%-50%, Yes to Hobby Farm.).    F9476 should be  allowed with amount    allow.value ==22",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let milkAndCreamNotIncludingDairySubsidiesFeild =  FarmingActivityDataId('9476');\nlet milkAndCreamNotIncludingDairySubsidies = savedForm[milkAndCreamNotIncludingDairySubsidiesFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ milkAndCreamNotIncludingDairySubsidies;\nassert.strictEqual(  milkAndCreamNotIncludingDairySubsidies, '22', ' Feild should be built');",
                            "err": {},
                            "uuid": "d2086269-70fe-4903-8475-14506238f5a8",
                            "parentUUID": "c56c6f59-3dce-4abb-8bb8-c11eead7a0bc",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F9477 should be  allowed with amount    allow.value ==23",
                            "fullTitle": "TaxableIncome_Line252_3--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: T2042, Partnership =Yes, Shared with Spouse= Yes. Farm is shared 50%-50%, Yes to Hobby Farm.).    F9477 should be  allowed with amount    allow.value ==23",
                            "timedOut": false,
                            "duration": 1,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let eggsForConsumptionFeild =  FarmingActivityDataId('9477');\nlet eggsForConsumption = savedForm[eggsForConsumptionFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ eggsForConsumption;\nassert.strictEqual( eggsForConsumption, '23', ' Feild should be built');",
                            "err": {},
                            "uuid": "119fd4ce-3380-4323-a886-2a6ed39e2a04",
                            "parentUUID": "c56c6f59-3dce-4abb-8bb8-c11eead7a0bc",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F9520 should be  allowed with amount    allow.value ==24",
                            "fullTitle": "TaxableIncome_Line252_3--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: T2042, Partnership =Yes, Shared with Spouse= Yes. Farm is shared 50%-50%, Yes to Hobby Farm.).    F9520 should be  allowed with amount    allow.value ==24",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let otherCommoditiesFeild =  FarmingActivityDataId('9520');\nlet otherCommodities = savedForm[otherCommoditiesFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ otherCommodities;\nassert.strictEqual( otherCommodities, '24', ' Feild should be built');",
                            "err": {},
                            "uuid": "b007d798-8832-4712-935b-01bc2515738c",
                            "parentUUID": "c56c6f59-3dce-4abb-8bb8-c11eead7a0bc",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F9541 should be  allowed with amount    allow.value ==25",
                            "fullTitle": "TaxableIncome_Line252_3--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: T2042, Partnership =Yes, Shared with Spouse= Yes. Farm is shared 50%-50%, Yes to Hobby Farm.).    F9541 should be  allowed with amount    allow.value ==25",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let programPaymentsDairySubsidiesFeild =  FarmingActivityDataId('9541');\nlet programPaymentsDairySubsidies = savedForm[programPaymentsDairySubsidiesFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ programPaymentsDairySubsidies;\nassert.strictEqual(  programPaymentsDairySubsidies, '25', ' Feild should be built');",
                            "err": {},
                            "uuid": "97c81bab-fbd5-48cc-8a2a-e6c544305889",
                            "parentUUID": "c56c6f59-3dce-4abb-8bb8-c11eead7a0bc",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F9542 should be  allowed with amount    allow.value ==26",
                            "fullTitle": "TaxableIncome_Line252_3--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: T2042, Partnership =Yes, Shared with Spouse= Yes. Farm is shared 50%-50%, Yes to Hobby Farm.).    F9542 should be  allowed with amount    allow.value ==26",
                            "timedOut": false,
                            "duration": 1,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let programPaymentsCropInsuranceFeild =  FarmingActivityDataId('9542');\nlet programPaymentsCropInsurance = savedForm[ programPaymentsCropInsuranceFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+  programPaymentsCropInsurance;\nassert.strictEqual(  programPaymentsCropInsurance, '26', ' Feild should be built');",
                            "err": {},
                            "uuid": "75dcaad7-e68e-42a2-8e51-46030dad0cca",
                            "parentUUID": "c56c6f59-3dce-4abb-8bb8-c11eead7a0bc",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F9540 should be  allowed with amount    allow.value ==31",
                            "fullTitle": "TaxableIncome_Line252_3--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: T2042, Partnership =Yes, Shared with Spouse= Yes. Farm is shared 50%-50%, Yes to Hobby Farm.).    F9540 should be  allowed with amount    allow.value ==31",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let programPaymentSOtherProgramPaymentsFeild =  FarmingActivityDataId('9540');\nlet programPaymentSOtherProgramPayments = savedForm[ programPaymentSOtherProgramPaymentsFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ programPaymentSOtherProgramPayments;\nassert.strictEqual( programPaymentSOtherProgramPayments, '31', ' Feild should be built');",
                            "err": {},
                            "uuid": "38872b78-6915-490f-a877-fd990b0faa3e",
                            "parentUUID": "c56c6f59-3dce-4abb-8bb8-c11eead7a0bc",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F9570 should be  allowed with amount    allow.value ==27",
                            "fullTitle": "TaxableIncome_Line252_3--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: T2042, Partnership =Yes, Shared with Spouse= Yes. Farm is shared 50%-50%, Yes to Hobby Farm.).    F9570 should be  allowed with amount    allow.value ==27",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let rebatesFeild =  FarmingActivityDataId('9570');\nlet rebates = savedForm[rebatesFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+  rebates;\nassert.strictEqual( rebates, '27', ' Feild should be built');",
                            "err": {},
                            "uuid": "de1d6797-43bd-4a9b-950a-f9331193b4c3",
                            "parentUUID": "c56c6f59-3dce-4abb-8bb8-c11eead7a0bc",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F9601 should be  allowed with amount    allow.value ==28",
                            "fullTitle": "TaxableIncome_Line252_3--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: T2042, Partnership =Yes, Shared with Spouse= Yes. Farm is shared 50%-50%, Yes to Hobby Farm.).    F9601 should be  allowed with amount    allow.value ==28",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let customOrContractWorkIncludesMachineRentalsFeild =  FarmingActivityDataId('9601');\nlet customOrContractWorkIncludesMachineRentals = savedForm[customOrContractWorkIncludesMachineRentalsFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ customOrContractWorkIncludesMachineRentals;\nassert.strictEqual(  customOrContractWorkIncludesMachineRentals, '28', ' Feild should be built');",
                            "err": {},
                            "uuid": "91cb9184-2c19-4da3-bfe3-2e12bf1b1963",
                            "parentUUID": "c56c6f59-3dce-4abb-8bb8-c11eead7a0bc",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F9604 should be  allowed with amount    allow.value ==29",
                            "fullTitle": "TaxableIncome_Line252_3--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: T2042, Partnership =Yes, Shared with Spouse= Yes. Farm is shared 50%-50%, Yes to Hobby Farm.).    F9604 should be  allowed with amount    allow.value ==29",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let insuranceProceedsFeild =  FarmingActivityDataId('9604');\nlet insuranceProceeds = savedForm[ insuranceProceedsFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ insuranceProceeds;\nassert.strictEqual( insuranceProceeds, '29', ' Feild should be built');",
                            "err": {},
                            "uuid": "5caba9f4-b177-419f-9125-f36bda28d7cb",
                            "parentUUID": "c56c6f59-3dce-4abb-8bb8-c11eead7a0bc",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F9605 should be  allowed with amount    allow.value ==30",
                            "fullTitle": "TaxableIncome_Line252_3--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: T2042, Partnership =Yes, Shared with Spouse= Yes. Farm is shared 50%-50%, Yes to Hobby Farm.).    F9605 should be  allowed with amount    allow.value ==30",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let patronageDividendsFeild =  FarmingActivityDataId('9605');\nlet patronageDividends = savedForm[patronageDividendsFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+  patronageDividends;\nassert.strictEqual( patronageDividends, '30', ' Feild should be built');",
                            "err": {},
                            "uuid": "90f1332c-229a-4040-a1aa-9a5db1891c4a",
                            "parentUUID": "c56c6f59-3dce-4abb-8bb8-c11eead7a0bc",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F9600 should be  allowed with amount    allow.value ==32",
                            "fullTitle": "TaxableIncome_Line252_3--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: T2042, Partnership =Yes, Shared with Spouse= Yes. Farm is shared 50%-50%, Yes to Hobby Farm.).    F9600 should be  allowed with amount    allow.value ==32",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let otherIncomeFeild =  FarmingActivityDataId('9600');\nlet otherIncome = savedForm[otherIncomeFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ otherIncome;\nassert.strictEqual( otherIncome, '32', ' Feild should be built');",
                            "err": {},
                            "uuid": "73514143-ec74-46d5-8adf-adaed4a88e4f",
                            "parentUUID": "c56c6f59-3dce-4abb-8bb8-c11eead7a0bc",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F9659 should be  allowed with amount    allow.value ==528",
                            "fullTitle": "TaxableIncome_Line252_3--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: T2042, Partnership =Yes, Shared with Spouse= Yes. Farm is shared 50%-50%, Yes to Hobby Farm.).    F9659 should be  allowed with amount    allow.value ==528",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let grossIncomeFeild =  FarmingActivityDataId('9659');\nlet grossIncome = savedForm[grossIncomeFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+  grossIncome;\nassert.strictEqual( grossIncome, '528', ' Feild should be built');",
                            "err": {},
                            "uuid": "4bf378a8-d417-4675-b24c-e381a72f301a",
                            "parentUUID": "c56c6f59-3dce-4abb-8bb8-c11eead7a0bc",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F9661 should be  allowed with amount    allow.value ==100",
                            "fullTitle": "TaxableIncome_Line252_3--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: T2042, Partnership =Yes, Shared with Spouse= Yes. Farm is shared 50%-50%, Yes to Hobby Farm.).    F9661 should be  allowed with amount    allow.value ==100",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let containersAndTwineFeild =  FarmingActivityDataId('9661');\nlet  containersAndTwine = savedForm[ containersAndTwineFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+   containersAndTwine;\nassert.strictEqual(  containersAndTwine, '100', ' Feild should be built');",
                            "err": {},
                            "uuid": "593f6463-3c01-456e-8c96-00578a861cd4",
                            "parentUUID": "c56c6f59-3dce-4abb-8bb8-c11eead7a0bc",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F9662 should be  allowed with amount    allow.value ==200",
                            "fullTitle": "TaxableIncome_Line252_3--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: T2042, Partnership =Yes, Shared with Spouse= Yes. Farm is shared 50%-50%, Yes to Hobby Farm.).    F9662 should be  allowed with amount    allow.value ==200",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let fertilizersAndlimeFeild =  FarmingActivityDataId('9662');\nlet  fertilizersAndlime = savedForm[ fertilizersAndlimeFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ fertilizersAndlime;\nassert.strictEqual(  fertilizersAndlime, '200', ' Feild should be built');",
                            "err": {},
                            "uuid": "5e02f150-16b4-4afe-9ec6-3fb7a8719741",
                            "parentUUID": "c56c6f59-3dce-4abb-8bb8-c11eead7a0bc",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F9663 should be  allowed with amount    allow.value ==300",
                            "fullTitle": "TaxableIncome_Line252_3--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: T2042, Partnership =Yes, Shared with Spouse= Yes. Farm is shared 50%-50%, Yes to Hobby Farm.).    F9663 should be  allowed with amount    allow.value ==300",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let pesticidesHerbicidesInsecticidesFungicidesFeild =  FarmingActivityDataId('9663');\nlet pesticidesHerbicidesInsecticidesFungicides = savedForm[pesticidesHerbicidesInsecticidesFungicidesFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+  pesticidesHerbicidesInsecticidesFungicides;\nassert.strictEqual( pesticidesHerbicidesInsecticidesFungicides, '300', ' Feild should be built');",
                            "err": {},
                            "uuid": "af166d77-a6d1-478e-af53-35ce4ccd8a42",
                            "parentUUID": "c56c6f59-3dce-4abb-8bb8-c11eead7a0bc",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F9664 should be  allowed with amount    allow.value ==400",
                            "fullTitle": "TaxableIncome_Line252_3--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: T2042, Partnership =Yes, Shared with Spouse= Yes. Farm is shared 50%-50%, Yes to Hobby Farm.).    F9664 should be  allowed with amount    allow.value ==400",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let seedsAndPlantsFeild =  FarmingActivityDataId('9664');\nlet seedsAndPlants = savedForm[seedsAndPlantsFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+  seedsAndPlants;\nassert.strictEqual( seedsAndPlants, '400', ' Feild should be built');",
                            "err": {},
                            "uuid": "820c24ee-c35b-4197-b0f2-1fc29f76ae9e",
                            "parentUUID": "c56c6f59-3dce-4abb-8bb8-c11eead7a0bc",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F9711 should be  allowed with amount    allow.value ==500",
                            "fullTitle": "TaxableIncome_Line252_3--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: T2042, Partnership =Yes, Shared with Spouse= Yes. Farm is shared 50%-50%, Yes to Hobby Farm.).    F9711 should be  allowed with amount    allow.value ==500",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let feedSupplementsStrawAndBeddingFeild =  FarmingActivityDataId('9711');\nlet feedSupplementsStrawAndBedding = savedForm[feedSupplementsStrawAndBeddingFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+feedSupplementsStrawAndBedding;\nassert.strictEqual(feedSupplementsStrawAndBedding, '500', ' Feild should be built');",
                            "err": {},
                            "uuid": "f02ea00c-f4ef-409d-913c-79142db2e058",
                            "parentUUID": "c56c6f59-3dce-4abb-8bb8-c11eead7a0bc",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F9712 should be  allowed with amount    allow.value ==600",
                            "fullTitle": "TaxableIncome_Line252_3--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: T2042, Partnership =Yes, Shared with Spouse= Yes. Farm is shared 50%-50%, Yes to Hobby Farm.).    F9712 should be  allowed with amount    allow.value ==600",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let livestockBoughtFeild =  FarmingActivityDataId('9712');\nlet livestockBought = savedForm[ livestockBoughtFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+  livestockBought;\nassert.strictEqual( livestockBought, '600', ' Feild should be built');",
                            "err": {},
                            "uuid": "00823b37-2755-44d8-a8c9-e6a3533a990b",
                            "parentUUID": "c56c6f59-3dce-4abb-8bb8-c11eead7a0bc",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F9713 should be  allowed with amount    allow.value ==700",
                            "fullTitle": "TaxableIncome_Line252_3--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: T2042, Partnership =Yes, Shared with Spouse= Yes. Farm is shared 50%-50%, Yes to Hobby Farm.).    F9713 should be  allowed with amount    allow.value ==700",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let veterinaryFeesMedicineAndBreedingFeesFeild =  FarmingActivityDataId('9713');\nlet veterinaryFeesMedicineAndBreedingFees = savedForm[ veterinaryFeesMedicineAndBreedingFeesFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+   veterinaryFeesMedicineAndBreedingFees;\nassert.strictEqual(  veterinaryFeesMedicineAndBreedingFees, '700', ' Feild should be built');",
                            "err": {},
                            "uuid": "d1056469-718a-4120-b5d2-68e6e14e661a",
                            "parentUUID": "c56c6f59-3dce-4abb-8bb8-c11eead7a0bc",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F9760 should be  allowed with amount    allow.value ==800",
                            "fullTitle": "TaxableIncome_Line252_3--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: T2042, Partnership =Yes, Shared with Spouse= Yes. Farm is shared 50%-50%, Yes to Hobby Farm.).    F9760 should be  allowed with amount    allow.value ==800",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let repairslicencesInsuranceFeild =  FarmingActivityDataId('9760');\nlet repairslicencesInsurance = savedForm[repairslicencesInsuranceFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+  repairslicencesInsurance;\nassert.strictEqual( repairslicencesInsurance, '800', ' Feild should be built');",
                            "err": {},
                            "uuid": "bddd4565-8dcf-4717-9c1f-1223f6566e4a",
                            "parentUUID": "c56c6f59-3dce-4abb-8bb8-c11eead7a0bc",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F9764 should be  allowed with amount    allow.value ==900",
                            "fullTitle": "TaxableIncome_Line252_3--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: T2042, Partnership =Yes, Shared with Spouse= Yes. Farm is shared 50%-50%, Yes to Hobby Farm.).    F9764 should be  allowed with amount    allow.value ==900",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let gasolineDieselFuelOilFeild =  FarmingActivityDataId('9764');\nlet gasolineDieselFuelOil = savedForm[gasolineDieselFuelOilFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ gasolineDieselFuelOil;\nassert.strictEqual(gasolineDieselFuelOil, '900', ' Feild should be built');",
                            "err": {},
                            "uuid": "f48113e5-e255-462a-bae1-6ec8aee26878",
                            "parentUUID": "c56c6f59-3dce-4abb-8bb8-c11eead7a0bc",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F9795 should be  allowed with amount    allow.value ==1000",
                            "fullTitle": "TaxableIncome_Line252_3--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: T2042, Partnership =Yes, Shared with Spouse= Yes. Farm is shared 50%-50%, Yes to Hobby Farm.).    F9795 should be  allowed with amount    allow.value ==1000",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let buildingAndFenceRepairsFeild =  FarmingActivityDataId('9795');\nlet buildingAndFenceRepairs = savedForm[buildingAndFenceRepairsFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ buildingAndFenceRepairs;\nassert.strictEqual(buildingAndFenceRepairs, '1000', ' Feild should be built');",
                            "err": {},
                            "uuid": "7c3f02b3-244b-4445-bce0-a946825b1184",
                            "parentUUID": "c56c6f59-3dce-4abb-8bb8-c11eead7a0bc",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F9796 should be  allowed with amount    allow.value ==1100",
                            "fullTitle": "TaxableIncome_Line252_3--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: T2042, Partnership =Yes, Shared with Spouse= Yes. Farm is shared 50%-50%, Yes to Hobby Farm.).    F9796 should be  allowed with amount    allow.value ==1100",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let clearinglevellingAndDraininglandFeild =  FarmingActivityDataId('9796');\nlet  clearinglevellingAndDrainingland = savedForm[  clearinglevellingAndDraininglandFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+  clearinglevellingAndDrainingland;\nassert.strictEqual(   clearinglevellingAndDrainingland, '1100', ' Feild should be built');",
                            "err": {},
                            "uuid": "018a1291-c4e9-4224-bf9c-8bfc61206c7d",
                            "parentUUID": "c56c6f59-3dce-4abb-8bb8-c11eead7a0bc",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F9797 should be  allowed with amount    allow.value ==1200",
                            "fullTitle": "TaxableIncome_Line252_3--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: T2042, Partnership =Yes, Shared with Spouse= Yes. Farm is shared 50%-50%, Yes to Hobby Farm.).    F9797 should be  allowed with amount    allow.value ==1200",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let cropInsuranceFeild =  FarmingActivityDataId('9797');\nlet  cropInsurance = savedForm[ cropInsuranceFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ cropInsurance;\nassert.strictEqual( cropInsurance, '1200', ' Feild should be built');",
                            "err": {},
                            "uuid": "c0493b76-da10-4327-8535-96432c00fd0a",
                            "parentUUID": "c56c6f59-3dce-4abb-8bb8-c11eead7a0bc",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F9798 should be  allowed with amount    allow.value ==1300",
                            "fullTitle": "TaxableIncome_Line252_3--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: T2042, Partnership =Yes, Shared with Spouse= Yes. Farm is shared 50%-50%, Yes to Hobby Farm.).    F9798 should be  allowed with amount    allow.value ==1300",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let customOrContractWorkAndMachineryRentalT2042_2Line9798PriorFeild =  FarmingActivityDataId('9798');\nlet customOrContractWorkAndMachineryRentalT2042_2Line9798Prior = savedForm[customOrContractWorkAndMachineryRentalT2042_2Line9798PriorFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ customOrContractWorkAndMachineryRentalT2042_2Line9798Prior;\nassert.strictEqual(customOrContractWorkAndMachineryRentalT2042_2Line9798Prior, '1300', ' Feild should be built');",
                            "err": {},
                            "uuid": "cdfca36f-09b1-4cd0-ae7b-335cd2e63bc2",
                            "parentUUID": "c56c6f59-3dce-4abb-8bb8-c11eead7a0bc",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F9799 should be  allowed with amount    allow.value ==1400",
                            "fullTitle": "TaxableIncome_Line252_3--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: T2042, Partnership =Yes, Shared with Spouse= Yes. Farm is shared 50%-50%, Yes to Hobby Farm.).    F9799 should be  allowed with amount    allow.value ==1400",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let electricityFeild =  FarmingActivityDataId('9799');\nlet electricity = savedForm[electricityFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ electricity;\nassert.strictEqual( electricity, '1400', ' Feild should be built');",
                            "err": {},
                            "uuid": "179d07ec-7fd3-4c0d-8f84-fbe7cbc3b78b",
                            "parentUUID": "c56c6f59-3dce-4abb-8bb8-c11eead7a0bc",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F9802 should be  allowed with amount    allow.value ==1500",
                            "fullTitle": "TaxableIncome_Line252_3--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: T2042, Partnership =Yes, Shared with Spouse= Yes. Farm is shared 50%-50%, Yes to Hobby Farm.).    F9802 should be  allowed with amount    allow.value ==1500",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let heatingFuelFeild =  FarmingActivityDataId('9802');\nlet  heatingFuel = savedForm[ heatingFuelFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+  heatingFuel;\nassert.strictEqual(  heatingFuel, '1500', ' Feild should be built');",
                            "err": {},
                            "uuid": "38f0c5bc-9533-4191-8875-b9c1b3672d6e",
                            "parentUUID": "c56c6f59-3dce-4abb-8bb8-c11eead7a0bc",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F9803 should be  allowed with amount    allow.value ==1600",
                            "fullTitle": "TaxableIncome_Line252_3--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: T2042, Partnership =Yes, Shared with Spouse= Yes. Farm is shared 50%-50%, Yes to Hobby Farm.).    F9803 should be  allowed with amount    allow.value ==1600",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let insuranceProgramOverpaymentRecaptureFeild =  FarmingActivityDataId('9803');\nlet insuranceProgramOverpaymentRecapture = savedForm[insuranceProgramOverpaymentRecaptureFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ insuranceProgramOverpaymentRecapture;\nassert.strictEqual( insuranceProgramOverpaymentRecapture, '1600', ' Feild should be built');",
                            "err": {},
                            "uuid": "eae55fdd-537f-423b-9a65-9b1eb6a044ab",
                            "parentUUID": "c56c6f59-3dce-4abb-8bb8-c11eead7a0bc",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F9804 should be  allowed with amount    allow.value ==1700",
                            "fullTitle": "TaxableIncome_Line252_3--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: T2042, Partnership =Yes, Shared with Spouse= Yes. Farm is shared 50%-50%, Yes to Hobby Farm.).    F9804 should be  allowed with amount    allow.value ==1700",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let otherInsuranceFeild =  FarmingActivityDataId('9804');\nlet otherInsurance = savedForm[otherInsuranceFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ otherInsurance;\nassert.strictEqual(otherInsurance, '1700', ' Feild should be built');",
                            "err": {},
                            "uuid": "c44facba-9b6d-4592-93be-83f88c891784",
                            "parentUUID": "c56c6f59-3dce-4abb-8bb8-c11eead7a0bc",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F9805 should be  allowed with amount    allow.value ==1800",
                            "fullTitle": "TaxableIncome_Line252_3--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: T2042, Partnership =Yes, Shared with Spouse= Yes. Farm is shared 50%-50%, Yes to Hobby Farm.).    F9805 should be  allowed with amount    allow.value ==1800",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let interestFeild =  FarmingActivityDataId('9805');\nlet interest = savedForm[interestFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ interest;\nassert.strictEqual( interest, '1800', ' Feild should be built');",
                            "err": {},
                            "uuid": "628dd9e6-0c20-4667-bcdd-acacfa945c1e",
                            "parentUUID": "c56c6f59-3dce-4abb-8bb8-c11eead7a0bc",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F9808 should be  allowed with amount    allow.value ==1900",
                            "fullTitle": "TaxableIncome_Line252_3--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: T2042, Partnership =Yes, Shared with Spouse= Yes. Farm is shared 50%-50%, Yes to Hobby Farm.).    F9808 should be  allowed with amount    allow.value ==1900",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let officeExpensesFeild =  FarmingActivityDataId('9808');\nlet officeExpenses = savedForm[officeExpensesFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ officeExpenses;\nassert.strictEqual( officeExpenses, '1900', ' Feild should be built');",
                            "err": {},
                            "uuid": "4a47f021-4beb-47b5-a5ef-3fb5ade5d291",
                            "parentUUID": "c56c6f59-3dce-4abb-8bb8-c11eead7a0bc",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F9809 should be  allowed with amount    allow.value ==2000",
                            "fullTitle": "TaxableIncome_Line252_3--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: T2042, Partnership =Yes, Shared with Spouse= Yes. Farm is shared 50%-50%, Yes to Hobby Farm.).    F9809 should be  allowed with amount    allow.value ==2000",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let legalAndAccountingFeesFeild =  FarmingActivityDataId('9809');\nlet legalAndAccountingFees = savedForm[legalAndAccountingFeesFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+legalAndAccountingFees;\nassert.strictEqual(legalAndAccountingFees, '2000', ' Feild should be built');",
                            "err": {},
                            "uuid": "76d955e6-4c8f-44dd-bf69-4079795568c2",
                            "parentUUID": "c56c6f59-3dce-4abb-8bb8-c11eead7a0bc",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F9810 should be  allowed with amount    allow.value ==2100",
                            "fullTitle": "TaxableIncome_Line252_3--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: T2042, Partnership =Yes, Shared with Spouse= Yes. Farm is shared 50%-50%, Yes to Hobby Farm.).    F9810 should be  allowed with amount    allow.value ==2100",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let propertyTaxesFeild =  FarmingActivityDataId('9810');\nlet propertyTaxes = savedForm[propertyTaxesFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ propertyTaxes;\nassert.strictEqual( propertyTaxes, '2100', ' Feild should be built');",
                            "err": {},
                            "uuid": "8ee5e4b4-3046-4aa9-87bd-27c40ca63965",
                            "parentUUID": "c56c6f59-3dce-4abb-8bb8-c11eead7a0bc",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F9811 should be  allowed with amount    allow.value ==2200",
                            "fullTitle": "TaxableIncome_Line252_3--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: T2042, Partnership =Yes, Shared with Spouse= Yes. Farm is shared 50%-50%, Yes to Hobby Farm.).    F9811 should be  allowed with amount    allow.value ==2200",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let rentLandBuildingsPastureFeild =  FarmingActivityDataId('9811');\nlet rentLandBuildingsPasture = savedForm[rentLandBuildingsPastureFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ rentLandBuildingsPasture;\nassert.strictEqual( rentLandBuildingsPasture, '2200', ' Feild should be built');",
                            "err": {},
                            "uuid": "9465b2ab-4a4e-4606-8066-d4c48265f20c",
                            "parentUUID": "c56c6f59-3dce-4abb-8bb8-c11eead7a0bc",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F9814 should be  allowed with amount    allow.value ==2300",
                            "fullTitle": "TaxableIncome_Line252_3--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: T2042, Partnership =Yes, Shared with Spouse= Yes. Farm is shared 50%-50%, Yes to Hobby Farm.).    F9814 should be  allowed with amount    allow.value ==2300",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let salariesWagesAndBenefitsIncludingEmployerContributionsFeild =  FarmingActivityDataId('9814');\nlet salariesWagesAndBenefitsIncludingEmployerContributions = savedForm[salariesWagesAndBenefitsIncludingEmployerContributionsFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ salariesWagesAndBenefitsIncludingEmployerContributions;\nassert.strictEqual( salariesWagesAndBenefitsIncludingEmployerContributions, '2300', ' Feild should be built');",
                            "err": {},
                            "uuid": "1d48028a-761d-4912-a2a2-1818944fa074",
                            "parentUUID": "c56c6f59-3dce-4abb-8bb8-c11eead7a0bc",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F9819 should be  allowed with amount    allow.value ==1000",
                            "fullTitle": "TaxableIncome_Line252_3--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: T2042, Partnership =Yes, Shared with Spouse= Yes. Farm is shared 50%-50%, Yes to Hobby Farm.).    F9819 should be  allowed with amount    allow.value ==1000",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let fuelAndOilFeild =  FarmingActivityDataId('9819');\nlet fuelAndOil = savedForm[fuelAndOilFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+fuelAndOil;\nassert.strictEqual( fuelAndOil, '1000', ' Feild should be built');",
                            "err": {},
                            "uuid": "4f455931-e714-43db-a5f9-ad7d20b7cf99",
                            "parentUUID": "c56c6f59-3dce-4abb-8bb8-c11eead7a0bc",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F9820 should be  allowed with amount   allow.value ==2400",
                            "fullTitle": "TaxableIncome_Line252_3--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: T2042, Partnership =Yes, Shared with Spouse= Yes. Farm is shared 50%-50%, Yes to Hobby Farm.).    F9820 should be  allowed with amount   allow.value ==2400",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let smallToolsFeild =  FarmingActivityDataId('9820');\nlet smallTools = savedForm[smallToolsFeild];\nthis._runnable.title = this._runnable.title + ' allow.value =='+ smallTools;\nassert.strictEqual( smallTools, '2400', ' Feild should be built');",
                            "err": {},
                            "uuid": "7bb3ed3b-9ecd-4a8a-a75b-b30e64a6319c",
                            "parentUUID": "c56c6f59-3dce-4abb-8bb8-c11eead7a0bc",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F9936 should be  allowed with amount    allow.value ==undefined",
                            "fullTitle": "TaxableIncome_Line252_3--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: T2042, Partnership =Yes, Shared with Spouse= Yes. Farm is shared 50%-50%, Yes to Hobby Farm.).    F9936 should be  allowed with amount    allow.value ==undefined",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let capitalCostAllowanceFeild = FarmingActivityDataId('9936');\nlet  capitalCostAllowance = savedForm[  capitalCostAllowanceFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+  capitalCostAllowance;\nassert.strictEqual(  capitalCostAllowance, undefined, ' Feild should be built');",
                            "err": {},
                            "uuid": "d997c19d-c44c-4245-bb9e-da23d4b4db34",
                            "parentUUID": "c56c6f59-3dce-4abb-8bb8-c11eead7a0bc",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F9937 should be  allowed with amount    allow.value ==2500",
                            "fullTitle": "TaxableIncome_Line252_3--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: T2042, Partnership =Yes, Shared with Spouse= Yes. Farm is shared 50%-50%, Yes to Hobby Farm.).    F9937 should be  allowed with amount    allow.value ==2500",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let mandatoryInventoryAdjustmentIn2018Feild =  FarmingActivityDataId('9937');\nlet mandatoryInventoryAdjustmentIn2018 = savedForm[mandatoryInventoryAdjustmentIn2018Feild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ mandatoryInventoryAdjustmentIn2018;\nassert.strictEqual( mandatoryInventoryAdjustmentIn2018, '2500', ' Feild should be built');",
                            "err": {},
                            "uuid": "ca8f6bbf-5f12-4074-9193-3c3388b4a19c",
                            "parentUUID": "c56c6f59-3dce-4abb-8bb8-c11eead7a0bc",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F9938 should be  allowed with amount    allow.value ==2600",
                            "fullTitle": "TaxableIncome_Line252_3--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: T2042, Partnership =Yes, Shared with Spouse= Yes. Farm is shared 50%-50%, Yes to Hobby Farm.).    F9938 should be  allowed with amount    allow.value ==2600",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let optionalInventoryAdjustment2018Feild =  FarmingActivityDataId('9938');\nlet  optionalInventoryAdjustment2018 = savedForm[ optionalInventoryAdjustment2018Feild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+  optionalInventoryAdjustment2018;\nassert.strictEqual(  optionalInventoryAdjustment2018, '2600', ' Feild should be built');",
                            "err": {},
                            "uuid": "ddf7aac5-8278-4946-97b6-85ad62d1f193",
                            "parentUUID": "c56c6f59-3dce-4abb-8bb8-c11eead7a0bc",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F9941 should be  allowed with amount    allow.value ==2700",
                            "fullTitle": "TaxableIncome_Line252_3--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: T2042, Partnership =Yes, Shared with Spouse= Yes. Farm is shared 50%-50%, Yes to Hobby Farm.).    F9941 should be  allowed with amount    allow.value ==2700",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let optionalInventoryAdjustmentIncludedIn2019Feild =  FarmingActivityDataId('9941');\nlet optionalInventoryAdjustmentIncludedIn2019 = savedForm[optionalInventoryAdjustmentIncludedIn2019Feild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+optionalInventoryAdjustmentIncludedIn2019;\nassert.strictEqual( optionalInventoryAdjustmentIncludedIn2019, '2700', ' Feild should be built');",
                            "err": {},
                            "uuid": "a8a87abe-bd37-488d-ae26-4c20e30266b6",
                            "parentUUID": "c56c6f59-3dce-4abb-8bb8-c11eead7a0bc",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F9942 should be  allowed with amount    allow.value ==2800",
                            "fullTitle": "TaxableIncome_Line252_3--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: T2042, Partnership =Yes, Shared with Spouse= Yes. Farm is shared 50%-50%, Yes to Hobby Farm.).    F9942 should be  allowed with amount    allow.value ==2800",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let mandatoryInventoryAdjustmentIncludedIn2019Feild =  FarmingActivityDataId('9942');\nlet mandatoryInventoryAdjustmentIncludedIn2019 = savedForm[mandatoryInventoryAdjustmentIncludedIn2019Feild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+mandatoryInventoryAdjustmentIncludedIn2019;\nassert.strictEqual( mandatoryInventoryAdjustmentIncludedIn2019, '2800', ' Feild should be built');",
                            "err": {},
                            "uuid": "13b49c6d-b118-49e2-aefd-6754c13475c6",
                            "parentUUID": "c56c6f59-3dce-4abb-8bb8-c11eead7a0bc",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F9974 should be  allowed with amount    allow.value ==2900",
                            "fullTitle": "TaxableIncome_Line252_3--The amount of prior year restricted farm losses at field 54960 cannot exceed field 14100. As field 54960 is the amount of prior year restricted farm losses carried forward to reduce the current year farm gain, it can only be entered when there is a positive amount at field 14100.   //(Linked, TP=50 years, SP= 50 Years: T2042, Partnership =Yes, Shared with Spouse= Yes. Farm is shared 50%-50%, Yes to Hobby Farm.).    F9974 should be  allowed with amount    allow.value ==2900",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let gSTHSTRebateForPartnersIfApplicableAndIfReceivedIn2019Feild =  FarmingActivityDataId('9974');\nlet gSTHSTRebateForPartnersIfApplicableAndIfReceivedIn2019 = savedForm[gSTHSTRebateForPartnersIfApplicableAndIfReceivedIn2019Feild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+gSTHSTRebateForPartnersIfApplicableAndIfReceivedIn2019;\nassert.strictEqual( gSTHSTRebateForPartnersIfApplicableAndIfReceivedIn2019, '2900', ' Feild should be built');",
                            "err": {},
                            "uuid": "b8083ee5-2435-44a9-9a3d-5eb574a01e57",
                            "parentUUID": "c56c6f59-3dce-4abb-8bb8-c11eead7a0bc",
                            "isHook": false,
                            "skipped": false
                        }
                    ],
                    "suites": [],
                    "passes": [
                        "3c53394b-7310-4266-8a6d-a3580b9d8d9f",
                        "afcb343e-85e7-4a73-97df-d6abdf45dd79",
                        "f68ac86b-1180-48b2-b90d-0706e48d37fe",
                        "6f775496-2210-455f-96c7-a3339b9575e3",
                        "e72151fb-b16b-4845-8576-42d76d05ce63",
                        "2d4858ce-9360-42dd-8287-72dfa8d9b849",
                        "1f407476-c503-4ec3-a56e-ea662e8b667c",
                        "9387dcf4-6cba-4e29-8ce3-777a693d1e10",
                        "4d506956-de08-4680-8c3d-8ab4c2ac6f9a",
                        "8d8af7ba-0d6d-4e24-8aba-61710c2de03a",
                        "2379616c-4ba4-4376-8f57-20560cb63243",
                        "50ccf446-6831-4ee5-a5a2-f74562d74b81",
                        "1bf31c3b-210b-44c2-ab1b-5ad7500e841e",
                        "9a0e6266-3274-4c73-b276-35e0f2a201c8",
                        "b446ce67-e770-4b1e-b9ec-13a8ecfd9424",
                        "a7cc382c-3b79-4f68-920a-9735dd82fc63",
                        "fcd3fb76-6d87-4dd9-8106-1bf9cd3a18af",
                        "29a58268-8aa6-4e4a-90b3-717a1ee9ea62",
                        "d31a0e3e-24bd-434c-8861-5ef18011a81c",
                        "c8cccc11-8f07-4157-a233-8e3133fac9b9",
                        "fd637944-a8f7-4778-99dc-4d7fdb88e52c",
                        "15018d7a-99e1-4f12-9202-11f726aac28d",
                        "d2086269-70fe-4903-8475-14506238f5a8",
                        "119fd4ce-3380-4323-a886-2a6ed39e2a04",
                        "b007d798-8832-4712-935b-01bc2515738c",
                        "97c81bab-fbd5-48cc-8a2a-e6c544305889",
                        "75dcaad7-e68e-42a2-8e51-46030dad0cca",
                        "38872b78-6915-490f-a877-fd990b0faa3e",
                        "de1d6797-43bd-4a9b-950a-f9331193b4c3",
                        "91cb9184-2c19-4da3-bfe3-2e12bf1b1963",
                        "5caba9f4-b177-419f-9125-f36bda28d7cb",
                        "90f1332c-229a-4040-a1aa-9a5db1891c4a",
                        "73514143-ec74-46d5-8adf-adaed4a88e4f",
                        "4bf378a8-d417-4675-b24c-e381a72f301a",
                        "593f6463-3c01-456e-8c96-00578a861cd4",
                        "5e02f150-16b4-4afe-9ec6-3fb7a8719741",
                        "af166d77-a6d1-478e-af53-35ce4ccd8a42",
                        "820c24ee-c35b-4197-b0f2-1fc29f76ae9e",
                        "f02ea00c-f4ef-409d-913c-79142db2e058",
                        "00823b37-2755-44d8-a8c9-e6a3533a990b",
                        "d1056469-718a-4120-b5d2-68e6e14e661a",
                        "bddd4565-8dcf-4717-9c1f-1223f6566e4a",
                        "f48113e5-e255-462a-bae1-6ec8aee26878",
                        "7c3f02b3-244b-4445-bce0-a946825b1184",
                        "018a1291-c4e9-4224-bf9c-8bfc61206c7d",
                        "c0493b76-da10-4327-8535-96432c00fd0a",
                        "cdfca36f-09b1-4cd0-ae7b-335cd2e63bc2",
                        "179d07ec-7fd3-4c0d-8f84-fbe7cbc3b78b",
                        "38f0c5bc-9533-4191-8875-b9c1b3672d6e",
                        "eae55fdd-537f-423b-9a65-9b1eb6a044ab",
                        "c44facba-9b6d-4592-93be-83f88c891784",
                        "628dd9e6-0c20-4667-bcdd-acacfa945c1e",
                        "4a47f021-4beb-47b5-a5ef-3fb5ade5d291",
                        "76d955e6-4c8f-44dd-bf69-4079795568c2",
                        "8ee5e4b4-3046-4aa9-87bd-27c40ca63965",
                        "9465b2ab-4a4e-4606-8066-d4c48265f20c",
                        "1d48028a-761d-4912-a2a2-1818944fa074",
                        "4f455931-e714-43db-a5f9-ad7d20b7cf99",
                        "7bb3ed3b-9ecd-4a8a-a75b-b30e64a6319c",
                        "d997c19d-c44c-4245-bb9e-da23d4b4db34",
                        "ca8f6bbf-5f12-4074-9193-3c3388b4a19c",
                        "ddf7aac5-8278-4946-97b6-85ad62d1f193",
                        "a8a87abe-bd37-488d-ae26-4c20e30266b6",
                        "13b49c6d-b118-49e2-aefd-6754c13475c6",
                        "b8083ee5-2435-44a9-9a3d-5eb574a01e57"
                    ],
                    "failures": [],
                    "pending": [],
                    "skipped": [],
                    "duration": 4,
                    "root": false,
                    "rootEmpty": false,
                    "_timeout": 200000
                },
                {
                    "uuid": "b48f1d34-ad17-4630-a972-2ebcd1cf23e9",
                    "title": "TaxableIncome_Line252_4.1(SP)--Input F54960 (restricted farm loss from prior year) to exceed amount at F14100 (net farming income). Software must not allow...  //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14 =$ 65,000, SP, T4 Box 14= $50,000, T2042, Income $ 35,000, Partnership =Yes, Shared with spouse 50%-50%. Restricted farm loss from last year = $40,000 each)  ",
                    "fullFile": "E:\\Rita\\Taxtron\\WebTest\\my_work\\test_for_report_2020\\NETINC_2020\\tcTaxableIncome_Line252_4.1.js",
                    "file": "\\my_work\\test_for_report_2020\\NETINC_2020\\tcTaxableIncome_Line252_4.1.js",
                    "beforeHooks": [
                        {
                            "title": "\"before all\" hook",
                            "fullTitle": "TaxableIncome_Line252_4.1(SP)--Input F54960 (restricted farm loss from prior year) to exceed amount at F14100 (net farming income). Software must not allow...  //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14 =$ 65,000, SP, T4 Box 14= $50,000, T2042, Income $ 35,000, Partnership =Yes, Shared with spouse 50%-50%. Restricted farm loss from last year = $40,000 each)   \"before all\" hook",
                            "timedOut": false,
                            "duration": 110047,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "driver = new Builder()\n    .withCapabilities(Capabilities.chrome().setAcceptInsecureCerts(true))\n    .build();\ndriver.manage().window().setRect({ width: 1366, height: 768 });\nawait login(driver, 'ritakumar@outlook.com', 'rishu12rashi');\nawait selectNewReturn(driver,province);\nawait switchToastOff(driver);\n    \nawait nextClick(driver);\nawait setInputById(driver, 'Firstnames0', 'king');\nawait setInputById(driver, 'Surname0', 'smith');\nawait selectDateById(driver, 'DOB0', '1968/10/10');\nawait setInputById(driver, 'SIN0', '100000009');\nawait selectComboById(driver, 'MaritalStatus0', 'Common-law');\nawait selectToggleById(driver, 'domchanged0', '0');\nawait selectToggleById(driver, 'IsLinkedReturn0', '1');\nawait nextClick(driver);\nawait addressExpandClick(driver, 'fullAdd');\nawait setInputById(driver, 'StreetNo0', '25');\nawait setInputById(driver, 'StreetName0', 'JANE ST');\nawait setInputById(driver, 'City0', 'ETOBICOKE');\nawait selectComboById(driver, 'ProvinceOfRes0', 'Manitoba');\nawait setInputById(driver, 'PCodeC0', 'R0H 1N1');\nawait selectToggleById(driver, 'quesFP0', '0');\nawait selectToggleById(driver, 'quesPrinResi0', '0');\nawait selectToggleById(driver, 'qCitizen0', '0');\nawait nextClick(driver);\nawait nextClick(driver);\nawait setInputById(driver, 'Firstnames0sp', 'jone');\nawait setInputById(driver, 'Surname0sp', 'smith');\nawait selectDateById(driver, 'DOB0sp', '1968/10/10');\nawait setInputById(driver, 'SIN0sp', '100000025');\nawait selectComboById(driver, 'Province0sp', 'British Columbia');\nawait nextClick(driver);\nawait selectTab(driver, 'Income');\nawait selectTab(driver, 'IncomeProfile');\nawait selectToggleById(driver, 'WorkedInYOR0tp', '1');\nawait clickDivById(driver, 'T40tp');\n\t\t    await selectToggleById(driver, 'SelfEmployed0tp', '1');\nawait nextClick(driver);\nawait selectToggleById(driver, 'WorkedInYOR0sp', '1');\nawait clickDivById(driver, 'T40sp');\nawait nextClick(driver);\nawait setInputById(driver, 'T4B140', '65000');\nawait selectComboById(driver, 'T4_Box100tp', 'ON');\nawait nextClick(driver);\nawait setInputById(driver, 'T4B140sp', '50000');\nawait selectComboById(driver, 'T4_Box100sp', 'ON');\nawait nextClick(driver);\nawait selectToggleById(driver, 'FIncome0tp', '1');\nawait nextClick(driver);\nawait setInputById(driver, 'FarmName0tp', 'CDR');\nawait setInputById(driver, 'FarmRAN0tp', '100000025');\nawait selectSFDDateById(driver, 'T2042_SFDStart0tp', Fed.TaxYear,'0','/01/25');\nawait selectSFDDateById(driver, 'T2042_SFDEnd0tp', Fed.TaxYear,'0','/12/31');\nawait selectComboById(driver, 'FarmSIC0tp', 'Hay Farming ');\nawait selectToggleById(driver, 'T2042AccountingMethod0tp', '1');\nawait selectToggleById(driver, 'RFLCheck0tp', '1');\nawait selectToggleById(driver, 'partnership0tp', '1');\nawait selectToggleById(driver, 'iSpartnershipWithSp0tp', '1');\nawait setInputById(driver, 'FarmPSpShare0tp', '50');\nawait setInputById(driver, 'FarmPTPShare0tp', '50');\nawait nextClick(driver);\nawait setInputById(driver, 'IWheat0tp', '35000');\nawait nextClick(driver);\nawait selectTab(driver, 'Deduction');\nawait selectTab(driver, 'S3Losses');\nawait selectToggleById(driver, 'S3Profile_10tp', '1');\nawait selectToggleById(driver, 'restricted0tp', '1');\nawait nextClick(driver);\nawait selectComboById(driver, 'RCFClossesCombo0tp', '2018 ');\nawait setInputById(driver, 'RCFClossesval0tp', '40000');\nawait nextClick(driver);\nawait nextClick(driver);\nawait selectToggleById(driver, 'S3Profile_10sp', '1');\nawait selectToggleById(driver, 'restricted0sp', '1');\nawait nextClick(driver);\nawait selectComboById(driver, 'RCFClossesCombo0sp', '2018 ');\nawait setInputById(driver, 'RCFClossesval0sp', '40000');\nawait nextClick(driver);\nawait nextClick(driver);\nsavedForm = await getServerFileSp(driver,'sp');",
                            "err": {},
                            "uuid": "f0d0f1cf-eb5d-467b-9b11-34684fc67e81",
                            "parentUUID": "b48f1d34-ad17-4630-a972-2ebcd1cf23e9",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "afterHooks": [
                        {
                            "title": "\"after all\" hook",
                            "fullTitle": "TaxableIncome_Line252_4.1(SP)--Input F54960 (restricted farm loss from prior year) to exceed amount at F14100 (net farming income). Software must not allow...  //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14 =$ 65,000, SP, T4 Box 14= $50,000, T2042, Income $ 35,000, Partnership =Yes, Shared with spouse 50%-50%. Restricted farm loss from last year = $40,000 each)   \"after all\" hook",
                            "timedOut": false,
                            "duration": 5455,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "await logoutById(driver);\nawait driver.quit();",
                            "err": {},
                            "uuid": "f77c905e-ae1f-4d38-8eb6-f53a138a99d7",
                            "parentUUID": "b48f1d34-ad17-4630-a972-2ebcd1cf23e9",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "tests": [
                        {
                            "title": " F10100 should be  allowed with amount    allow.value ==50000",
                            "fullTitle": "TaxableIncome_Line252_4.1(SP)--Input F54960 (restricted farm loss from prior year) to exceed amount at F14100 (net farming income). Software must not allow...  //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14 =$ 65,000, SP, T4 Box 14= $50,000, T2042, Income $ 35,000, Partnership =Yes, Shared with spouse 50%-50%. Restricted farm loss from last year = $40,000 each)    F10100 should be  allowed with amount    allow.value ==50000",
                            "timedOut": false,
                            "duration": 1,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let employmentIncomeFromT4SlipsFeild = getFieldId('10100');\nlet employmentIncomeFromT4Slips = savedForm[  employmentIncomeFromT4SlipsFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ employmentIncomeFromT4Slips;\nassert.strictEqual(   employmentIncomeFromT4Slips, '50000', ' Feild should be built');",
                            "err": {},
                            "uuid": "c42d064e-8534-4bf9-bdf4-86449f2336ce",
                            "parentUUID": "b48f1d34-ad17-4630-a972-2ebcd1cf23e9",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F14100 should be  allowed with amount    allow.value ==17500",
                            "fullTitle": "TaxableIncome_Line252_4.1(SP)--Input F54960 (restricted farm loss from prior year) to exceed amount at F14100 (net farming income). Software must not allow...  //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14 =$ 65,000, SP, T4 Box 14= $50,000, T2042, Income $ 35,000, Partnership =Yes, Shared with spouse 50%-50%. Restricted farm loss from last year = $40,000 each)    F14100 should be  allowed with amount    allow.value ==17500",
                            "timedOut": false,
                            "duration": 1,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let netFarmingIncomelossFeild = getFieldId('14100');\nlet netFarmingIncomeloss = savedForm[ netFarmingIncomelossFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ netFarmingIncomeloss;\nassert.strictEqual( netFarmingIncomeloss, '17500', ' Feild should be built');",
                            "err": {},
                            "uuid": "416ea582-16fe-4a57-b695-8acd95a821c1",
                            "parentUUID": "b48f1d34-ad17-4630-a972-2ebcd1cf23e9",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F25200 should be  allowed with amount    allow.value ==undefined",
                            "fullTitle": "TaxableIncome_Line252_4.1(SP)--Input F54960 (restricted farm loss from prior year) to exceed amount at F14100 (net farming income). Software must not allow...  //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14 =$ 65,000, SP, T4 Box 14= $50,000, T2042, Income $ 35,000, Partnership =Yes, Shared with spouse 50%-50%. Restricted farm loss from last year = $40,000 each)    F25200 should be  allowed with amount    allow.value ==undefined",
                            "timedOut": false,
                            "duration": 0,
                            "state": "failed",
                            "speed": null,
                            "pass": false,
                            "fail": true,
                            "pending": false,
                            "context": null,
                            "code": "let  nonCapitallossesOfOtherYearsFeild = getFieldId('25200');\nlet    nonCapitallossesOfOtherYears = savedForm[   nonCapitallossesOfOtherYearsFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+    nonCapitallossesOfOtherYears;\nassert.strictEqual(  nonCapitallossesOfOtherYears, '17500', ' Feild should be built');",
                            "err": {
                                "message": "AssertionError:  Feild should be built",
                                "estack": "AssertionError [ERR_ASSERTION]:  Feild should be built\n    at Context.<anonymous> (my_work\\test_for_report_2020\\NETINC_2020\\tcTaxableIncome_Line252_4.1.js:117:20)\n    at processImmediate (internal/timers.js:456:21)",
                                "diff": null
                            },
                            "uuid": "c57ff41a-bafd-4544-9c8e-e76dd3ff1bdb",
                            "parentUUID": "b48f1d34-ad17-4630-a972-2ebcd1cf23e9",
                            "isHook": false,
                            "skipped": false
                        }
                    ],
                    "suites": [],
                    "passes": [
                        "c42d064e-8534-4bf9-bdf4-86449f2336ce",
                        "416ea582-16fe-4a57-b695-8acd95a821c1"
                    ],
                    "failures": [
                        "c57ff41a-bafd-4544-9c8e-e76dd3ff1bdb"
                    ],
                    "pending": [],
                    "skipped": [],
                    "duration": 2,
                    "root": false,
                    "rootEmpty": false,
                    "_timeout": 150000
                },
                {
                    "uuid": "eaa05cfc-edc2-4aef-83e3-90302e61955f",
                    "title": "TaxableIncome_Line252_4--Input F54960 (restricted farm loss from prior year) to exceed amount at F14100 (net farming income). Software must not allow...  //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14 =$ 65,000, SP, T4 Box 14= $50,000, T2042, Income $ 35,000, Partnership =Yes, Shared with spouse 50%-50%. Restricted farm loss from last year = $40,000 each)  ",
                    "fullFile": "E:\\Rita\\Taxtron\\WebTest\\my_work\\test_for_report_2020\\NETINC_2020\\tcTaxableIncome_Line252_4.js",
                    "file": "\\my_work\\test_for_report_2020\\NETINC_2020\\tcTaxableIncome_Line252_4.js",
                    "beforeHooks": [
                        {
                            "title": "\"before all\" hook",
                            "fullTitle": "TaxableIncome_Line252_4--Input F54960 (restricted farm loss from prior year) to exceed amount at F14100 (net farming income). Software must not allow...  //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14 =$ 65,000, SP, T4 Box 14= $50,000, T2042, Income $ 35,000, Partnership =Yes, Shared with spouse 50%-50%. Restricted farm loss from last year = $40,000 each)   \"before all\" hook",
                            "timedOut": false,
                            "duration": 131480,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "driver = new Builder()\n    .withCapabilities(Capabilities.chrome().setAcceptInsecureCerts(true))\n    .build();\ndriver.manage().window().setRect({ width: 1366, height: 768 });\nawait login(driver, 'ritakumar@outlook.com', 'rishu12rashi');\nawait selectNewReturn(driver,province);\nawait switchToastOff(driver);\n    \nawait nextClick(driver);\nawait setInputById(driver, 'Firstnames0', 'king');\nawait setInputById(driver, 'Surname0', 'smith');\nawait selectDateById(driver, 'DOB0', '1968/10/10');\nawait setInputById(driver, 'SIN0', '100000009');\nawait selectComboById(driver, 'MaritalStatus0', 'Common-law');\nawait selectToggleById(driver, 'domchanged0', '0');\nawait selectToggleById(driver, 'IsLinkedReturn0', '1');\nawait nextClick(driver);\nawait addressExpandClick(driver, 'fullAdd');\nawait setInputById(driver, 'StreetNo0', '25');\nawait setInputById(driver, 'StreetName0', 'JANE ST');\nawait setInputById(driver, 'City0', 'ETOBICOKE');\nawait selectComboById(driver, 'ProvinceOfRes0', 'Manitoba');\nawait setInputById(driver, 'PCodeC0', 'R0H 1N1');\nawait selectToggleById(driver, 'quesFP0', '0');\nawait selectToggleById(driver, 'quesPrinResi0', '0');\nawait selectToggleById(driver, 'qCitizen0', '0');\nawait nextClick(driver);\nawait nextClick(driver);\nawait setInputById(driver, 'Firstnames0sp', 'jone');\nawait setInputById(driver, 'Surname0sp', 'smith');\nawait selectDateById(driver, 'DOB0sp', '1968/10/10');\nawait setInputById(driver, 'SIN0sp', '100000025');\nawait selectComboById(driver, 'Province0sp', 'British Columbia');\nawait nextClick(driver);\nawait selectTab(driver, 'Income');\nawait selectTab(driver, 'IncomeProfile');\nawait selectToggleById(driver, 'WorkedInYOR0tp', '1');\nawait clickDivById(driver, 'T40tp');\n\t\t    await selectToggleById(driver, 'SelfEmployed0tp', '1');\nawait nextClick(driver);\nawait selectToggleById(driver, 'WorkedInYOR0sp', '1');\nawait clickDivById(driver, 'T40sp');\nawait nextClick(driver);\nawait setInputById(driver, 'T4B140', '65000');\nawait selectComboById(driver, 'T4_Box100tp', 'ON');\nawait nextClick(driver);\nawait setInputById(driver, 'T4B140sp', '50000');\nawait selectComboById(driver, 'T4_Box100sp', 'ON');\nawait nextClick(driver);\nawait selectToggleById(driver, 'FIncome0tp', '1');\nawait nextClick(driver);\nawait setInputById(driver, 'FarmName0tp', 'CDR');\nawait setInputById(driver, 'FarmRAN0tp', '100000025');\nawait selectSFDDateById(driver, 'T2042_SFDStart0tp', Fed.TaxYear,'0','/01/25');\nawait selectSFDDateById(driver, 'T2042_SFDEnd0tp', Fed.TaxYear,'0','/12/31');\nawait selectComboById(driver, 'FarmSIC0tp', 'Hay Farming ');\nawait selectToggleById(driver, 'T2042AccountingMethod0tp', '1');\nawait selectToggleById(driver, 'RFLCheck0tp', '1');\nawait selectToggleById(driver, 'partnership0tp', '1');\nawait selectToggleById(driver, 'iSpartnershipWithSp0tp', '1');\nawait setInputById(driver, 'FarmPSpShare0tp', '50');\nawait setInputById(driver, 'FarmPTPShare0tp', '50');\nawait nextClick(driver);\nawait setInputById(driver, 'IWheat0tp', '35000');\nawait nextClick(driver);\nawait selectTab(driver, 'Deduction');\nawait selectTab(driver, 'S3Losses');\nawait selectToggleById(driver, 'S3Profile_10tp', '1');\nawait selectToggleById(driver, 'restricted0tp', '1');\nawait nextClick(driver);\nawait selectComboById(driver, 'RCFClossesCombo0tp', '2018 ');\nawait setInputById(driver, 'RCFClossesval0tp', '40000');\nawait nextClick(driver);\nawait nextClick(driver);\nawait selectToggleById(driver, 'S3Profile_10sp', '1');\nawait selectToggleById(driver, 'restricted0sp', '1');\nawait nextClick(driver);\nawait selectComboById(driver, 'RCFClossesCombo0sp', '2018 ');\nawait setInputById(driver, 'RCFClossesval0sp', '40000');\nawait nextClick(driver);\nsavedForm = await getServerFile(driver);",
                            "err": {},
                            "uuid": "9960c306-8b57-4e91-a4a4-a0b88236f284",
                            "parentUUID": "eaa05cfc-edc2-4aef-83e3-90302e61955f",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "afterHooks": [
                        {
                            "title": "\"after all\" hook",
                            "fullTitle": "TaxableIncome_Line252_4--Input F54960 (restricted farm loss from prior year) to exceed amount at F14100 (net farming income). Software must not allow...  //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14 =$ 65,000, SP, T4 Box 14= $50,000, T2042, Income $ 35,000, Partnership =Yes, Shared with spouse 50%-50%. Restricted farm loss from last year = $40,000 each)   \"after all\" hook",
                            "timedOut": false,
                            "duration": 5599,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "await logoutById(driver);\nawait driver.quit();",
                            "err": {},
                            "uuid": "b4e61bac-eb89-412b-b903-ade92ace7ab2",
                            "parentUUID": "eaa05cfc-edc2-4aef-83e3-90302e61955f",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "tests": [
                        {
                            "title": " F10100 should be  allowed with amount    allow.value ==65000",
                            "fullTitle": "TaxableIncome_Line252_4--Input F54960 (restricted farm loss from prior year) to exceed amount at F14100 (net farming income). Software must not allow...  //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14 =$ 65,000, SP, T4 Box 14= $50,000, T2042, Income $ 35,000, Partnership =Yes, Shared with spouse 50%-50%. Restricted farm loss from last year = $40,000 each)    F10100 should be  allowed with amount    allow.value ==65000",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let employmentIncomeFromT4SlipsFeild = getFieldId('10100');\nlet employmentIncomeFromT4Slips = savedForm[  employmentIncomeFromT4SlipsFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ employmentIncomeFromT4Slips;\nassert.strictEqual(   employmentIncomeFromT4Slips, '65000', ' Feild should be built');",
                            "err": {},
                            "uuid": "6b4df15a-a261-4a81-80fa-209444db30e9",
                            "parentUUID": "eaa05cfc-edc2-4aef-83e3-90302e61955f",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F14100 should be  allowed with amount    allow.value ==17500",
                            "fullTitle": "TaxableIncome_Line252_4--Input F54960 (restricted farm loss from prior year) to exceed amount at F14100 (net farming income). Software must not allow...  //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14 =$ 65,000, SP, T4 Box 14= $50,000, T2042, Income $ 35,000, Partnership =Yes, Shared with spouse 50%-50%. Restricted farm loss from last year = $40,000 each)    F14100 should be  allowed with amount    allow.value ==17500",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let netFarmingIncomelossFeild = getFieldId('14100');\nlet netFarmingIncomeloss = savedForm[ netFarmingIncomelossFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ netFarmingIncomeloss;\nassert.strictEqual( netFarmingIncomeloss, '17500', ' Feild should be built');",
                            "err": {},
                            "uuid": "a7ed3ee0-382b-4693-b352-a8c7c0089cb1",
                            "parentUUID": "eaa05cfc-edc2-4aef-83e3-90302e61955f",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F25200 should be  allowed with amount    allow.value ==undefined",
                            "fullTitle": "TaxableIncome_Line252_4--Input F54960 (restricted farm loss from prior year) to exceed amount at F14100 (net farming income). Software must not allow...  //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14 =$ 65,000, SP, T4 Box 14= $50,000, T2042, Income $ 35,000, Partnership =Yes, Shared with spouse 50%-50%. Restricted farm loss from last year = $40,000 each)    F25200 should be  allowed with amount    allow.value ==undefined",
                            "timedOut": false,
                            "duration": 1,
                            "state": "failed",
                            "speed": null,
                            "pass": false,
                            "fail": true,
                            "pending": false,
                            "context": null,
                            "code": "let  nonCapitallossesOfOtherYearsFeild = getFieldId('25200');\nlet    nonCapitallossesOfOtherYears = savedForm[   nonCapitallossesOfOtherYearsFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+    nonCapitallossesOfOtherYears;\nassert.strictEqual(  nonCapitallossesOfOtherYears, '17500', ' Feild should be built');",
                            "err": {
                                "message": "AssertionError:  Feild should be built",
                                "estack": "AssertionError [ERR_ASSERTION]:  Feild should be built\n    at Context.<anonymous> (my_work\\test_for_report_2020\\NETINC_2020\\tcTaxableIncome_Line252_4.js:116:20)\n    at processImmediate (internal/timers.js:456:21)",
                                "diff": null
                            },
                            "uuid": "805d005f-27ca-4178-82e4-62671b7e4af5",
                            "parentUUID": "eaa05cfc-edc2-4aef-83e3-90302e61955f",
                            "isHook": false,
                            "skipped": false
                        }
                    ],
                    "suites": [],
                    "passes": [
                        "6b4df15a-a261-4a81-80fa-209444db30e9",
                        "a7ed3ee0-382b-4693-b352-a8c7c0089cb1"
                    ],
                    "failures": [
                        "805d005f-27ca-4178-82e4-62671b7e4af5"
                    ],
                    "pending": [],
                    "skipped": [],
                    "duration": 1,
                    "root": false,
                    "rootEmpty": false,
                    "_timeout": 150000
                },
                {
                    "uuid": "ca186abf-8389-480c-81c3-0a1a12225455",
                    "title": "TaxableIncome_Line252_5.1(SP)--Input F54960 (restricted farm loss from prior year) to exceed amount at F14100 (net farming income). Software must not allow...  //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14 =$ 65,000, SP, T4 Box 14= $50,000, T2125. Is this a partnerships vehicle =Yes. Shared with spouse 50%-50%. Motor vehicle: Partnership =Yes. Bus KM =100, Total KM =100. Gas Expenses =$ 10,000, CCA Class =Class 10, Opening UCC =$ 10,000. o you have assets on which capital cost allowance (depreciation) can be claimed  =Yes. Class No =6. UCC at start of the year =$ 100,000)  ",
                    "fullFile": "E:\\Rita\\Taxtron\\WebTest\\my_work\\test_for_report_2020\\NETINC_2020\\tcTaxableIncome_Line252_5.1.js",
                    "file": "\\my_work\\test_for_report_2020\\NETINC_2020\\tcTaxableIncome_Line252_5.1.js",
                    "beforeHooks": [
                        {
                            "title": "\"before all\" hook",
                            "fullTitle": "TaxableIncome_Line252_5.1(SP)--Input F54960 (restricted farm loss from prior year) to exceed amount at F14100 (net farming income). Software must not allow...  //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14 =$ 65,000, SP, T4 Box 14= $50,000, T2125. Is this a partnerships vehicle =Yes. Shared with spouse 50%-50%. Motor vehicle: Partnership =Yes. Bus KM =100, Total KM =100. Gas Expenses =$ 10,000, CCA Class =Class 10, Opening UCC =$ 10,000. o you have assets on which capital cost allowance (depreciation) can be claimed  =Yes. Class No =6. UCC at start of the year =$ 100,000)   \"before all\" hook",
                            "timedOut": false,
                            "duration": 180255,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "driver = new Builder()\n    .withCapabilities(Capabilities.chrome().setAcceptInsecureCerts(true))\n    .build();\ndriver.manage().window().setRect({ width: 1366, height: 768 });\nawait login(driver, 'ritakumar@outlook.com', 'rishu12rashi');\nawait selectNewReturn(driver,province);\nawait switchToastOff(driver);\n    \nawait nextClick(driver);\nawait setInputById(driver, 'Firstnames0', 'king');\nawait setInputById(driver, 'Surname0', 'smith');\nawait selectDateById(driver, 'DOB0', '1968/10/10');\nawait setInputById(driver, 'SIN0', '100000009');\nawait selectComboById(driver, 'MaritalStatus0', 'Common-law');\nawait selectToggleById(driver, 'domchanged0', '0');\nawait selectToggleById(driver, 'IsLinkedReturn0', '1');\nawait nextClick(driver);\nawait addressExpandClick(driver, 'fullAdd');\nawait setInputById(driver, 'StreetNo0', '25');\nawait setInputById(driver, 'StreetName0', 'JANE ST');\nawait setInputById(driver, 'City0', 'ETOBICOKE');\nawait selectComboById(driver, 'ProvinceOfRes0', 'Manitoba');\nawait setInputById(driver, 'PCodeC0', 'R0H 1N1');\nawait selectToggleById(driver, 'quesFP0', '0');\nawait selectToggleById(driver, 'quesPrinResi0', '0');\nawait selectToggleById(driver, 'qCitizen0', '0');\nawait nextClick(driver);\nawait nextClick(driver);\nawait setInputById(driver, 'Firstnames0sp', 'jone');\nawait setInputById(driver, 'Surname0sp', 'smith');\nawait selectDateById(driver, 'DOB0sp', '1968/10/10');\nawait setInputById(driver, 'SIN0sp', '100000025');\nawait selectComboById(driver, 'Province0sp', 'British Columbia');\nawait nextClick(driver);\nawait selectTab(driver, 'Income');\nawait selectTab(driver, 'IncomeProfile');\nawait selectToggleById(driver, 'WorkedInYOR0tp', '1');\nawait clickDivById(driver, 'T40tp');\n\t\t    await selectToggleById(driver, 'SelfEmployed0tp', '1');\nawait nextClick(driver);\nawait selectToggleById(driver, 'WorkedInYOR0sp', '1');\nawait clickDivById(driver, 'T40sp');\nawait nextClick(driver);\nawait setInputById(driver, 'T4B140', '65000');\nawait selectComboById(driver, 'T4_Box100tp', 'ON');\nawait nextClick(driver);\nawait setInputById(driver, 'T4B140sp', '50000');\nawait selectComboById(driver, 'T4_Box100sp', 'ON');\nawait nextClick(driver);\nawait selectToggleById(driver, 'BPCIncome0tp', '1'); \nawait nextClick(driver);\nawait setInputById(driver, 'BusName0', 'ABC');\nawait setInputById(driver, 'BusRAN0', '100000009');\nawait selectComboById(driver, 'BusinessIncome0', 'Business');\nawait selectSFDDateById(driver, 'T2124_SFDStart0', Fed.TaxYear,'0','/01/25');\nawait selectSFDDateById(driver, 'T2124_SFDEnd0',  Fed.TaxYear,'0','/12/31');\nawait selectComboById(driver, 'BusSIC0', 'Dry pea and bean farming');\nawait setInputById(driver, 'BusCommodity0tp', 'Consultancy');\nawait selectToggleById(driver, 'Partnership0tp', '1');\nawait selectToggleById(driver, 'iSpartnershipWithSp0tp', '1');\nawait setInputById(driver, 'BusPSpShare0tp', '50');\nawait setInputById(driver, 'BusPartner0tp', '100000025');\nawait setInputById(driver, 'BusPTPShare0tp', '50');\nawait nextClick(driver);\nawait nextClick(driver);\nawait setInputById(driver, 'T2124_610', '1');\nawait setInputById(driver, 'BusGSTIncluded0tp', '2');\nawait setInputById(driver, 'BusReturns0tp', '2');\nawait setInputById(driver, 'T2125_QuickCollected0tp', '4');\nawait setInputById(driver, 'T2125_QuickRemitrate0tp', '5');\nawait setInputById(driver, 'BusReserves0tp', '6');\nawait setInputById(driver, 'BusOtherDE0tp', '7');\nawait setInputById(driver, 'Bus82000tp', '1');\nawait setInputById(driver, 'Bus82010tp', '2');\nawait setInputById(driver, 'Bus82450tp', '3');\nawait setInputById(driver, 'Bus82020tp', '4');\nawait setInputById(driver, 'BusOtherCosts0tp', '5');\nawait setInputById(driver, 'BusInventory0tp', '6');\nawait nextClick(driver);\nawait setInputById(driver, 'Bus82040tp', '1');\nawait setInputById(driver, 'BusMeals0tp', '2');\nawait setInputById(driver, 'Bus82050tp', '3');\nawait setInputById(driver, 'Bus82130tp', '4');\nawait setInputById(driver, 'Bus82140tp', '5');\nawait setInputById(driver, 'BusTaxes0tp', '6');\nawait setInputById(driver, 'Bus82190tp', '7');\nawait setInputById(driver, 'Bus82520tp', '8');\nawait setInputById(driver, 'Bus82200tp', '9');\nawait setInputById(driver, 'Bus82160tp', '10');\nawait setInputById(driver, 'Bus82220tp', '11');\nawait setInputById(driver, 'Bus82150tp', '12');\nawait setInputById(driver, 'Bus82230tp', '13');\nawait setInputById(driver, 'Bus82210tp', '14');\nawait setInputById(driver, 'Bus82240tp', '15');\nawait setInputById(driver, 'Bus82250tp', '16');\nawait setInputById(driver, 'Bus82120tp', '17');\nawait setInputById(driver, 'Bus82110tp', '18');\nawait setInputById(driver, 'BOtherExpenses0tp', '19');\nawait setInputById(driver, 'T2125_99740tp', '20');\nawait setInputById(driver, 'T2124_1060tp', '21');\nawait nextClick(driver);\nawait selectToggleById(driver, 'VehicleExpense0tp', '1');\nawait selectToggleById(driver, 'T2125SpAutoShare10tp', '1');\nawait selectToggleById(driver, 'T2125AutoShare10tp', '1');\nawait setInputById(driver, 'BusAutoKM10tp', '100');\nawait setInputById(driver, 'BusAutoKmTotal10tp', '100');\nawait setInputById(driver, 'BusAutoFuel10tp', '10000');\nawait selectToggleById(driver, 'T2124Auto_880tp', '1');\nawait setInputById(driver, 'autouccopening10tp', '10000');\nawait nextClick(driver);\nawait nextClick(driver);\nawait selectToggleById(driver, 'S8Q10tp', '1');\nawait selectComboById(driver, 'BusClass10tp', 'Class 6 - 10% Fences, frame, log, stucco on frame, galvanized iron, or corrugated metal buildings');\nawait setInputById(driver, 'BusCost10tp', '5000');\nawait addTabT2125_4Atrclick(driver);\nawait setInputById(driver, 'BusCost11tp', '6000');\nawait selectComboById(driver, 'BusClass11tp', ' Class 1 - 4% Most buildings you bought after 1987 ');\nawait addTabT2125_4Atrclick(driver);\nawait setInputById(driver, 'BusCost12tp', '7000');\nawait selectComboById(driver, 'BusClass12tp', 'Class 1.1 - 10% Eligible non-residential buildings acquired by a taxpayer after March 18, 2007, and used in Canada to manufacture or process goods for sale or lease');\nawait addTabT2125_4Atrclick(driver);\nawait setInputById(driver, 'BusCost13tp', '8000');\nawait selectComboById(driver, 'BusClass13tp', 'Class 1.2 - 6% Eligible non-residential buildings acquired by a taxpayer after March 18, 2007');\nawait addTabT2125_4Atrclick(driver);\nawait setInputById(driver, 'BusCost14tp', '9000');\nawait selectComboById(driver, 'BusClass14tp', 'Class 1.3 - 10% Eligible liquefaction activities in respect of the eligible liquefaction facility acquired after Feburary 19, 2015');\nawait addTabT2125_4Atrclick(driver);\nawait setInputById(driver, 'BusCost15tp', '10000');\nawait selectComboById(driver, 'BusClass15tp', 'Class 2 - 6% Electrical generating equipment, pipelines, and plant used in production of electric energy');\nawait addTabT2125_4Atrclick(driver);\nawait setInputById(driver, 'BusCost16tp', '55000');\nawait selectComboById(driver, 'BusClass16tp', 'Class 3 - 5% Most buildings acquired before 1988');\n           \n//await setInputById(driver, 'BusCost17tp', '7000');\n// await selectComboById(driver, 'BusClass17tp', 'Class 4 - 6% Railway or trolley bus systems');\n// await addTabT2125_4Atrclick(driver);\n// await setInputById(driver, 'BusCost18tp', '72000');\n// await selectComboById(driver, 'Class 5 - 10% Pulp mills acquired before 1962');\n await nextClick(driver);\nawait setInputById(driver, 'T2125_1_WebsitePageCount0tp', '10');\nawait setInputById(driver, 'T2125_1_WebpagesGross0tp', '.49');\nawait setInputById(driver, 'T2125_1URL0tp', 'INTERNETCONSULTANCY1@TAXTRON.CA');\nawait setInputById(driver, 'T2125_1URL1tp', 'INTERNETCONSULTANCY1@TAXTRON.CA');\nawait setInputById(driver, 'T2125_1URL2tp', 'INTERNETCONSULTANCY2@TAXTRON.CA');\nawait setInputById(driver, 'T2125_1URL3tp', 'INTERNETCONSULTANCY3@TAXTRON.CA');\nawait setInputById(driver, 'T2125_1URL4tp', 'INTERNETCONSULTANCY4@TAXTRON.CA');\nawait nextClick(driver);\nawait nextClick(driver);\nsavedForm = await getServerFileSp(driver,'sp');",
                            "err": {},
                            "uuid": "62a9c279-1434-4a4d-96f2-7ab5b8fbb1cc",
                            "parentUUID": "ca186abf-8389-480c-81c3-0a1a12225455",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "afterHooks": [
                        {
                            "title": "\"after all\" hook",
                            "fullTitle": "TaxableIncome_Line252_5.1(SP)--Input F54960 (restricted farm loss from prior year) to exceed amount at F14100 (net farming income). Software must not allow...  //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14 =$ 65,000, SP, T4 Box 14= $50,000, T2125. Is this a partnerships vehicle =Yes. Shared with spouse 50%-50%. Motor vehicle: Partnership =Yes. Bus KM =100, Total KM =100. Gas Expenses =$ 10,000, CCA Class =Class 10, Opening UCC =$ 10,000. o you have assets on which capital cost allowance (depreciation) can be claimed  =Yes. Class No =6. UCC at start of the year =$ 100,000)   \"after all\" hook",
                            "timedOut": false,
                            "duration": 5680,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "await logoutById(driver);\n    await driver.quit();",
                            "err": {},
                            "uuid": "1be87728-d1a7-45f0-96d3-2b1fb8049a8c",
                            "parentUUID": "ca186abf-8389-480c-81c3-0a1a12225455",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "tests": [
                        {
                            "title": " F10100 should be  allowed with amount    allow.value ==50000",
                            "fullTitle": "TaxableIncome_Line252_5.1(SP)--Input F54960 (restricted farm loss from prior year) to exceed amount at F14100 (net farming income). Software must not allow...  //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14 =$ 65,000, SP, T4 Box 14= $50,000, T2125. Is this a partnerships vehicle =Yes. Shared with spouse 50%-50%. Motor vehicle: Partnership =Yes. Bus KM =100, Total KM =100. Gas Expenses =$ 10,000, CCA Class =Class 10, Opening UCC =$ 10,000. o you have assets on which capital cost allowance (depreciation) can be claimed  =Yes. Class No =6. UCC at start of the year =$ 100,000)    F10100 should be  allowed with amount    allow.value ==50000",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let employmentIncomeFromT4SlipsFeild = getFieldId('10100');\nlet employmentIncomeFromT4Slips = savedForm[  employmentIncomeFromT4SlipsFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ employmentIncomeFromT4Slips;\nassert.strictEqual(   employmentIncomeFromT4Slips, '50000', ' Feild should be built');",
                            "err": {},
                            "uuid": "e2909682-e666-463b-87aa-bed0a1c1ecfd",
                            "parentUUID": "ca186abf-8389-480c-81c3-0a1a12225455",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F13500 should be  allowed with amount    allow.value ==-8874",
                            "fullTitle": "TaxableIncome_Line252_5.1(SP)--Input F54960 (restricted farm loss from prior year) to exceed amount at F14100 (net farming income). Software must not allow...  //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14 =$ 65,000, SP, T4 Box 14= $50,000, T2125. Is this a partnerships vehicle =Yes. Shared with spouse 50%-50%. Motor vehicle: Partnership =Yes. Bus KM =100, Total KM =100. Gas Expenses =$ 10,000, CCA Class =Class 10, Opening UCC =$ 10,000. o you have assets on which capital cost allowance (depreciation) can be claimed  =Yes. Class No =6. UCC at start of the year =$ 100,000)    F13500 should be  allowed with amount    allow.value ==-8874",
                            "timedOut": false,
                            "duration": 1,
                            "state": "failed",
                            "speed": null,
                            "pass": false,
                            "fail": true,
                            "pending": false,
                            "context": null,
                            "code": "let netFarmingIncomelossFeild = getFieldId('13500');\nlet netFarmingIncomeloss = savedForm[ netFarmingIncomelossFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ netFarmingIncomeloss;\nassert.strictEqual( netFarmingIncomeloss, '-11603', ' Feild should be built');",
                            "err": {
                                "message": "AssertionError:  Feild should be built",
                                "estack": "AssertionError [ERR_ASSERTION]:  Feild should be built\n    at Context.<anonymous> (my_work\\test_for_report_2020\\NETINC_2020\\tcTaxableIncome_Line252_5.1.js:177:20)\n    at processImmediate (internal/timers.js:456:21)",
                                "diff": "- -8874\n+ -11603\n"
                            },
                            "uuid": "de12dbf5-96d9-4c5c-909f-dd44014de9a2",
                            "parentUUID": "ca186abf-8389-480c-81c3-0a1a12225455",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F8300 should be  allowed with amount    allow.value ==1",
                            "fullTitle": "TaxableIncome_Line252_5.1(SP)--Input F54960 (restricted farm loss from prior year) to exceed amount at F14100 (net farming income). Software must not allow...  //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14 =$ 65,000, SP, T4 Box 14= $50,000, T2125. Is this a partnerships vehicle =Yes. Shared with spouse 50%-50%. Motor vehicle: Partnership =Yes. Bus KM =100, Total KM =100. Gas Expenses =$ 10,000, CCA Class =Class 10, Opening UCC =$ 10,000. o you have assets on which capital cost allowance (depreciation) can be claimed  =Yes. Class No =6. UCC at start of the year =$ 100,000)    F8300 should be  allowed with amount    allow.value ==1",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let openingInventoryincludeRawmaterialsGoodsInProcessAndfinishedGoodsFeild = businessFieldId('8300');\nlet openingInventoryincludeRawmaterialsGoodsInProcessAndfinishedGoods = savedForm[ openingInventoryincludeRawmaterialsGoodsInProcessAndfinishedGoodsFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ openingInventoryincludeRawmaterialsGoodsInProcessAndfinishedGoods;\nassert.strictEqual(openingInventoryincludeRawmaterialsGoodsInProcessAndfinishedGoods, '1', ' Feild should be built');",
                            "err": {},
                            "uuid": "59925c80-24e7-4982-a3f2-5aa35e18d50e",
                            "parentUUID": "ca186abf-8389-480c-81c3-0a1a12225455",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F8320 should be  allowed with amount    allow.value ==2",
                            "fullTitle": "TaxableIncome_Line252_5.1(SP)--Input F54960 (restricted farm loss from prior year) to exceed amount at F14100 (net farming income). Software must not allow...  //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14 =$ 65,000, SP, T4 Box 14= $50,000, T2125. Is this a partnerships vehicle =Yes. Shared with spouse 50%-50%. Motor vehicle: Partnership =Yes. Bus KM =100, Total KM =100. Gas Expenses =$ 10,000, CCA Class =Class 10, Opening UCC =$ 10,000. o you have assets on which capital cost allowance (depreciation) can be claimed  =Yes. Class No =6. UCC at start of the year =$ 100,000)    F8320 should be  allowed with amount    allow.value ==2",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let purchasesDuringTheYearNetOfReturnsAllowancesAndDiscountsFeild = businessFieldId('8320');\nlet purchasesDuringTheYearNetOfReturnsAllowancesAndDiscounts = savedForm[purchasesDuringTheYearNetOfReturnsAllowancesAndDiscountsFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+purchasesDuringTheYearNetOfReturnsAllowancesAndDiscounts;\nassert.strictEqual(purchasesDuringTheYearNetOfReturnsAllowancesAndDiscounts, '2', ' Feild should be built');",
                            "err": {},
                            "uuid": "b03efd5e-1fd1-48aa-9c25-eb68ea0942bd",
                            "parentUUID": "ca186abf-8389-480c-81c3-0a1a12225455",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F8340 should be  allowed with amount    allow.value ==3",
                            "fullTitle": "TaxableIncome_Line252_5.1(SP)--Input F54960 (restricted farm loss from prior year) to exceed amount at F14100 (net farming income). Software must not allow...  //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14 =$ 65,000, SP, T4 Box 14= $50,000, T2125. Is this a partnerships vehicle =Yes. Shared with spouse 50%-50%. Motor vehicle: Partnership =Yes. Bus KM =100, Total KM =100. Gas Expenses =$ 10,000, CCA Class =Class 10, Opening UCC =$ 10,000. o you have assets on which capital cost allowance (depreciation) can be claimed  =Yes. Class No =6. UCC at start of the year =$ 100,000)    F8340 should be  allowed with amount    allow.value ==3",
                            "timedOut": false,
                            "duration": 1,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let directWageCostsFeild = businessFieldId('8340');\nlet directWageCosts = savedForm[ directWageCostsFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ directWageCosts;\nassert.strictEqual( directWageCosts, '3', ' Feild should be built');",
                            "err": {},
                            "uuid": "5f69ff18-7c58-433a-a289-81edac106f6a",
                            "parentUUID": "ca186abf-8389-480c-81c3-0a1a12225455",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F8360 should be  allowed with amount    allow.value ==4",
                            "fullTitle": "TaxableIncome_Line252_5.1(SP)--Input F54960 (restricted farm loss from prior year) to exceed amount at F14100 (net farming income). Software must not allow...  //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14 =$ 65,000, SP, T4 Box 14= $50,000, T2125. Is this a partnerships vehicle =Yes. Shared with spouse 50%-50%. Motor vehicle: Partnership =Yes. Bus KM =100, Total KM =100. Gas Expenses =$ 10,000, CCA Class =Class 10, Opening UCC =$ 10,000. o you have assets on which capital cost allowance (depreciation) can be claimed  =Yes. Class No =6. UCC at start of the year =$ 100,000)    F8360 should be  allowed with amount    allow.value ==4",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let subcontractsFeild = businessFieldId('8360');\nlet subcontracts = savedForm[ subcontractsFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+subcontracts;\nassert.strictEqual(subcontracts, '4', ' Feild should be built');",
                            "err": {},
                            "uuid": "96d097ca-9865-4ee2-aae0-11ca4dd0016a",
                            "parentUUID": "ca186abf-8389-480c-81c3-0a1a12225455",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F8450 should be  allowed with amount    allow.value ==5",
                            "fullTitle": "TaxableIncome_Line252_5.1(SP)--Input F54960 (restricted farm loss from prior year) to exceed amount at F14100 (net farming income). Software must not allow...  //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14 =$ 65,000, SP, T4 Box 14= $50,000, T2125. Is this a partnerships vehicle =Yes. Shared with spouse 50%-50%. Motor vehicle: Partnership =Yes. Bus KM =100, Total KM =100. Gas Expenses =$ 10,000, CCA Class =Class 10, Opening UCC =$ 10,000. o you have assets on which capital cost allowance (depreciation) can be claimed  =Yes. Class No =6. UCC at start of the year =$ 100,000)    F8450 should be  allowed with amount    allow.value ==5",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let otherCostsFeild = businessFieldId('8450');\nlet otherCosts = savedForm[ otherCostsFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ otherCosts;\nassert.strictEqual( otherCosts, '5', ' Feild should be built');",
                            "err": {},
                            "uuid": "b9315a10-851b-435d-b56c-dd7e1859f4cd",
                            "parentUUID": "ca186abf-8389-480c-81c3-0a1a12225455",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F8500 should be  allowed with amount    allow.value ==6",
                            "fullTitle": "TaxableIncome_Line252_5.1(SP)--Input F54960 (restricted farm loss from prior year) to exceed amount at F14100 (net farming income). Software must not allow...  //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14 =$ 65,000, SP, T4 Box 14= $50,000, T2125. Is this a partnerships vehicle =Yes. Shared with spouse 50%-50%. Motor vehicle: Partnership =Yes. Bus KM =100, Total KM =100. Gas Expenses =$ 10,000, CCA Class =Class 10, Opening UCC =$ 10,000. o you have assets on which capital cost allowance (depreciation) can be claimed  =Yes. Class No =6. UCC at start of the year =$ 100,000)    F8500 should be  allowed with amount    allow.value ==6",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let closingInventoryIncludeRawMaterialsGoodsInProcessAndFinishedGoodsFeild = businessFieldId('8500');\nlet  closingInventoryIncludeRawMaterialsGoodsInProcessAndFinishedGoods = savedForm[  closingInventoryIncludeRawMaterialsGoodsInProcessAndFinishedGoodsFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+  closingInventoryIncludeRawMaterialsGoodsInProcessAndFinishedGoods;\nassert.strictEqual(  closingInventoryIncludeRawMaterialsGoodsInProcessAndFinishedGoods, '6', ' Feild should be built');",
                            "err": {},
                            "uuid": "a0e59554-dec3-4569-8858-01e4497693a9",
                            "parentUUID": "ca186abf-8389-480c-81c3-0a1a12225455",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F8518 should be  allowed with amount    allow.value ==9",
                            "fullTitle": "TaxableIncome_Line252_5.1(SP)--Input F54960 (restricted farm loss from prior year) to exceed amount at F14100 (net farming income). Software must not allow...  //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14 =$ 65,000, SP, T4 Box 14= $50,000, T2125. Is this a partnerships vehicle =Yes. Shared with spouse 50%-50%. Motor vehicle: Partnership =Yes. Bus KM =100, Total KM =100. Gas Expenses =$ 10,000, CCA Class =Class 10, Opening UCC =$ 10,000. o you have assets on which capital cost allowance (depreciation) can be claimed  =Yes. Class No =6. UCC at start of the year =$ 100,000)    F8518 should be  allowed with amount    allow.value ==9",
                            "timedOut": false,
                            "duration": 1,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let costOfGoodsSoldFeild = businessFieldId('8518');\nlet costOfGoodsSold = savedForm[ costOfGoodsSoldFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ costOfGoodsSold;\nassert.strictEqual( costOfGoodsSold, '9', ' Feild should be built');",
                            "err": {},
                            "uuid": "54f4b67a-fee2-464e-9b32-77a875d22896",
                            "parentUUID": "ca186abf-8389-480c-81c3-0a1a12225455",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F8519 should be  allowed with amount    allow.value ==4",
                            "fullTitle": "TaxableIncome_Line252_5.1(SP)--Input F54960 (restricted farm loss from prior year) to exceed amount at F14100 (net farming income). Software must not allow...  //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14 =$ 65,000, SP, T4 Box 14= $50,000, T2125. Is this a partnerships vehicle =Yes. Shared with spouse 50%-50%. Motor vehicle: Partnership =Yes. Bus KM =100, Total KM =100. Gas Expenses =$ 10,000, CCA Class =Class 10, Opening UCC =$ 10,000. o you have assets on which capital cost allowance (depreciation) can be claimed  =Yes. Class No =6. UCC at start of the year =$ 100,000)    F8519 should be  allowed with amount    allow.value ==4",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let grossProfitOrlossFeild = businessFieldId('8519');\nlet grossProfitOrloss = savedForm[ grossProfitOrlossFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ grossProfitOrloss;\nassert.strictEqual( grossProfitOrloss, '4', ' Feild should be built');",
                            "err": {},
                            "uuid": "dd58aea3-cfc4-4167-b04c-b81018ae3777",
                            "parentUUID": "ca186abf-8389-480c-81c3-0a1a12225455",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F8521 should be  allowed with amount    allow.value ==1",
                            "fullTitle": "TaxableIncome_Line252_5.1(SP)--Input F54960 (restricted farm loss from prior year) to exceed amount at F14100 (net farming income). Software must not allow...  //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14 =$ 65,000, SP, T4 Box 14= $50,000, T2125. Is this a partnerships vehicle =Yes. Shared with spouse 50%-50%. Motor vehicle: Partnership =Yes. Bus KM =100, Total KM =100. Gas Expenses =$ 10,000, CCA Class =Class 10, Opening UCC =$ 10,000. o you have assets on which capital cost allowance (depreciation) can be claimed  =Yes. Class No =6. UCC at start of the year =$ 100,000)    F8521 should be  allowed with amount    allow.value ==1",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let advertisingFeild = businessFieldId('8521');\nlet  advertising = savedForm[  advertisingFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+  advertising;\nassert.strictEqual(  advertising, '1', ' Feild should be built');",
                            "err": {},
                            "uuid": "5826f2af-cefc-4d43-aa1a-090c7d9232ee",
                            "parentUUID": "ca186abf-8389-480c-81c3-0a1a12225455",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F8523 should be  allowed with amount    allow.value ==undefined",
                            "fullTitle": "TaxableIncome_Line252_5.1(SP)--Input F54960 (restricted farm loss from prior year) to exceed amount at F14100 (net farming income). Software must not allow...  //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14 =$ 65,000, SP, T4 Box 14= $50,000, T2125. Is this a partnerships vehicle =Yes. Shared with spouse 50%-50%. Motor vehicle: Partnership =Yes. Bus KM =100, Total KM =100. Gas Expenses =$ 10,000, CCA Class =Class 10, Opening UCC =$ 10,000. o you have assets on which capital cost allowance (depreciation) can be claimed  =Yes. Class No =6. UCC at start of the year =$ 100,000)    F8523 should be  allowed with amount    allow.value ==undefined",
                            "timedOut": false,
                            "duration": 1,
                            "state": "failed",
                            "speed": null,
                            "pass": false,
                            "fail": true,
                            "pending": false,
                            "context": null,
                            "code": "let mealsAndEntertainmentFeild = businessFieldId('8523');\nlet mealsAndEntertainment = savedForm[ mealsAndEntertainmentFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ mealsAndEntertainment;\nassert.strictEqual(mealsAndEntertainment, '1', ' Feild should be built');",
                            "err": {
                                "message": "AssertionError:  Feild should be built",
                                "estack": "AssertionError [ERR_ASSERTION]:  Feild should be built\n    at Context.<anonymous> (my_work\\test_for_report_2020\\NETINC_2020\\tcTaxableIncome_Line252_5.1.js:238:20)\n    at processImmediate (internal/timers.js:456:21)",
                                "diff": null
                            },
                            "uuid": "37063110-9dfb-4a25-bad8-d9324cdacd9e",
                            "parentUUID": "ca186abf-8389-480c-81c3-0a1a12225455",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F8590 should be  allowed with amount    allow.value ==3",
                            "fullTitle": "TaxableIncome_Line252_5.1(SP)--Input F54960 (restricted farm loss from prior year) to exceed amount at F14100 (net farming income). Software must not allow...  //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14 =$ 65,000, SP, T4 Box 14= $50,000, T2125. Is this a partnerships vehicle =Yes. Shared with spouse 50%-50%. Motor vehicle: Partnership =Yes. Bus KM =100, Total KM =100. Gas Expenses =$ 10,000, CCA Class =Class 10, Opening UCC =$ 10,000. o you have assets on which capital cost allowance (depreciation) can be claimed  =Yes. Class No =6. UCC at start of the year =$ 100,000)    F8590 should be  allowed with amount    allow.value ==3",
                            "timedOut": false,
                            "duration": 1,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let badDebtsFeild = businessFieldId('8590');\nlet badDebts = savedForm[ badDebtsFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ badDebts;\nassert.strictEqual( badDebts, '3', ' Feild should be built');",
                            "err": {},
                            "uuid": "bf406a61-a151-4825-921c-29013757167e",
                            "parentUUID": "ca186abf-8389-480c-81c3-0a1a12225455",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F8690 should be  allowed with amount    allow.value ==4",
                            "fullTitle": "TaxableIncome_Line252_5.1(SP)--Input F54960 (restricted farm loss from prior year) to exceed amount at F14100 (net farming income). Software must not allow...  //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14 =$ 65,000, SP, T4 Box 14= $50,000, T2125. Is this a partnerships vehicle =Yes. Shared with spouse 50%-50%. Motor vehicle: Partnership =Yes. Bus KM =100, Total KM =100. Gas Expenses =$ 10,000, CCA Class =Class 10, Opening UCC =$ 10,000. o you have assets on which capital cost allowance (depreciation) can be claimed  =Yes. Class No =6. UCC at start of the year =$ 100,000)    F8690 should be  allowed with amount    allow.value ==4",
                            "timedOut": false,
                            "duration": 1,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let insuranceFeild = businessFieldId('8690');\nlet insurance = savedForm[ insuranceFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ insurance;\nassert.strictEqual( insurance, '4', ' Feild should be built');",
                            "err": {},
                            "uuid": "95f210ba-cddb-4364-a391-0461eb727d74",
                            "parentUUID": "ca186abf-8389-480c-81c3-0a1a12225455",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F8710 should be  allowed with amount    allow.value ==5",
                            "fullTitle": "TaxableIncome_Line252_5.1(SP)--Input F54960 (restricted farm loss from prior year) to exceed amount at F14100 (net farming income). Software must not allow...  //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14 =$ 65,000, SP, T4 Box 14= $50,000, T2125. Is this a partnerships vehicle =Yes. Shared with spouse 50%-50%. Motor vehicle: Partnership =Yes. Bus KM =100, Total KM =100. Gas Expenses =$ 10,000, CCA Class =Class 10, Opening UCC =$ 10,000. o you have assets on which capital cost allowance (depreciation) can be claimed  =Yes. Class No =6. UCC at start of the year =$ 100,000)    F8710 should be  allowed with amount    allow.value ==5",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let interestAndBankChargesFeild = businessFieldId('8710');\nlet interestAndBankCharges = savedForm[ interestAndBankChargesFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ interestAndBankCharges;\nassert.strictEqual( interestAndBankCharges, '5', ' Feild should be built');",
                            "err": {},
                            "uuid": "471f6a0a-dc2c-4b84-afbd-d25612ddf372",
                            "parentUUID": "ca186abf-8389-480c-81c3-0a1a12225455",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F8760 should be  allowed with amount    allow.value ==6",
                            "fullTitle": "TaxableIncome_Line252_5.1(SP)--Input F54960 (restricted farm loss from prior year) to exceed amount at F14100 (net farming income). Software must not allow...  //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14 =$ 65,000, SP, T4 Box 14= $50,000, T2125. Is this a partnerships vehicle =Yes. Shared with spouse 50%-50%. Motor vehicle: Partnership =Yes. Bus KM =100, Total KM =100. Gas Expenses =$ 10,000, CCA Class =Class 10, Opening UCC =$ 10,000. o you have assets on which capital cost allowance (depreciation) can be claimed  =Yes. Class No =6. UCC at start of the year =$ 100,000)    F8760 should be  allowed with amount    allow.value ==6",
                            "timedOut": false,
                            "duration": 1,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let businessTaxeslicencesAndMembershipsFeild = businessFieldId('8760');\nlet businessTaxeslicencesAndMemberships = savedForm[ businessTaxeslicencesAndMembershipsFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ businessTaxeslicencesAndMemberships;\nassert.strictEqual( businessTaxeslicencesAndMemberships, '6', ' Feild should be built');",
                            "err": {},
                            "uuid": "b1647082-3eda-4a13-87ef-a083b80c549f",
                            "parentUUID": "ca186abf-8389-480c-81c3-0a1a12225455",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F8810 should be  allowed with amount    allow.value ==7",
                            "fullTitle": "TaxableIncome_Line252_5.1(SP)--Input F54960 (restricted farm loss from prior year) to exceed amount at F14100 (net farming income). Software must not allow...  //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14 =$ 65,000, SP, T4 Box 14= $50,000, T2125. Is this a partnerships vehicle =Yes. Shared with spouse 50%-50%. Motor vehicle: Partnership =Yes. Bus KM =100, Total KM =100. Gas Expenses =$ 10,000, CCA Class =Class 10, Opening UCC =$ 10,000. o you have assets on which capital cost allowance (depreciation) can be claimed  =Yes. Class No =6. UCC at start of the year =$ 100,000)    F8810 should be  allowed with amount    allow.value ==7",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let officeExpensesFeild = businessFieldId('8810');\nlet officeExpenses = savedForm[officeExpensesFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ officeExpenses;\nassert.strictEqual( officeExpenses, '7', ' Feild should be built');",
                            "err": {},
                            "uuid": "4b7eba6f-2f64-42a1-b635-29ad3365398c",
                            "parentUUID": "ca186abf-8389-480c-81c3-0a1a12225455",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F8811 should be  allowed with amount    allow.value ==8",
                            "fullTitle": "TaxableIncome_Line252_5.1(SP)--Input F54960 (restricted farm loss from prior year) to exceed amount at F14100 (net farming income). Software must not allow...  //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14 =$ 65,000, SP, T4 Box 14= $50,000, T2125. Is this a partnerships vehicle =Yes. Shared with spouse 50%-50%. Motor vehicle: Partnership =Yes. Bus KM =100, Total KM =100. Gas Expenses =$ 10,000, CCA Class =Class 10, Opening UCC =$ 10,000. o you have assets on which capital cost allowance (depreciation) can be claimed  =Yes. Class No =6. UCC at start of the year =$ 100,000)    F8811 should be  allowed with amount    allow.value ==8",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let officeStationeryAndSuppliesFeild = businessFieldId('8811');\nlet officeStationeryAndSupplies = savedForm[ officeStationeryAndSuppliesFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ officeStationeryAndSupplies;\nassert.strictEqual( officeStationeryAndSupplies, '8', ' Feild should be built');",
                            "err": {},
                            "uuid": "cd9f5d80-250d-40d3-8637-67cae8d9bc36",
                            "parentUUID": "ca186abf-8389-480c-81c3-0a1a12225455",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F8860 should be  allowed with amount    allow.value ==9",
                            "fullTitle": "TaxableIncome_Line252_5.1(SP)--Input F54960 (restricted farm loss from prior year) to exceed amount at F14100 (net farming income). Software must not allow...  //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14 =$ 65,000, SP, T4 Box 14= $50,000, T2125. Is this a partnerships vehicle =Yes. Shared with spouse 50%-50%. Motor vehicle: Partnership =Yes. Bus KM =100, Total KM =100. Gas Expenses =$ 10,000, CCA Class =Class 10, Opening UCC =$ 10,000. o you have assets on which capital cost allowance (depreciation) can be claimed  =Yes. Class No =6. UCC at start of the year =$ 100,000)    F8860 should be  allowed with amount    allow.value ==9",
                            "timedOut": false,
                            "duration": 1,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let professionalFeesIncludeslegalAndAccountingFeesFeild = businessFieldId('8860');\nlet professionalFeesIncludeslegalAndAccountingFees = savedForm[ professionalFeesIncludeslegalAndAccountingFeesFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ professionalFeesIncludeslegalAndAccountingFees;\nassert.strictEqual( professionalFeesIncludeslegalAndAccountingFees, '9', ' Feild should be built');",
                            "err": {},
                            "uuid": "44109e91-c828-4e5e-b1e8-fa0edff2daab",
                            "parentUUID": "ca186abf-8389-480c-81c3-0a1a12225455",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F8871 should be  allowed with amount    allow.value ==10",
                            "fullTitle": "TaxableIncome_Line252_5.1(SP)--Input F54960 (restricted farm loss from prior year) to exceed amount at F14100 (net farming income). Software must not allow...  //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14 =$ 65,000, SP, T4 Box 14= $50,000, T2125. Is this a partnerships vehicle =Yes. Shared with spouse 50%-50%. Motor vehicle: Partnership =Yes. Bus KM =100, Total KM =100. Gas Expenses =$ 10,000, CCA Class =Class 10, Opening UCC =$ 10,000. o you have assets on which capital cost allowance (depreciation) can be claimed  =Yes. Class No =6. UCC at start of the year =$ 100,000)    F8871 should be  allowed with amount    allow.value ==10",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let managementAndAdministrationFeesFeild = businessFieldId('8871');\nlet managementAndAdministrationFees = savedForm[ managementAndAdministrationFeesFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ managementAndAdministrationFees;\nassert.strictEqual( managementAndAdministrationFees, '10', ' Feild should be built');",
                            "err": {},
                            "uuid": "9d8a32f6-d62b-4093-977b-fb5755737d9c",
                            "parentUUID": "ca186abf-8389-480c-81c3-0a1a12225455",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F8910 should be  allowed with amount    allow.value ==11",
                            "fullTitle": "TaxableIncome_Line252_5.1(SP)--Input F54960 (restricted farm loss from prior year) to exceed amount at F14100 (net farming income). Software must not allow...  //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14 =$ 65,000, SP, T4 Box 14= $50,000, T2125. Is this a partnerships vehicle =Yes. Shared with spouse 50%-50%. Motor vehicle: Partnership =Yes. Bus KM =100, Total KM =100. Gas Expenses =$ 10,000, CCA Class =Class 10, Opening UCC =$ 10,000. o you have assets on which capital cost allowance (depreciation) can be claimed  =Yes. Class No =6. UCC at start of the year =$ 100,000)    F8910 should be  allowed with amount    allow.value ==11",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let rentFeild = businessFieldId('8910');\nlet rent = savedForm[ rentFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ rent;\nassert.strictEqual(rent, '11', ' Feild should be built');",
                            "err": {},
                            "uuid": "21629a12-98d3-42cd-b465-5896c20ddfc1",
                            "parentUUID": "ca186abf-8389-480c-81c3-0a1a12225455",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F8960 should be  allowed with amount    allow.value ==12",
                            "fullTitle": "TaxableIncome_Line252_5.1(SP)--Input F54960 (restricted farm loss from prior year) to exceed amount at F14100 (net farming income). Software must not allow...  //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14 =$ 65,000, SP, T4 Box 14= $50,000, T2125. Is this a partnerships vehicle =Yes. Shared with spouse 50%-50%. Motor vehicle: Partnership =Yes. Bus KM =100, Total KM =100. Gas Expenses =$ 10,000, CCA Class =Class 10, Opening UCC =$ 10,000. o you have assets on which capital cost allowance (depreciation) can be claimed  =Yes. Class No =6. UCC at start of the year =$ 100,000)    F8960 should be  allowed with amount    allow.value ==12",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let repairsAndMaintenanceFeild = businessFieldId('8960');\nlet repairsAndMaintenance = savedForm[ repairsAndMaintenanceFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ repairsAndMaintenance;\nassert.strictEqual( repairsAndMaintenance, '12', ' Feild should be built');",
                            "err": {},
                            "uuid": "ebac5bf0-9217-4f09-9a08-eaec978389ec",
                            "parentUUID": "ca186abf-8389-480c-81c3-0a1a12225455",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F9060 should be  allowed with amount    allow.value ==13",
                            "fullTitle": "TaxableIncome_Line252_5.1(SP)--Input F54960 (restricted farm loss from prior year) to exceed amount at F14100 (net farming income). Software must not allow...  //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14 =$ 65,000, SP, T4 Box 14= $50,000, T2125. Is this a partnerships vehicle =Yes. Shared with spouse 50%-50%. Motor vehicle: Partnership =Yes. Bus KM =100, Total KM =100. Gas Expenses =$ 10,000, CCA Class =Class 10, Opening UCC =$ 10,000. o you have assets on which capital cost allowance (depreciation) can be claimed  =Yes. Class No =6. UCC at start of the year =$ 100,000)    F9060 should be  allowed with amount    allow.value ==13",
                            "timedOut": false,
                            "duration": 1,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let salariesWagesAndBenefitsIncludingEmployersContributionsFeild = businessFieldId('9060');\nlet salariesWagesAndBenefitsIncludingEmployersContributions = savedForm[ salariesWagesAndBenefitsIncludingEmployersContributionsFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ salariesWagesAndBenefitsIncludingEmployersContributions;\nassert.strictEqual( salariesWagesAndBenefitsIncludingEmployersContributions, '13', ' Feild should be built');",
                            "err": {},
                            "uuid": "be9ac614-3f59-4e0d-8250-843a2d4f95fb",
                            "parentUUID": "ca186abf-8389-480c-81c3-0a1a12225455",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F9180 should be  allowed with amount    allow.value ==14",
                            "fullTitle": "TaxableIncome_Line252_5.1(SP)--Input F54960 (restricted farm loss from prior year) to exceed amount at F14100 (net farming income). Software must not allow...  //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14 =$ 65,000, SP, T4 Box 14= $50,000, T2125. Is this a partnerships vehicle =Yes. Shared with spouse 50%-50%. Motor vehicle: Partnership =Yes. Bus KM =100, Total KM =100. Gas Expenses =$ 10,000, CCA Class =Class 10, Opening UCC =$ 10,000. o you have assets on which capital cost allowance (depreciation) can be claimed  =Yes. Class No =6. UCC at start of the year =$ 100,000)    F9180 should be  allowed with amount    allow.value ==14",
                            "timedOut": false,
                            "duration": 1,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let propertyTaxesFeild = businessFieldId('9180');\nlet propertyTaxes = savedForm[ propertyTaxesFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ propertyTaxes;\nassert.strictEqual( propertyTaxes, '14', ' Feild should be built');",
                            "err": {},
                            "uuid": "f9cf5d03-5532-4406-9a0e-21347170b25a",
                            "parentUUID": "ca186abf-8389-480c-81c3-0a1a12225455",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F9200 should be  allowed with amount    allow.value ==15",
                            "fullTitle": "TaxableIncome_Line252_5.1(SP)--Input F54960 (restricted farm loss from prior year) to exceed amount at F14100 (net farming income). Software must not allow...  //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14 =$ 65,000, SP, T4 Box 14= $50,000, T2125. Is this a partnerships vehicle =Yes. Shared with spouse 50%-50%. Motor vehicle: Partnership =Yes. Bus KM =100, Total KM =100. Gas Expenses =$ 10,000, CCA Class =Class 10, Opening UCC =$ 10,000. o you have assets on which capital cost allowance (depreciation) can be claimed  =Yes. Class No =6. UCC at start of the year =$ 100,000)    F9200 should be  allowed with amount    allow.value ==15",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let travelExpensesFeild = businessFieldId('9200');\nlet  travelExpenses = savedForm[  travelExpensesFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+  travelExpenses;\nassert.strictEqual(  travelExpenses, '15', ' Feild should be built');",
                            "err": {},
                            "uuid": "eb55ade1-6d88-4853-b668-8ba070afbe06",
                            "parentUUID": "ca186abf-8389-480c-81c3-0a1a12225455",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F9220 should be  allowed with amount    allow.value ==16",
                            "fullTitle": "TaxableIncome_Line252_5.1(SP)--Input F54960 (restricted farm loss from prior year) to exceed amount at F14100 (net farming income). Software must not allow...  //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14 =$ 65,000, SP, T4 Box 14= $50,000, T2125. Is this a partnerships vehicle =Yes. Shared with spouse 50%-50%. Motor vehicle: Partnership =Yes. Bus KM =100, Total KM =100. Gas Expenses =$ 10,000, CCA Class =Class 10, Opening UCC =$ 10,000. o you have assets on which capital cost allowance (depreciation) can be claimed  =Yes. Class No =6. UCC at start of the year =$ 100,000)    F9220 should be  allowed with amount    allow.value ==16",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let utilitiesFeild = businessFieldId('9220');\nlet utilities = savedForm[ utilitiesFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ utilities;\nassert.strictEqual( utilities, '16', ' Feild should be built');",
                            "err": {},
                            "uuid": "40796fc2-560a-4e11-a614-56a329c9d120",
                            "parentUUID": "ca186abf-8389-480c-81c3-0a1a12225455",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F9224 should be  allowed with amount    allow.value ==17",
                            "fullTitle": "TaxableIncome_Line252_5.1(SP)--Input F54960 (restricted farm loss from prior year) to exceed amount at F14100 (net farming income). Software must not allow...  //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14 =$ 65,000, SP, T4 Box 14= $50,000, T2125. Is this a partnerships vehicle =Yes. Shared with spouse 50%-50%. Motor vehicle: Partnership =Yes. Bus KM =100, Total KM =100. Gas Expenses =$ 10,000, CCA Class =Class 10, Opening UCC =$ 10,000. o you have assets on which capital cost allowance (depreciation) can be claimed  =Yes. Class No =6. UCC at start of the year =$ 100,000)    F9224 should be  allowed with amount    allow.value ==17",
                            "timedOut": false,
                            "duration": 1,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let fuelCostsExceptForMotorVehiclesFeild = businessFieldId('9224');\nlet fuelCostsExceptForMotorVehicles = savedForm[ fuelCostsExceptForMotorVehiclesFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ fuelCostsExceptForMotorVehicles;\nassert.strictEqual( fuelCostsExceptForMotorVehicles, '17', ' Feild should be built');",
                            "err": {},
                            "uuid": "11eced15-00ee-4ec4-8349-b30194191134",
                            "parentUUID": "ca186abf-8389-480c-81c3-0a1a12225455",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F9275 should be  allowed with amount    allow.value ==18",
                            "fullTitle": "TaxableIncome_Line252_5.1(SP)--Input F54960 (restricted farm loss from prior year) to exceed amount at F14100 (net farming income). Software must not allow...  //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14 =$ 65,000, SP, T4 Box 14= $50,000, T2125. Is this a partnerships vehicle =Yes. Shared with spouse 50%-50%. Motor vehicle: Partnership =Yes. Bus KM =100, Total KM =100. Gas Expenses =$ 10,000, CCA Class =Class 10, Opening UCC =$ 10,000. o you have assets on which capital cost allowance (depreciation) can be claimed  =Yes. Class No =6. UCC at start of the year =$ 100,000)    F9275 should be  allowed with amount    allow.value ==18",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let deliveryFreightAndExpressFeild = businessFieldId('9275');\nlet deliveryFreightAndExpress = savedForm[ deliveryFreightAndExpressFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ deliveryFreightAndExpress;\nassert.strictEqual( deliveryFreightAndExpress, '18', ' Feild should be built');",
                            "err": {},
                            "uuid": "80b0e892-d843-4898-906f-4801c81170bf",
                            "parentUUID": "ca186abf-8389-480c-81c3-0a1a12225455",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F9281 should be  allowed with amount    allow.value ==10000",
                            "fullTitle": "TaxableIncome_Line252_5.1(SP)--Input F54960 (restricted farm loss from prior year) to exceed amount at F14100 (net farming income). Software must not allow...  //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14 =$ 65,000, SP, T4 Box 14= $50,000, T2125. Is this a partnerships vehicle =Yes. Shared with spouse 50%-50%. Motor vehicle: Partnership =Yes. Bus KM =100, Total KM =100. Gas Expenses =$ 10,000, CCA Class =Class 10, Opening UCC =$ 10,000. o you have assets on which capital cost allowance (depreciation) can be claimed  =Yes. Class No =6. UCC at start of the year =$ 100,000)    F9281 should be  allowed with amount    allow.value ==10000",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let motorVehicleExpensesNotIncludingCCAFeild = businessFieldId('9281');\nlet motorVehicleExpensesNotIncludingCCA = savedForm[ motorVehicleExpensesNotIncludingCCAFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ motorVehicleExpensesNotIncludingCCA;\nassert.strictEqual(motorVehicleExpensesNotIncludingCCA, '10000', ' Feild should be built');",
                            "err": {},
                            "uuid": "5b265ded-244c-489c-bbdb-626d108c9344",
                            "parentUUID": "ca186abf-8389-480c-81c3-0a1a12225455",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F9936 should be  allowed with amount    allow.value ==7543",
                            "fullTitle": "TaxableIncome_Line252_5.1(SP)--Input F54960 (restricted farm loss from prior year) to exceed amount at F14100 (net farming income). Software must not allow...  //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14 =$ 65,000, SP, T4 Box 14= $50,000, T2125. Is this a partnerships vehicle =Yes. Shared with spouse 50%-50%. Motor vehicle: Partnership =Yes. Bus KM =100, Total KM =100. Gas Expenses =$ 10,000, CCA Class =Class 10, Opening UCC =$ 10,000. o you have assets on which capital cost allowance (depreciation) can be claimed  =Yes. Class No =6. UCC at start of the year =$ 100,000)    F9936 should be  allowed with amount    allow.value ==7543",
                            "timedOut": false,
                            "duration": 1,
                            "state": "failed",
                            "speed": null,
                            "pass": false,
                            "fail": true,
                            "pending": false,
                            "context": null,
                            "code": "let capitalCostAllowanceFeild = businessFieldId('9936');\nlet  capitalCostAllowance = savedForm[  capitalCostAllowanceFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+  capitalCostAllowance;\nassert.strictEqual(  capitalCostAllowance, '10000', ' Feild should be built');",
                            "err": {
                                "message": "AssertionError:  Feild should be built",
                                "estack": "AssertionError [ERR_ASSERTION]:  Feild should be built\n    at Context.<anonymous> (my_work\\test_for_report_2020\\NETINC_2020\\tcTaxableIncome_Line252_5.1.js:346:20)\n    at processImmediate (internal/timers.js:456:21)",
                                "diff": "- 7543\n+ 10000\n"
                            },
                            "uuid": "c8b3ca2b-2860-4543-aa7a-e3d76f396668",
                            "parentUUID": "ca186abf-8389-480c-81c3-0a1a12225455",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F9270 should be  allowed with amount    allow.value ==40",
                            "fullTitle": "TaxableIncome_Line252_5.1(SP)--Input F54960 (restricted farm loss from prior year) to exceed amount at F14100 (net farming income). Software must not allow...  //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14 =$ 65,000, SP, T4 Box 14= $50,000, T2125. Is this a partnerships vehicle =Yes. Shared with spouse 50%-50%. Motor vehicle: Partnership =Yes. Bus KM =100, Total KM =100. Gas Expenses =$ 10,000, CCA Class =Class 10, Opening UCC =$ 10,000. o you have assets on which capital cost allowance (depreciation) can be claimed  =Yes. Class No =6. UCC at start of the year =$ 100,000)    F9270 should be  allowed with amount    allow.value ==40",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let otherExpensesFeild = businessFieldId('9270');\nlet otherExpenses = savedForm[ otherExpensesFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ otherExpenses;\nassert.strictEqual( otherExpenses, '40', ' Feild should be built');",
                            "err": {},
                            "uuid": "193fa93b-5ecc-4adc-bf2c-ff2e5b2cb661",
                            "parentUUID": "ca186abf-8389-480c-81c3-0a1a12225455",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F9368 should be  allowed with amount    allow.value ==17752",
                            "fullTitle": "TaxableIncome_Line252_5.1(SP)--Input F54960 (restricted farm loss from prior year) to exceed amount at F14100 (net farming income). Software must not allow...  //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14 =$ 65,000, SP, T4 Box 14= $50,000, T2125. Is this a partnerships vehicle =Yes. Shared with spouse 50%-50%. Motor vehicle: Partnership =Yes. Bus KM =100, Total KM =100. Gas Expenses =$ 10,000, CCA Class =Class 10, Opening UCC =$ 10,000. o you have assets on which capital cost allowance (depreciation) can be claimed  =Yes. Class No =6. UCC at start of the year =$ 100,000)    F9368 should be  allowed with amount    allow.value ==17752",
                            "timedOut": false,
                            "duration": 1,
                            "state": "failed",
                            "speed": null,
                            "pass": false,
                            "fail": true,
                            "pending": false,
                            "context": null,
                            "code": "let totalExpensesFeild = businessFieldId('9368');\nlet totalExpenses = savedForm[ totalExpensesFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+totalExpenses;\nassert.strictEqual( totalExpenses, '20210', ' Feild should be built');",
                            "err": {
                                "message": "AssertionError:  Feild should be built",
                                "estack": "AssertionError [ERR_ASSERTION]:  Feild should be built\n    at Context.<anonymous> (my_work\\test_for_report_2020\\NETINC_2020\\tcTaxableIncome_Line252_5.1.js:358:20)\n    at processImmediate (internal/timers.js:456:21)",
                                "diff": "- 17752\n+ 20210\n"
                            },
                            "uuid": "9d43f63c-47b6-4747-b48e-8b70d7674ff8",
                            "parentUUID": "ca186abf-8389-480c-81c3-0a1a12225455",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F9369 should be  allowed with amount    allow.value ==-17748",
                            "fullTitle": "TaxableIncome_Line252_5.1(SP)--Input F54960 (restricted farm loss from prior year) to exceed amount at F14100 (net farming income). Software must not allow...  //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14 =$ 65,000, SP, T4 Box 14= $50,000, T2125. Is this a partnerships vehicle =Yes. Shared with spouse 50%-50%. Motor vehicle: Partnership =Yes. Bus KM =100, Total KM =100. Gas Expenses =$ 10,000, CCA Class =Class 10, Opening UCC =$ 10,000. o you have assets on which capital cost allowance (depreciation) can be claimed  =Yes. Class No =6. UCC at start of the year =$ 100,000)    F9369 should be  allowed with amount    allow.value ==-17748",
                            "timedOut": false,
                            "duration": 0,
                            "state": "failed",
                            "speed": null,
                            "pass": false,
                            "fail": true,
                            "pending": false,
                            "context": null,
                            "code": "let netIncomelossBeforeAdjustmentsFeild = businessFieldId('9369');\nlet netIncomelossBeforeAdjustments = savedForm[ netIncomelossBeforeAdjustmentsFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ netIncomelossBeforeAdjustments;\nassert.strictEqual(netIncomelossBeforeAdjustments, '-20206', ' Feild should be built');",
                            "err": {
                                "message": "AssertionError:  Feild should be built",
                                "estack": "AssertionError [ERR_ASSERTION]:  Feild should be built\n    at Context.<anonymous> (my_work\\test_for_report_2020\\NETINC_2020\\tcTaxableIncome_Line252_5.1.js:364:20)\n    at processImmediate (internal/timers.js:456:21)",
                                "diff": "- -17748\n+ -20206\n"
                            },
                            "uuid": "da0452a6-a2b2-4ab9-bc1f-df301a50c8b2",
                            "parentUUID": "ca186abf-8389-480c-81c3-0a1a12225455",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F9974 should be  allowed with amount    allow.value ==undefined",
                            "fullTitle": "TaxableIncome_Line252_5.1(SP)--Input F54960 (restricted farm loss from prior year) to exceed amount at F14100 (net farming income). Software must not allow...  //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14 =$ 65,000, SP, T4 Box 14= $50,000, T2125. Is this a partnerships vehicle =Yes. Shared with spouse 50%-50%. Motor vehicle: Partnership =Yes. Bus KM =100, Total KM =100. Gas Expenses =$ 10,000, CCA Class =Class 10, Opening UCC =$ 10,000. o you have assets on which capital cost allowance (depreciation) can be claimed  =Yes. Class No =6. UCC at start of the year =$ 100,000)    F9974 should be  allowed with amount    allow.value ==undefined",
                            "timedOut": false,
                            "duration": 1,
                            "state": "failed",
                            "speed": null,
                            "pass": false,
                            "fail": true,
                            "pending": false,
                            "context": null,
                            "code": "let gSTHSTRebateForPartnersReceivedInTheYearFeild = businessFieldId('9974');\nlet gSTHSTRebateForPartnersReceivedInTheYear = savedForm[ gSTHSTRebateForPartnersReceivedInTheYearFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ gSTHSTRebateForPartnersReceivedInTheYear;\nassert.strictEqual( gSTHSTRebateForPartnersReceivedInTheYear, '20', ' Feild should be built');",
                            "err": {
                                "message": "AssertionError:  Feild should be built",
                                "estack": "AssertionError [ERR_ASSERTION]:  Feild should be built\n    at Context.<anonymous> (my_work\\test_for_report_2020\\NETINC_2020\\tcTaxableIncome_Line252_5.1.js:370:20)\n    at processImmediate (internal/timers.js:456:21)",
                                "diff": null
                            },
                            "uuid": "a4fc58a5-09c3-4596-95b4-c90bc2bfb1f9",
                            "parentUUID": "ca186abf-8389-480c-81c3-0a1a12225455",
                            "isHook": false,
                            "skipped": false
                        }
                    ],
                    "suites": [],
                    "passes": [
                        "e2909682-e666-463b-87aa-bed0a1c1ecfd",
                        "59925c80-24e7-4982-a3f2-5aa35e18d50e",
                        "b03efd5e-1fd1-48aa-9c25-eb68ea0942bd",
                        "5f69ff18-7c58-433a-a289-81edac106f6a",
                        "96d097ca-9865-4ee2-aae0-11ca4dd0016a",
                        "b9315a10-851b-435d-b56c-dd7e1859f4cd",
                        "a0e59554-dec3-4569-8858-01e4497693a9",
                        "54f4b67a-fee2-464e-9b32-77a875d22896",
                        "dd58aea3-cfc4-4167-b04c-b81018ae3777",
                        "5826f2af-cefc-4d43-aa1a-090c7d9232ee",
                        "bf406a61-a151-4825-921c-29013757167e",
                        "95f210ba-cddb-4364-a391-0461eb727d74",
                        "471f6a0a-dc2c-4b84-afbd-d25612ddf372",
                        "b1647082-3eda-4a13-87ef-a083b80c549f",
                        "4b7eba6f-2f64-42a1-b635-29ad3365398c",
                        "cd9f5d80-250d-40d3-8637-67cae8d9bc36",
                        "44109e91-c828-4e5e-b1e8-fa0edff2daab",
                        "9d8a32f6-d62b-4093-977b-fb5755737d9c",
                        "21629a12-98d3-42cd-b465-5896c20ddfc1",
                        "ebac5bf0-9217-4f09-9a08-eaec978389ec",
                        "be9ac614-3f59-4e0d-8250-843a2d4f95fb",
                        "f9cf5d03-5532-4406-9a0e-21347170b25a",
                        "eb55ade1-6d88-4853-b668-8ba070afbe06",
                        "40796fc2-560a-4e11-a614-56a329c9d120",
                        "11eced15-00ee-4ec4-8349-b30194191134",
                        "80b0e892-d843-4898-906f-4801c81170bf",
                        "5b265ded-244c-489c-bbdb-626d108c9344",
                        "193fa93b-5ecc-4adc-bf2c-ff2e5b2cb661"
                    ],
                    "failures": [
                        "de12dbf5-96d9-4c5c-909f-dd44014de9a2",
                        "37063110-9dfb-4a25-bad8-d9324cdacd9e",
                        "c8b3ca2b-2860-4543-aa7a-e3d76f396668",
                        "9d43f63c-47b6-4747-b48e-8b70d7674ff8",
                        "da0452a6-a2b2-4ab9-bc1f-df301a50c8b2",
                        "a4fc58a5-09c3-4596-95b4-c90bc2bfb1f9"
                    ],
                    "pending": [],
                    "skipped": [],
                    "duration": 14,
                    "root": false,
                    "rootEmpty": false,
                    "_timeout": 250000
                },
                {
                    "uuid": "7fa78d56-a0aa-47f0-ba83-393f34390dcc",
                    "title": "TaxableIncome_Line252_5--Input F54960 (restricted farm loss from prior year) to exceed amount at F14100 (net farming income). Software must not allow...  //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14 =$ 65,000, SP, T4 Box 14= $50,000, T2125. Is this a partnerships vehicle =Yes. Shared with spouse 50%-50%. Motor vehicle: Partnership =Yes. Bus KM =100, Total KM =100. Gas Expenses =$ 10,000, CCA Class =Class 10, Opening UCC =$ 10,000. o you have assets on which capital cost allowance (depreciation) can be claimed  =Yes. Class No =6. UCC at start of the year =$ 100,000)  ",
                    "fullFile": "E:\\Rita\\Taxtron\\WebTest\\my_work\\test_for_report_2020\\NETINC_2020\\tcTaxableIncome_Line252_5.js",
                    "file": "\\my_work\\test_for_report_2020\\NETINC_2020\\tcTaxableIncome_Line252_5.js",
                    "beforeHooks": [
                        {
                            "title": "\"before all\" hook",
                            "fullTitle": "TaxableIncome_Line252_5--Input F54960 (restricted farm loss from prior year) to exceed amount at F14100 (net farming income). Software must not allow...  //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14 =$ 65,000, SP, T4 Box 14= $50,000, T2125. Is this a partnerships vehicle =Yes. Shared with spouse 50%-50%. Motor vehicle: Partnership =Yes. Bus KM =100, Total KM =100. Gas Expenses =$ 10,000, CCA Class =Class 10, Opening UCC =$ 10,000. o you have assets on which capital cost allowance (depreciation) can be claimed  =Yes. Class No =6. UCC at start of the year =$ 100,000)   \"before all\" hook",
                            "timedOut": false,
                            "duration": 175447,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "driver = new Builder()\n    .withCapabilities(Capabilities.chrome().setAcceptInsecureCerts(true))\n    .build();\ndriver.manage().window().setRect({ width: 1366, height: 768 });\nawait login(driver, 'ritakumar@outlook.com', 'rishu12rashi');\nawait selectNewReturn(driver,province);\nawait switchToastOff(driver);\n    \nawait nextClick(driver);\nawait setInputById(driver, 'Firstnames0', 'king');\nawait setInputById(driver, 'Surname0', 'smith');\nawait selectDateById(driver, 'DOB0', '1968/10/10');\nawait setInputById(driver, 'SIN0', '100000009');\nawait selectComboById(driver, 'MaritalStatus0', 'Common-law');\nawait selectToggleById(driver, 'domchanged0', '0');\nawait selectToggleById(driver, 'IsLinkedReturn0', '1');\nawait nextClick(driver);\nawait addressExpandClick(driver, 'fullAdd');\nawait setInputById(driver, 'StreetNo0', '25');\nawait setInputById(driver, 'StreetName0', 'JANE ST');\nawait setInputById(driver, 'City0', 'ETOBICOKE');\nawait selectComboById(driver, 'ProvinceOfRes0', 'Manitoba');\nawait setInputById(driver, 'PCodeC0', 'R0H 1N1');\nawait selectToggleById(driver, 'quesFP0', '0');\nawait selectToggleById(driver, 'quesPrinResi0', '0');\nawait selectToggleById(driver, 'qCitizen0', '0');\nawait nextClick(driver);\nawait nextClick(driver);\nawait setInputById(driver, 'Firstnames0sp', 'jone');\nawait setInputById(driver, 'Surname0sp', 'smith');\nawait selectDateById(driver, 'DOB0sp', '1968/10/10');\nawait setInputById(driver, 'SIN0sp', '100000025');\nawait selectComboById(driver, 'Province0sp', 'British Columbia');\nawait nextClick(driver);\nawait selectTab(driver, 'Income');\nawait selectTab(driver, 'IncomeProfile');\nawait selectToggleById(driver, 'WorkedInYOR0tp', '1');\nawait clickDivById(driver, 'T40tp');\n\t\t    await selectToggleById(driver, 'SelfEmployed0tp', '1');\nawait nextClick(driver);\nawait selectToggleById(driver, 'WorkedInYOR0sp', '1');\nawait clickDivById(driver, 'T40sp');\nawait nextClick(driver);\nawait setInputById(driver, 'T4B140', '65000');\nawait selectComboById(driver, 'T4_Box100tp', 'ON');\nawait nextClick(driver);\nawait setInputById(driver, 'T4B140sp', '50000');\nawait selectComboById(driver, 'T4_Box100sp', 'ON');\nawait nextClick(driver);\nawait selectToggleById(driver, 'BPCIncome0tp', '1'); \nawait nextClick(driver);\nawait setInputById(driver, 'BusName0', 'ABC');\nawait setInputById(driver, 'BusRAN0', '100000009');\nawait selectComboById(driver, 'BusinessIncome0', 'Business');\nawait selectAgeDateById(driver, 'T2124_SFDStart0', Fed.TaxYear,'0','/01/25');\nawait selectAgeDateById(driver, 'T2124_SFDEnd0',  Fed.TaxYear,'0','/12/31');\nawait selectComboById(driver, 'BusSIC0', 'Dry pea and bean farming');\nawait setInputById(driver, 'BusCommodity0tp', 'Consultancy');\nawait selectToggleById(driver, 'Partnership0tp', '1');\nawait selectToggleById(driver, 'iSpartnershipWithSp0tp', '1');\nawait setInputById(driver, 'BusPSpShare0tp', '50');\nawait setInputById(driver, 'BusPartner0tp', '100000025');\nawait setInputById(driver, 'BusPTPShare0tp', '50');\nawait nextClick(driver);\nawait nextClick(driver);\nawait setInputById(driver, 'T2124_610', '1');\nawait setInputById(driver, 'BusGSTIncluded0tp', '2');\nawait setInputById(driver, 'BusReturns0tp', '2');\nawait setInputById(driver, 'T2125_QuickCollected0tp', '4');\nawait setInputById(driver, 'T2125_QuickRemitrate0tp', '5');\nawait setInputById(driver, 'BusReserves0tp', '6');\nawait setInputById(driver, 'BusOtherDE0tp', '7');\nawait setInputById(driver, 'Bus82000tp', '1');\nawait setInputById(driver, 'Bus82010tp', '2');\nawait setInputById(driver, 'Bus82450tp', '3');\nawait setInputById(driver, 'Bus82020tp', '4');\nawait setInputById(driver, 'BusOtherCosts0tp', '5');\nawait setInputById(driver, 'BusInventory0tp', '6');\nawait nextClick(driver);\nawait setInputById(driver, 'Bus82040tp', '1');\nawait setInputById(driver, 'BusMeals0tp', '2');\nawait setInputById(driver, 'Bus82050tp', '3');\nawait setInputById(driver, 'Bus82130tp', '4');\nawait setInputById(driver, 'Bus82140tp', '5');\nawait setInputById(driver, 'BusTaxes0tp', '6');\nawait setInputById(driver, 'Bus82190tp', '7');\nawait setInputById(driver, 'Bus82520tp', '8');\nawait setInputById(driver, 'Bus82200tp', '9');\nawait setInputById(driver, 'Bus82160tp', '10');\nawait setInputById(driver, 'Bus82220tp', '11');\nawait setInputById(driver, 'Bus82150tp', '12');\nawait setInputById(driver, 'Bus82230tp', '13');\nawait setInputById(driver, 'Bus82210tp', '14');\nawait setInputById(driver, 'Bus82240tp', '15');\nawait setInputById(driver, 'Bus82250tp', '16');\nawait setInputById(driver, 'Bus82120tp', '17');\nawait setInputById(driver, 'Bus82110tp', '18');\nawait setInputById(driver, 'BOtherExpenses0tp', '19');\nawait setInputById(driver, 'T2125_99740tp', '20');\nawait setInputById(driver, 'T2124_1060tp', '21');\nawait nextClick(driver);\nawait selectToggleById(driver, 'VehicleExpense0tp', '1');\nawait selectToggleById(driver, 'T2125SpAutoShare10tp', '1');\nawait selectToggleById(driver, 'T2125AutoShare10tp', '1');\nawait setInputById(driver, 'BusAutoKM10tp', '100');\nawait setInputById(driver, 'BusAutoKmTotal10tp', '100');\nawait setInputById(driver, 'BusAutoFuel10tp', '10000');\nawait selectToggleById(driver, 'T2124Auto_880tp', '1');\nawait setInputById(driver, 'autouccopening10tp', '10000');\nawait nextClick(driver);\nawait nextClick(driver);\nawait selectToggleById(driver, 'S8Q10tp', '1');\nawait selectComboById(driver, 'BusClass10tp', 'Class 6 - 10% Fences, frame, log, stucco on frame, galvanized iron, or corrugated metal buildings');\nawait setInputById(driver, 'BusCost10tp', '5000');\nawait addTabT2125_4Atrclick(driver);\nawait setInputById(driver, 'BusCost11tp', '6000');\nawait selectComboById(driver, 'BusClass11tp', ' Class 1 - 4% Most buildings you bought after 1987 ');\nawait addTabT2125_4Atrclick(driver);\nawait setInputById(driver, 'BusCost12tp', '7000');\nawait selectComboById(driver, 'BusClass12tp', 'Class 1.1 - 10% Eligible non-residential buildings acquired by a taxpayer after March 18, 2007, and used in Canada to manufacture or process goods for sale or lease');\nawait addTabT2125_4Atrclick(driver);\nawait setInputById(driver, 'BusCost13tp', '8000');\nawait selectComboById(driver, 'BusClass13tp', 'Class 1.2 - 6% Eligible non-residential buildings acquired by a taxpayer after March 18, 2007');\nawait addTabT2125_4Atrclick(driver);\nawait setInputById(driver, 'BusCost14tp', '9000');\nawait selectComboById(driver, 'BusClass14tp', 'Class 1.3 - 10% Eligible liquefaction activities in respect of the eligible liquefaction facility acquired after Feburary 19, 2015');\nawait addTabT2125_4Atrclick(driver);\nawait setInputById(driver, 'BusCost15tp', '10000');\nawait selectComboById(driver, 'BusClass15tp', 'Class 2 - 6% Electrical generating equipment, pipelines, and plant used in production of electric energy');\nawait addTabT2125_4Atrclick(driver);\nawait setInputById(driver, 'BusCost16tp', '55000');\nawait selectComboById(driver, 'BusClass16tp', 'Class 3 - 5% Most buildings acquired before 1988');\n           \n//await setInputById(driver, 'BusCost17tp', '7000');\n// await selectComboById(driver, 'BusClass17tp', 'Class 4 - 6% Railway or trolley bus systems');\n// await addTabT2125_4Atrclick(driver);\n// await setInputById(driver, 'BusCost18tp', '72000');\n// await selectComboById(driver, 'Class 5 - 10% Pulp mills acquired before 1962');\n await nextClick(driver);\nawait setInputById(driver, 'T2125_1_WebsitePageCount0tp', '10');\nawait setInputById(driver, 'T2125_1_WebpagesGross0tp', '.49');\nawait setInputById(driver, 'T2125_1URL0tp', 'INTERNETCONSULTANCY1@TAXTRON.CA');\nawait setInputById(driver, 'T2125_1URL1tp', 'INTERNETCONSULTANCY1@TAXTRON.CA');\nawait setInputById(driver, 'T2125_1URL2tp', 'INTERNETCONSULTANCY2@TAXTRON.CA');\nawait setInputById(driver, 'T2125_1URL3tp', 'INTERNETCONSULTANCY3@TAXTRON.CA');\nawait setInputById(driver, 'T2125_1URL4tp', 'INTERNETCONSULTANCY4@TAXTRON.CA');\nawait nextClick(driver);\nawait nextClick(driver);\nsavedForm = await getServerFile(driver);",
                            "err": {},
                            "uuid": "0c486fa1-5d3a-49e1-92d9-e432229c6a3c",
                            "parentUUID": "7fa78d56-a0aa-47f0-ba83-393f34390dcc",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "afterHooks": [],
                    "tests": [
                        {
                            "title": " F10100 should be  allowed with amount    allow.value ==65000",
                            "fullTitle": "TaxableIncome_Line252_5--Input F54960 (restricted farm loss from prior year) to exceed amount at F14100 (net farming income). Software must not allow...  //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14 =$ 65,000, SP, T4 Box 14= $50,000, T2125. Is this a partnerships vehicle =Yes. Shared with spouse 50%-50%. Motor vehicle: Partnership =Yes. Bus KM =100, Total KM =100. Gas Expenses =$ 10,000, CCA Class =Class 10, Opening UCC =$ 10,000. o you have assets on which capital cost allowance (depreciation) can be claimed  =Yes. Class No =6. UCC at start of the year =$ 100,000)    F10100 should be  allowed with amount    allow.value ==65000",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let employmentIncomeFromT4SlipsFeild = getFieldId('10100');\nlet employmentIncomeFromT4Slips = savedForm[  employmentIncomeFromT4SlipsFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ employmentIncomeFromT4Slips;\nassert.strictEqual(   employmentIncomeFromT4Slips, '65000', ' Feild should be built');",
                            "err": {},
                            "uuid": "64192479-b2d6-43a8-8714-84c96b56a6d8",
                            "parentUUID": "7fa78d56-a0aa-47f0-ba83-393f34390dcc",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F13500 should be  allowed with amount    allow.value ==-8854",
                            "fullTitle": "TaxableIncome_Line252_5--Input F54960 (restricted farm loss from prior year) to exceed amount at F14100 (net farming income). Software must not allow...  //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14 =$ 65,000, SP, T4 Box 14= $50,000, T2125. Is this a partnerships vehicle =Yes. Shared with spouse 50%-50%. Motor vehicle: Partnership =Yes. Bus KM =100, Total KM =100. Gas Expenses =$ 10,000, CCA Class =Class 10, Opening UCC =$ 10,000. o you have assets on which capital cost allowance (depreciation) can be claimed  =Yes. Class No =6. UCC at start of the year =$ 100,000)    F13500 should be  allowed with amount    allow.value ==-8854",
                            "timedOut": false,
                            "duration": 1,
                            "state": "failed",
                            "speed": null,
                            "pass": false,
                            "fail": true,
                            "pending": false,
                            "context": null,
                            "code": "let netFarmingIncomelossFeild = getFieldId('13500');\nlet netFarmingIncomeloss = savedForm[ netFarmingIncomelossFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ netFarmingIncomeloss;\nassert.strictEqual( netFarmingIncomeloss, '-11603', ' Feild should be built');",
                            "err": {
                                "message": "AssertionError:  Feild should be built",
                                "estack": "AssertionError [ERR_ASSERTION]:  Feild should be built\n    at Context.<anonymous> (my_work\\test_for_report_2020\\NETINC_2020\\tcTaxableIncome_Line252_5.js:177:20)\n    at processImmediate (internal/timers.js:456:21)",
                                "diff": "- -8854\n+ -11603\n"
                            },
                            "uuid": "8121ec8f-4382-444a-8540-9513b1fb004f",
                            "parentUUID": "7fa78d56-a0aa-47f0-ba83-393f34390dcc",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F8300 should be  allowed with amount    allow.value ==1",
                            "fullTitle": "TaxableIncome_Line252_5--Input F54960 (restricted farm loss from prior year) to exceed amount at F14100 (net farming income). Software must not allow...  //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14 =$ 65,000, SP, T4 Box 14= $50,000, T2125. Is this a partnerships vehicle =Yes. Shared with spouse 50%-50%. Motor vehicle: Partnership =Yes. Bus KM =100, Total KM =100. Gas Expenses =$ 10,000, CCA Class =Class 10, Opening UCC =$ 10,000. o you have assets on which capital cost allowance (depreciation) can be claimed  =Yes. Class No =6. UCC at start of the year =$ 100,000)    F8300 should be  allowed with amount    allow.value ==1",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let openingInventoryincludeRawmaterialsGoodsInProcessAndfinishedGoodsFeild = businessFieldId('8300');\nlet openingInventoryincludeRawmaterialsGoodsInProcessAndfinishedGoods = savedForm[ openingInventoryincludeRawmaterialsGoodsInProcessAndfinishedGoodsFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ openingInventoryincludeRawmaterialsGoodsInProcessAndfinishedGoods;\nassert.strictEqual(openingInventoryincludeRawmaterialsGoodsInProcessAndfinishedGoods, '1', ' Feild should be built');",
                            "err": {},
                            "uuid": "23d62ab3-6c99-4954-a1c8-8007465c52ad",
                            "parentUUID": "7fa78d56-a0aa-47f0-ba83-393f34390dcc",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F8320 should be  allowed with amount    allow.value ==2",
                            "fullTitle": "TaxableIncome_Line252_5--Input F54960 (restricted farm loss from prior year) to exceed amount at F14100 (net farming income). Software must not allow...  //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14 =$ 65,000, SP, T4 Box 14= $50,000, T2125. Is this a partnerships vehicle =Yes. Shared with spouse 50%-50%. Motor vehicle: Partnership =Yes. Bus KM =100, Total KM =100. Gas Expenses =$ 10,000, CCA Class =Class 10, Opening UCC =$ 10,000. o you have assets on which capital cost allowance (depreciation) can be claimed  =Yes. Class No =6. UCC at start of the year =$ 100,000)    F8320 should be  allowed with amount    allow.value ==2",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let purchasesDuringTheYearNetOfReturnsAllowancesAndDiscountsFeild = businessFieldId('8320');\nlet purchasesDuringTheYearNetOfReturnsAllowancesAndDiscounts = savedForm[purchasesDuringTheYearNetOfReturnsAllowancesAndDiscountsFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+purchasesDuringTheYearNetOfReturnsAllowancesAndDiscounts;\nassert.strictEqual(purchasesDuringTheYearNetOfReturnsAllowancesAndDiscounts, '2', ' Feild should be built');",
                            "err": {},
                            "uuid": "1575a2cd-a05e-4571-9e19-1ca6b507268a",
                            "parentUUID": "7fa78d56-a0aa-47f0-ba83-393f34390dcc",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F8340 should be  allowed with amount    allow.value ==3",
                            "fullTitle": "TaxableIncome_Line252_5--Input F54960 (restricted farm loss from prior year) to exceed amount at F14100 (net farming income). Software must not allow...  //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14 =$ 65,000, SP, T4 Box 14= $50,000, T2125. Is this a partnerships vehicle =Yes. Shared with spouse 50%-50%. Motor vehicle: Partnership =Yes. Bus KM =100, Total KM =100. Gas Expenses =$ 10,000, CCA Class =Class 10, Opening UCC =$ 10,000. o you have assets on which capital cost allowance (depreciation) can be claimed  =Yes. Class No =6. UCC at start of the year =$ 100,000)    F8340 should be  allowed with amount    allow.value ==3",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let directWageCostsFeild = businessFieldId('8340');\nlet directWageCosts = savedForm[ directWageCostsFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ directWageCosts;\nassert.strictEqual( directWageCosts, '3', ' Feild should be built');",
                            "err": {},
                            "uuid": "e50988ab-f6aa-438e-b11f-c215afb92128",
                            "parentUUID": "7fa78d56-a0aa-47f0-ba83-393f34390dcc",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F8360 should be  allowed with amount    allow.value ==4",
                            "fullTitle": "TaxableIncome_Line252_5--Input F54960 (restricted farm loss from prior year) to exceed amount at F14100 (net farming income). Software must not allow...  //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14 =$ 65,000, SP, T4 Box 14= $50,000, T2125. Is this a partnerships vehicle =Yes. Shared with spouse 50%-50%. Motor vehicle: Partnership =Yes. Bus KM =100, Total KM =100. Gas Expenses =$ 10,000, CCA Class =Class 10, Opening UCC =$ 10,000. o you have assets on which capital cost allowance (depreciation) can be claimed  =Yes. Class No =6. UCC at start of the year =$ 100,000)    F8360 should be  allowed with amount    allow.value ==4",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let subcontractsFeild = businessFieldId('8360');\nlet subcontracts = savedForm[ subcontractsFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+subcontracts;\nassert.strictEqual(subcontracts, '4', ' Feild should be built');",
                            "err": {},
                            "uuid": "2cec7214-6553-4801-9db8-fb206cda47ca",
                            "parentUUID": "7fa78d56-a0aa-47f0-ba83-393f34390dcc",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F8450 should be  allowed with amount    allow.value ==5",
                            "fullTitle": "TaxableIncome_Line252_5--Input F54960 (restricted farm loss from prior year) to exceed amount at F14100 (net farming income). Software must not allow...  //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14 =$ 65,000, SP, T4 Box 14= $50,000, T2125. Is this a partnerships vehicle =Yes. Shared with spouse 50%-50%. Motor vehicle: Partnership =Yes. Bus KM =100, Total KM =100. Gas Expenses =$ 10,000, CCA Class =Class 10, Opening UCC =$ 10,000. o you have assets on which capital cost allowance (depreciation) can be claimed  =Yes. Class No =6. UCC at start of the year =$ 100,000)    F8450 should be  allowed with amount    allow.value ==5",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let otherCostsFeild = businessFieldId('8450');\nlet otherCosts = savedForm[ otherCostsFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ otherCosts;\nassert.strictEqual( otherCosts, '5', ' Feild should be built');",
                            "err": {},
                            "uuid": "f4aa514c-0af6-4fed-a54a-7fd420e750ce",
                            "parentUUID": "7fa78d56-a0aa-47f0-ba83-393f34390dcc",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F8500 should be  allowed with amount    allow.value ==6",
                            "fullTitle": "TaxableIncome_Line252_5--Input F54960 (restricted farm loss from prior year) to exceed amount at F14100 (net farming income). Software must not allow...  //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14 =$ 65,000, SP, T4 Box 14= $50,000, T2125. Is this a partnerships vehicle =Yes. Shared with spouse 50%-50%. Motor vehicle: Partnership =Yes. Bus KM =100, Total KM =100. Gas Expenses =$ 10,000, CCA Class =Class 10, Opening UCC =$ 10,000. o you have assets on which capital cost allowance (depreciation) can be claimed  =Yes. Class No =6. UCC at start of the year =$ 100,000)    F8500 should be  allowed with amount    allow.value ==6",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let closingInventoryIncludeRawMaterialsGoodsInProcessAndFinishedGoodsFeild = businessFieldId('8500');\nlet  closingInventoryIncludeRawMaterialsGoodsInProcessAndFinishedGoods = savedForm[  closingInventoryIncludeRawMaterialsGoodsInProcessAndFinishedGoodsFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+  closingInventoryIncludeRawMaterialsGoodsInProcessAndFinishedGoods;\nassert.strictEqual(  closingInventoryIncludeRawMaterialsGoodsInProcessAndFinishedGoods, '6', ' Feild should be built');",
                            "err": {},
                            "uuid": "f363c439-549b-4cb1-9b00-4a70f32a3378",
                            "parentUUID": "7fa78d56-a0aa-47f0-ba83-393f34390dcc",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F8518 should be  allowed with amount    allow.value ==9",
                            "fullTitle": "TaxableIncome_Line252_5--Input F54960 (restricted farm loss from prior year) to exceed amount at F14100 (net farming income). Software must not allow...  //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14 =$ 65,000, SP, T4 Box 14= $50,000, T2125. Is this a partnerships vehicle =Yes. Shared with spouse 50%-50%. Motor vehicle: Partnership =Yes. Bus KM =100, Total KM =100. Gas Expenses =$ 10,000, CCA Class =Class 10, Opening UCC =$ 10,000. o you have assets on which capital cost allowance (depreciation) can be claimed  =Yes. Class No =6. UCC at start of the year =$ 100,000)    F8518 should be  allowed with amount    allow.value ==9",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let costOfGoodsSoldFeild = businessFieldId('8518');\nlet costOfGoodsSold = savedForm[ costOfGoodsSoldFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ costOfGoodsSold;\nassert.strictEqual( costOfGoodsSold, '9', ' Feild should be built');",
                            "err": {},
                            "uuid": "b22f528a-2abb-4345-94eb-3b66a9d2dcef",
                            "parentUUID": "7fa78d56-a0aa-47f0-ba83-393f34390dcc",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F8519 should be  allowed with amount    allow.value ==4",
                            "fullTitle": "TaxableIncome_Line252_5--Input F54960 (restricted farm loss from prior year) to exceed amount at F14100 (net farming income). Software must not allow...  //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14 =$ 65,000, SP, T4 Box 14= $50,000, T2125. Is this a partnerships vehicle =Yes. Shared with spouse 50%-50%. Motor vehicle: Partnership =Yes. Bus KM =100, Total KM =100. Gas Expenses =$ 10,000, CCA Class =Class 10, Opening UCC =$ 10,000. o you have assets on which capital cost allowance (depreciation) can be claimed  =Yes. Class No =6. UCC at start of the year =$ 100,000)    F8519 should be  allowed with amount    allow.value ==4",
                            "timedOut": false,
                            "duration": 1,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let grossProfitOrlossFeild = businessFieldId('8519');\nlet grossProfitOrloss = savedForm[ grossProfitOrlossFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ grossProfitOrloss;\nassert.strictEqual( grossProfitOrloss, '4', ' Feild should be built');",
                            "err": {},
                            "uuid": "33fef1b9-2463-4160-841a-1e9d4a5a1c10",
                            "parentUUID": "7fa78d56-a0aa-47f0-ba83-393f34390dcc",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F8521 should be  allowed with amount    allow.value ==1",
                            "fullTitle": "TaxableIncome_Line252_5--Input F54960 (restricted farm loss from prior year) to exceed amount at F14100 (net farming income). Software must not allow...  //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14 =$ 65,000, SP, T4 Box 14= $50,000, T2125. Is this a partnerships vehicle =Yes. Shared with spouse 50%-50%. Motor vehicle: Partnership =Yes. Bus KM =100, Total KM =100. Gas Expenses =$ 10,000, CCA Class =Class 10, Opening UCC =$ 10,000. o you have assets on which capital cost allowance (depreciation) can be claimed  =Yes. Class No =6. UCC at start of the year =$ 100,000)    F8521 should be  allowed with amount    allow.value ==1",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let advertisingFeild = businessFieldId('8521');\nlet  advertising = savedForm[  advertisingFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+  advertising;\nassert.strictEqual(  advertising, '1', ' Feild should be built');",
                            "err": {},
                            "uuid": "97dfdf16-c9b9-4202-b3c7-7aa7cac3c456",
                            "parentUUID": "7fa78d56-a0aa-47f0-ba83-393f34390dcc",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F8523 should be  allowed with amount    allow.value ==1",
                            "fullTitle": "TaxableIncome_Line252_5--Input F54960 (restricted farm loss from prior year) to exceed amount at F14100 (net farming income). Software must not allow...  //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14 =$ 65,000, SP, T4 Box 14= $50,000, T2125. Is this a partnerships vehicle =Yes. Shared with spouse 50%-50%. Motor vehicle: Partnership =Yes. Bus KM =100, Total KM =100. Gas Expenses =$ 10,000, CCA Class =Class 10, Opening UCC =$ 10,000. o you have assets on which capital cost allowance (depreciation) can be claimed  =Yes. Class No =6. UCC at start of the year =$ 100,000)    F8523 should be  allowed with amount    allow.value ==1",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let mealsAndEntertainmentFeild = businessFieldId('8523');\nlet mealsAndEntertainment = savedForm[ mealsAndEntertainmentFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ mealsAndEntertainment;\nassert.strictEqual(mealsAndEntertainment, '1', ' Feild should be built');",
                            "err": {},
                            "uuid": "96047a8d-a918-4ec4-b2ea-294918abea1a",
                            "parentUUID": "7fa78d56-a0aa-47f0-ba83-393f34390dcc",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F8590 should be  allowed with amount    allow.value ==3",
                            "fullTitle": "TaxableIncome_Line252_5--Input F54960 (restricted farm loss from prior year) to exceed amount at F14100 (net farming income). Software must not allow...  //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14 =$ 65,000, SP, T4 Box 14= $50,000, T2125. Is this a partnerships vehicle =Yes. Shared with spouse 50%-50%. Motor vehicle: Partnership =Yes. Bus KM =100, Total KM =100. Gas Expenses =$ 10,000, CCA Class =Class 10, Opening UCC =$ 10,000. o you have assets on which capital cost allowance (depreciation) can be claimed  =Yes. Class No =6. UCC at start of the year =$ 100,000)    F8590 should be  allowed with amount    allow.value ==3",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let badDebtsFeild = businessFieldId('8590');\nlet badDebts = savedForm[ badDebtsFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ badDebts;\nassert.strictEqual( badDebts, '3', ' Feild should be built');",
                            "err": {},
                            "uuid": "83f90342-df1f-459e-95be-74b3454118bb",
                            "parentUUID": "7fa78d56-a0aa-47f0-ba83-393f34390dcc",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F8690 should be  allowed with amount    allow.value ==4",
                            "fullTitle": "TaxableIncome_Line252_5--Input F54960 (restricted farm loss from prior year) to exceed amount at F14100 (net farming income). Software must not allow...  //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14 =$ 65,000, SP, T4 Box 14= $50,000, T2125. Is this a partnerships vehicle =Yes. Shared with spouse 50%-50%. Motor vehicle: Partnership =Yes. Bus KM =100, Total KM =100. Gas Expenses =$ 10,000, CCA Class =Class 10, Opening UCC =$ 10,000. o you have assets on which capital cost allowance (depreciation) can be claimed  =Yes. Class No =6. UCC at start of the year =$ 100,000)    F8690 should be  allowed with amount    allow.value ==4",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let insuranceFeild = businessFieldId('8690');\nlet insurance = savedForm[ insuranceFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ insurance;\nassert.strictEqual( insurance, '4', ' Feild should be built');",
                            "err": {},
                            "uuid": "024fe777-2ce9-42eb-9f88-ca0ab4c986d6",
                            "parentUUID": "7fa78d56-a0aa-47f0-ba83-393f34390dcc",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F8710 should be  allowed with amount    allow.value ==5",
                            "fullTitle": "TaxableIncome_Line252_5--Input F54960 (restricted farm loss from prior year) to exceed amount at F14100 (net farming income). Software must not allow...  //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14 =$ 65,000, SP, T4 Box 14= $50,000, T2125. Is this a partnerships vehicle =Yes. Shared with spouse 50%-50%. Motor vehicle: Partnership =Yes. Bus KM =100, Total KM =100. Gas Expenses =$ 10,000, CCA Class =Class 10, Opening UCC =$ 10,000. o you have assets on which capital cost allowance (depreciation) can be claimed  =Yes. Class No =6. UCC at start of the year =$ 100,000)    F8710 should be  allowed with amount    allow.value ==5",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let interestAndBankChargesFeild = businessFieldId('8710');\nlet interestAndBankCharges = savedForm[ interestAndBankChargesFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ interestAndBankCharges;\nassert.strictEqual( interestAndBankCharges, '5', ' Feild should be built');",
                            "err": {},
                            "uuid": "87907fc3-fa53-4b82-8e9a-90b45ce7d89c",
                            "parentUUID": "7fa78d56-a0aa-47f0-ba83-393f34390dcc",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F8760 should be  allowed with amount    allow.value ==6",
                            "fullTitle": "TaxableIncome_Line252_5--Input F54960 (restricted farm loss from prior year) to exceed amount at F14100 (net farming income). Software must not allow...  //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14 =$ 65,000, SP, T4 Box 14= $50,000, T2125. Is this a partnerships vehicle =Yes. Shared with spouse 50%-50%. Motor vehicle: Partnership =Yes. Bus KM =100, Total KM =100. Gas Expenses =$ 10,000, CCA Class =Class 10, Opening UCC =$ 10,000. o you have assets on which capital cost allowance (depreciation) can be claimed  =Yes. Class No =6. UCC at start of the year =$ 100,000)    F8760 should be  allowed with amount    allow.value ==6",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let businessTaxeslicencesAndMembershipsFeild = businessFieldId('8760');\nlet businessTaxeslicencesAndMemberships = savedForm[ businessTaxeslicencesAndMembershipsFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ businessTaxeslicencesAndMemberships;\nassert.strictEqual( businessTaxeslicencesAndMemberships, '6', ' Feild should be built');",
                            "err": {},
                            "uuid": "6763f40d-83bd-427e-9dbf-e16c51a3b66f",
                            "parentUUID": "7fa78d56-a0aa-47f0-ba83-393f34390dcc",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F8810 should be  allowed with amount    allow.value ==7",
                            "fullTitle": "TaxableIncome_Line252_5--Input F54960 (restricted farm loss from prior year) to exceed amount at F14100 (net farming income). Software must not allow...  //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14 =$ 65,000, SP, T4 Box 14= $50,000, T2125. Is this a partnerships vehicle =Yes. Shared with spouse 50%-50%. Motor vehicle: Partnership =Yes. Bus KM =100, Total KM =100. Gas Expenses =$ 10,000, CCA Class =Class 10, Opening UCC =$ 10,000. o you have assets on which capital cost allowance (depreciation) can be claimed  =Yes. Class No =6. UCC at start of the year =$ 100,000)    F8810 should be  allowed with amount    allow.value ==7",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let officeExpensesFeild = businessFieldId('8810');\nlet officeExpenses = savedForm[officeExpensesFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ officeExpenses;\nassert.strictEqual( officeExpenses, '7', ' Feild should be built');",
                            "err": {},
                            "uuid": "80f711ca-45ac-4e85-8300-c1d95b600144",
                            "parentUUID": "7fa78d56-a0aa-47f0-ba83-393f34390dcc",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F8811 should be  allowed with amount    allow.value ==8",
                            "fullTitle": "TaxableIncome_Line252_5--Input F54960 (restricted farm loss from prior year) to exceed amount at F14100 (net farming income). Software must not allow...  //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14 =$ 65,000, SP, T4 Box 14= $50,000, T2125. Is this a partnerships vehicle =Yes. Shared with spouse 50%-50%. Motor vehicle: Partnership =Yes. Bus KM =100, Total KM =100. Gas Expenses =$ 10,000, CCA Class =Class 10, Opening UCC =$ 10,000. o you have assets on which capital cost allowance (depreciation) can be claimed  =Yes. Class No =6. UCC at start of the year =$ 100,000)    F8811 should be  allowed with amount    allow.value ==8",
                            "timedOut": false,
                            "duration": 1,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let officeStationeryAndSuppliesFeild = businessFieldId('8811');\nlet officeStationeryAndSupplies = savedForm[ officeStationeryAndSuppliesFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ officeStationeryAndSupplies;\nassert.strictEqual( officeStationeryAndSupplies, '8', ' Feild should be built');",
                            "err": {},
                            "uuid": "f12c7654-43d3-45be-b6dc-1e65e55d2c66",
                            "parentUUID": "7fa78d56-a0aa-47f0-ba83-393f34390dcc",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F8860 should be  allowed with amount    allow.value ==9",
                            "fullTitle": "TaxableIncome_Line252_5--Input F54960 (restricted farm loss from prior year) to exceed amount at F14100 (net farming income). Software must not allow...  //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14 =$ 65,000, SP, T4 Box 14= $50,000, T2125. Is this a partnerships vehicle =Yes. Shared with spouse 50%-50%. Motor vehicle: Partnership =Yes. Bus KM =100, Total KM =100. Gas Expenses =$ 10,000, CCA Class =Class 10, Opening UCC =$ 10,000. o you have assets on which capital cost allowance (depreciation) can be claimed  =Yes. Class No =6. UCC at start of the year =$ 100,000)    F8860 should be  allowed with amount    allow.value ==9",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let professionalFeesIncludeslegalAndAccountingFeesFeild = businessFieldId('8860');\nlet professionalFeesIncludeslegalAndAccountingFees = savedForm[ professionalFeesIncludeslegalAndAccountingFeesFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ professionalFeesIncludeslegalAndAccountingFees;\nassert.strictEqual( professionalFeesIncludeslegalAndAccountingFees, '9', ' Feild should be built');",
                            "err": {},
                            "uuid": "b170b460-af1c-43eb-be03-9b163b072934",
                            "parentUUID": "7fa78d56-a0aa-47f0-ba83-393f34390dcc",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F8871 should be  allowed with amount    allow.value ==10",
                            "fullTitle": "TaxableIncome_Line252_5--Input F54960 (restricted farm loss from prior year) to exceed amount at F14100 (net farming income). Software must not allow...  //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14 =$ 65,000, SP, T4 Box 14= $50,000, T2125. Is this a partnerships vehicle =Yes. Shared with spouse 50%-50%. Motor vehicle: Partnership =Yes. Bus KM =100, Total KM =100. Gas Expenses =$ 10,000, CCA Class =Class 10, Opening UCC =$ 10,000. o you have assets on which capital cost allowance (depreciation) can be claimed  =Yes. Class No =6. UCC at start of the year =$ 100,000)    F8871 should be  allowed with amount    allow.value ==10",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let managementAndAdministrationFeesFeild = businessFieldId('8871');\nlet managementAndAdministrationFees = savedForm[ managementAndAdministrationFeesFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ managementAndAdministrationFees;\nassert.strictEqual( managementAndAdministrationFees, '10', ' Feild should be built');",
                            "err": {},
                            "uuid": "cadcc8cb-9820-465a-8f52-d7b5599687d9",
                            "parentUUID": "7fa78d56-a0aa-47f0-ba83-393f34390dcc",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F8910 should be  allowed with amount    allow.value ==11",
                            "fullTitle": "TaxableIncome_Line252_5--Input F54960 (restricted farm loss from prior year) to exceed amount at F14100 (net farming income). Software must not allow...  //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14 =$ 65,000, SP, T4 Box 14= $50,000, T2125. Is this a partnerships vehicle =Yes. Shared with spouse 50%-50%. Motor vehicle: Partnership =Yes. Bus KM =100, Total KM =100. Gas Expenses =$ 10,000, CCA Class =Class 10, Opening UCC =$ 10,000. o you have assets on which capital cost allowance (depreciation) can be claimed  =Yes. Class No =6. UCC at start of the year =$ 100,000)    F8910 should be  allowed with amount    allow.value ==11",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let rentFeild = businessFieldId('8910');\nlet rent = savedForm[ rentFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ rent;\nassert.strictEqual(rent, '11', ' Feild should be built');",
                            "err": {},
                            "uuid": "3303f082-805c-4f1b-a5b1-8a07aaf1df6d",
                            "parentUUID": "7fa78d56-a0aa-47f0-ba83-393f34390dcc",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F8960 should be  allowed with amount    allow.value ==12",
                            "fullTitle": "TaxableIncome_Line252_5--Input F54960 (restricted farm loss from prior year) to exceed amount at F14100 (net farming income). Software must not allow...  //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14 =$ 65,000, SP, T4 Box 14= $50,000, T2125. Is this a partnerships vehicle =Yes. Shared with spouse 50%-50%. Motor vehicle: Partnership =Yes. Bus KM =100, Total KM =100. Gas Expenses =$ 10,000, CCA Class =Class 10, Opening UCC =$ 10,000. o you have assets on which capital cost allowance (depreciation) can be claimed  =Yes. Class No =6. UCC at start of the year =$ 100,000)    F8960 should be  allowed with amount    allow.value ==12",
                            "timedOut": false,
                            "duration": 1,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let repairsAndMaintenanceFeild = businessFieldId('8960');\nlet repairsAndMaintenance = savedForm[ repairsAndMaintenanceFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ repairsAndMaintenance;\nassert.strictEqual( repairsAndMaintenance, '12', ' Feild should be built');",
                            "err": {},
                            "uuid": "a0b777bc-0c5b-498a-bdcc-346dada9aa5f",
                            "parentUUID": "7fa78d56-a0aa-47f0-ba83-393f34390dcc",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F9060 should be  allowed with amount    allow.value ==13",
                            "fullTitle": "TaxableIncome_Line252_5--Input F54960 (restricted farm loss from prior year) to exceed amount at F14100 (net farming income). Software must not allow...  //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14 =$ 65,000, SP, T4 Box 14= $50,000, T2125. Is this a partnerships vehicle =Yes. Shared with spouse 50%-50%. Motor vehicle: Partnership =Yes. Bus KM =100, Total KM =100. Gas Expenses =$ 10,000, CCA Class =Class 10, Opening UCC =$ 10,000. o you have assets on which capital cost allowance (depreciation) can be claimed  =Yes. Class No =6. UCC at start of the year =$ 100,000)    F9060 should be  allowed with amount    allow.value ==13",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let salariesWagesAndBenefitsIncludingEmployersContributionsFeild = businessFieldId('9060');\nlet salariesWagesAndBenefitsIncludingEmployersContributions = savedForm[ salariesWagesAndBenefitsIncludingEmployersContributionsFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ salariesWagesAndBenefitsIncludingEmployersContributions;\nassert.strictEqual( salariesWagesAndBenefitsIncludingEmployersContributions, '13', ' Feild should be built');",
                            "err": {},
                            "uuid": "90133f93-052c-4616-ba12-0503ede8bd74",
                            "parentUUID": "7fa78d56-a0aa-47f0-ba83-393f34390dcc",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F9180 should be  allowed with amount    allow.value ==14",
                            "fullTitle": "TaxableIncome_Line252_5--Input F54960 (restricted farm loss from prior year) to exceed amount at F14100 (net farming income). Software must not allow...  //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14 =$ 65,000, SP, T4 Box 14= $50,000, T2125. Is this a partnerships vehicle =Yes. Shared with spouse 50%-50%. Motor vehicle: Partnership =Yes. Bus KM =100, Total KM =100. Gas Expenses =$ 10,000, CCA Class =Class 10, Opening UCC =$ 10,000. o you have assets on which capital cost allowance (depreciation) can be claimed  =Yes. Class No =6. UCC at start of the year =$ 100,000)    F9180 should be  allowed with amount    allow.value ==14",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let propertyTaxesFeild = businessFieldId('9180');\nlet propertyTaxes = savedForm[ propertyTaxesFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ propertyTaxes;\nassert.strictEqual( propertyTaxes, '14', ' Feild should be built');",
                            "err": {},
                            "uuid": "7ce4a871-4777-4694-b44e-d74e05c31c76",
                            "parentUUID": "7fa78d56-a0aa-47f0-ba83-393f34390dcc",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F9200 should be  allowed with amount    allow.value ==15",
                            "fullTitle": "TaxableIncome_Line252_5--Input F54960 (restricted farm loss from prior year) to exceed amount at F14100 (net farming income). Software must not allow...  //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14 =$ 65,000, SP, T4 Box 14= $50,000, T2125. Is this a partnerships vehicle =Yes. Shared with spouse 50%-50%. Motor vehicle: Partnership =Yes. Bus KM =100, Total KM =100. Gas Expenses =$ 10,000, CCA Class =Class 10, Opening UCC =$ 10,000. o you have assets on which capital cost allowance (depreciation) can be claimed  =Yes. Class No =6. UCC at start of the year =$ 100,000)    F9200 should be  allowed with amount    allow.value ==15",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let travelExpensesFeild = businessFieldId('9200');\nlet  travelExpenses = savedForm[  travelExpensesFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+  travelExpenses;\nassert.strictEqual(  travelExpenses, '15', ' Feild should be built');",
                            "err": {},
                            "uuid": "5624510a-8ad4-4aac-b207-9e2e019123dc",
                            "parentUUID": "7fa78d56-a0aa-47f0-ba83-393f34390dcc",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F9220 should be  allowed with amount    allow.value ==16",
                            "fullTitle": "TaxableIncome_Line252_5--Input F54960 (restricted farm loss from prior year) to exceed amount at F14100 (net farming income). Software must not allow...  //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14 =$ 65,000, SP, T4 Box 14= $50,000, T2125. Is this a partnerships vehicle =Yes. Shared with spouse 50%-50%. Motor vehicle: Partnership =Yes. Bus KM =100, Total KM =100. Gas Expenses =$ 10,000, CCA Class =Class 10, Opening UCC =$ 10,000. o you have assets on which capital cost allowance (depreciation) can be claimed  =Yes. Class No =6. UCC at start of the year =$ 100,000)    F9220 should be  allowed with amount    allow.value ==16",
                            "timedOut": false,
                            "duration": 1,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let utilitiesFeild = businessFieldId('9220');\nlet utilities = savedForm[ utilitiesFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ utilities;\nassert.strictEqual( utilities, '16', ' Feild should be built');",
                            "err": {},
                            "uuid": "e1e4dbef-d701-4ae9-881a-b872a4d775bd",
                            "parentUUID": "7fa78d56-a0aa-47f0-ba83-393f34390dcc",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F9224 should be  allowed with amount    allow.value ==17",
                            "fullTitle": "TaxableIncome_Line252_5--Input F54960 (restricted farm loss from prior year) to exceed amount at F14100 (net farming income). Software must not allow...  //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14 =$ 65,000, SP, T4 Box 14= $50,000, T2125. Is this a partnerships vehicle =Yes. Shared with spouse 50%-50%. Motor vehicle: Partnership =Yes. Bus KM =100, Total KM =100. Gas Expenses =$ 10,000, CCA Class =Class 10, Opening UCC =$ 10,000. o you have assets on which capital cost allowance (depreciation) can be claimed  =Yes. Class No =6. UCC at start of the year =$ 100,000)    F9224 should be  allowed with amount    allow.value ==17",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let fuelCostsExceptForMotorVehiclesFeild = businessFieldId('9224');\nlet fuelCostsExceptForMotorVehicles = savedForm[ fuelCostsExceptForMotorVehiclesFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ fuelCostsExceptForMotorVehicles;\nassert.strictEqual( fuelCostsExceptForMotorVehicles, '17', ' Feild should be built');",
                            "err": {},
                            "uuid": "50577df5-8bfd-416c-ae05-7d2ae5870ffe",
                            "parentUUID": "7fa78d56-a0aa-47f0-ba83-393f34390dcc",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F9275 should be  allowed with amount    allow.value ==18",
                            "fullTitle": "TaxableIncome_Line252_5--Input F54960 (restricted farm loss from prior year) to exceed amount at F14100 (net farming income). Software must not allow...  //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14 =$ 65,000, SP, T4 Box 14= $50,000, T2125. Is this a partnerships vehicle =Yes. Shared with spouse 50%-50%. Motor vehicle: Partnership =Yes. Bus KM =100, Total KM =100. Gas Expenses =$ 10,000, CCA Class =Class 10, Opening UCC =$ 10,000. o you have assets on which capital cost allowance (depreciation) can be claimed  =Yes. Class No =6. UCC at start of the year =$ 100,000)    F9275 should be  allowed with amount    allow.value ==18",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let deliveryFreightAndExpressFeild = businessFieldId('9275');\nlet deliveryFreightAndExpress = savedForm[ deliveryFreightAndExpressFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ deliveryFreightAndExpress;\nassert.strictEqual( deliveryFreightAndExpress, '18', ' Feild should be built');",
                            "err": {},
                            "uuid": "1b959a4e-2069-44a9-ac85-ddbc2782f482",
                            "parentUUID": "7fa78d56-a0aa-47f0-ba83-393f34390dcc",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F9281 should be  allowed with amount    allow.value ==10000",
                            "fullTitle": "TaxableIncome_Line252_5--Input F54960 (restricted farm loss from prior year) to exceed amount at F14100 (net farming income). Software must not allow...  //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14 =$ 65,000, SP, T4 Box 14= $50,000, T2125. Is this a partnerships vehicle =Yes. Shared with spouse 50%-50%. Motor vehicle: Partnership =Yes. Bus KM =100, Total KM =100. Gas Expenses =$ 10,000, CCA Class =Class 10, Opening UCC =$ 10,000. o you have assets on which capital cost allowance (depreciation) can be claimed  =Yes. Class No =6. UCC at start of the year =$ 100,000)    F9281 should be  allowed with amount    allow.value ==10000",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let motorVehicleExpensesNotIncludingCCAFeild = businessFieldId('9281');\nlet motorVehicleExpensesNotIncludingCCA = savedForm[ motorVehicleExpensesNotIncludingCCAFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ motorVehicleExpensesNotIncludingCCA;\nassert.strictEqual(motorVehicleExpensesNotIncludingCCA, '10000', ' Feild should be built');",
                            "err": {},
                            "uuid": "80653fb5-bee7-4479-a156-5471788bee24",
                            "parentUUID": "7fa78d56-a0aa-47f0-ba83-393f34390dcc",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F9936 should be  allowed with amount    allow.value ==7543",
                            "fullTitle": "TaxableIncome_Line252_5--Input F54960 (restricted farm loss from prior year) to exceed amount at F14100 (net farming income). Software must not allow...  //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14 =$ 65,000, SP, T4 Box 14= $50,000, T2125. Is this a partnerships vehicle =Yes. Shared with spouse 50%-50%. Motor vehicle: Partnership =Yes. Bus KM =100, Total KM =100. Gas Expenses =$ 10,000, CCA Class =Class 10, Opening UCC =$ 10,000. o you have assets on which capital cost allowance (depreciation) can be claimed  =Yes. Class No =6. UCC at start of the year =$ 100,000)    F9936 should be  allowed with amount    allow.value ==7543",
                            "timedOut": false,
                            "duration": 1,
                            "state": "failed",
                            "speed": null,
                            "pass": false,
                            "fail": true,
                            "pending": false,
                            "context": null,
                            "code": "let capitalCostAllowanceFeild = businessFieldId('9936');\nlet  capitalCostAllowance = savedForm[  capitalCostAllowanceFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+  capitalCostAllowance;\nassert.strictEqual(  capitalCostAllowance, '10000', ' Feild should be built');",
                            "err": {
                                "message": "AssertionError:  Feild should be built",
                                "estack": "AssertionError [ERR_ASSERTION]:  Feild should be built\n    at Context.<anonymous> (my_work\\test_for_report_2020\\NETINC_2020\\tcTaxableIncome_Line252_5.js:346:20)\n    at processImmediate (internal/timers.js:456:21)",
                                "diff": "- 7543\n+ 10000\n"
                            },
                            "uuid": "248c91fd-3b88-4a65-969c-e6da680ab1bb",
                            "parentUUID": "7fa78d56-a0aa-47f0-ba83-393f34390dcc",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F9270 should be  allowed with amount    allow.value ==40",
                            "fullTitle": "TaxableIncome_Line252_5--Input F54960 (restricted farm loss from prior year) to exceed amount at F14100 (net farming income). Software must not allow...  //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14 =$ 65,000, SP, T4 Box 14= $50,000, T2125. Is this a partnerships vehicle =Yes. Shared with spouse 50%-50%. Motor vehicle: Partnership =Yes. Bus KM =100, Total KM =100. Gas Expenses =$ 10,000, CCA Class =Class 10, Opening UCC =$ 10,000. o you have assets on which capital cost allowance (depreciation) can be claimed  =Yes. Class No =6. UCC at start of the year =$ 100,000)    F9270 should be  allowed with amount    allow.value ==40",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let otherExpensesFeild = businessFieldId('9270');\nlet otherExpenses = savedForm[ otherExpensesFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ otherExpenses;\nassert.strictEqual( otherExpenses, '40', ' Feild should be built');",
                            "err": {},
                            "uuid": "9518b027-7ca6-459c-aa23-ff38c425c3ac",
                            "parentUUID": "7fa78d56-a0aa-47f0-ba83-393f34390dcc",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F9368 should be  allowed with amount    allow.value ==17753",
                            "fullTitle": "TaxableIncome_Line252_5--Input F54960 (restricted farm loss from prior year) to exceed amount at F14100 (net farming income). Software must not allow...  //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14 =$ 65,000, SP, T4 Box 14= $50,000, T2125. Is this a partnerships vehicle =Yes. Shared with spouse 50%-50%. Motor vehicle: Partnership =Yes. Bus KM =100, Total KM =100. Gas Expenses =$ 10,000, CCA Class =Class 10, Opening UCC =$ 10,000. o you have assets on which capital cost allowance (depreciation) can be claimed  =Yes. Class No =6. UCC at start of the year =$ 100,000)    F9368 should be  allowed with amount    allow.value ==17753",
                            "timedOut": false,
                            "duration": 0,
                            "state": "failed",
                            "speed": null,
                            "pass": false,
                            "fail": true,
                            "pending": false,
                            "context": null,
                            "code": "let totalExpensesFeild = businessFieldId('9368');\nlet totalExpenses = savedForm[ totalExpensesFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+totalExpenses;\nassert.strictEqual( totalExpenses, '20210', ' Feild should be built');",
                            "err": {
                                "message": "AssertionError:  Feild should be built",
                                "estack": "AssertionError [ERR_ASSERTION]:  Feild should be built\n    at Context.<anonymous> (my_work\\test_for_report_2020\\NETINC_2020\\tcTaxableIncome_Line252_5.js:358:20)\n    at processImmediate (internal/timers.js:456:21)",
                                "diff": "- 17753\n+ 20210\n"
                            },
                            "uuid": "a9e1eeb7-ee48-4eee-aaef-7b6a704684cd",
                            "parentUUID": "7fa78d56-a0aa-47f0-ba83-393f34390dcc",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F9369 should be  allowed with amount    allow.value ==-17749",
                            "fullTitle": "TaxableIncome_Line252_5--Input F54960 (restricted farm loss from prior year) to exceed amount at F14100 (net farming income). Software must not allow...  //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14 =$ 65,000, SP, T4 Box 14= $50,000, T2125. Is this a partnerships vehicle =Yes. Shared with spouse 50%-50%. Motor vehicle: Partnership =Yes. Bus KM =100, Total KM =100. Gas Expenses =$ 10,000, CCA Class =Class 10, Opening UCC =$ 10,000. o you have assets on which capital cost allowance (depreciation) can be claimed  =Yes. Class No =6. UCC at start of the year =$ 100,000)    F9369 should be  allowed with amount    allow.value ==-17749",
                            "timedOut": false,
                            "duration": 0,
                            "state": "failed",
                            "speed": null,
                            "pass": false,
                            "fail": true,
                            "pending": false,
                            "context": null,
                            "code": "let netIncomelossBeforeAdjustmentsFeild = businessFieldId('9369');\nlet netIncomelossBeforeAdjustments = savedForm[ netIncomelossBeforeAdjustmentsFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ netIncomelossBeforeAdjustments;\nassert.strictEqual(netIncomelossBeforeAdjustments, '-20206', ' Feild should be built');",
                            "err": {
                                "message": "AssertionError:  Feild should be built",
                                "estack": "AssertionError [ERR_ASSERTION]:  Feild should be built\n    at Context.<anonymous> (my_work\\test_for_report_2020\\NETINC_2020\\tcTaxableIncome_Line252_5.js:364:20)\n    at processImmediate (internal/timers.js:456:21)",
                                "diff": "- -17749\n+ -20206\n"
                            },
                            "uuid": "7aa4460e-74c9-4903-bce6-d54f97493688",
                            "parentUUID": "7fa78d56-a0aa-47f0-ba83-393f34390dcc",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F9974 should be  allowed with amount    allow.value ==20",
                            "fullTitle": "TaxableIncome_Line252_5--Input F54960 (restricted farm loss from prior year) to exceed amount at F14100 (net farming income). Software must not allow...  //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14 =$ 65,000, SP, T4 Box 14= $50,000, T2125. Is this a partnerships vehicle =Yes. Shared with spouse 50%-50%. Motor vehicle: Partnership =Yes. Bus KM =100, Total KM =100. Gas Expenses =$ 10,000, CCA Class =Class 10, Opening UCC =$ 10,000. o you have assets on which capital cost allowance (depreciation) can be claimed  =Yes. Class No =6. UCC at start of the year =$ 100,000)    F9974 should be  allowed with amount    allow.value ==20",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let gSTHSTRebateForPartnersReceivedInTheYearFeild = businessFieldId('9974');\nlet gSTHSTRebateForPartnersReceivedInTheYear = savedForm[ gSTHSTRebateForPartnersReceivedInTheYearFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ gSTHSTRebateForPartnersReceivedInTheYear;\nassert.strictEqual( gSTHSTRebateForPartnersReceivedInTheYear, '20', ' Feild should be built');",
                            "err": {},
                            "uuid": "3916947d-8afa-4673-8261-c99673ed7401",
                            "parentUUID": "7fa78d56-a0aa-47f0-ba83-393f34390dcc",
                            "isHook": false,
                            "skipped": false
                        }
                    ],
                    "suites": [],
                    "passes": [
                        "64192479-b2d6-43a8-8714-84c96b56a6d8",
                        "23d62ab3-6c99-4954-a1c8-8007465c52ad",
                        "1575a2cd-a05e-4571-9e19-1ca6b507268a",
                        "e50988ab-f6aa-438e-b11f-c215afb92128",
                        "2cec7214-6553-4801-9db8-fb206cda47ca",
                        "f4aa514c-0af6-4fed-a54a-7fd420e750ce",
                        "f363c439-549b-4cb1-9b00-4a70f32a3378",
                        "b22f528a-2abb-4345-94eb-3b66a9d2dcef",
                        "33fef1b9-2463-4160-841a-1e9d4a5a1c10",
                        "97dfdf16-c9b9-4202-b3c7-7aa7cac3c456",
                        "96047a8d-a918-4ec4-b2ea-294918abea1a",
                        "83f90342-df1f-459e-95be-74b3454118bb",
                        "024fe777-2ce9-42eb-9f88-ca0ab4c986d6",
                        "87907fc3-fa53-4b82-8e9a-90b45ce7d89c",
                        "6763f40d-83bd-427e-9dbf-e16c51a3b66f",
                        "80f711ca-45ac-4e85-8300-c1d95b600144",
                        "f12c7654-43d3-45be-b6dc-1e65e55d2c66",
                        "b170b460-af1c-43eb-be03-9b163b072934",
                        "cadcc8cb-9820-465a-8f52-d7b5599687d9",
                        "3303f082-805c-4f1b-a5b1-8a07aaf1df6d",
                        "a0b777bc-0c5b-498a-bdcc-346dada9aa5f",
                        "90133f93-052c-4616-ba12-0503ede8bd74",
                        "7ce4a871-4777-4694-b44e-d74e05c31c76",
                        "5624510a-8ad4-4aac-b207-9e2e019123dc",
                        "e1e4dbef-d701-4ae9-881a-b872a4d775bd",
                        "50577df5-8bfd-416c-ae05-7d2ae5870ffe",
                        "1b959a4e-2069-44a9-ac85-ddbc2782f482",
                        "80653fb5-bee7-4479-a156-5471788bee24",
                        "9518b027-7ca6-459c-aa23-ff38c425c3ac",
                        "3916947d-8afa-4673-8261-c99673ed7401"
                    ],
                    "failures": [
                        "8121ec8f-4382-444a-8540-9513b1fb004f",
                        "248c91fd-3b88-4a65-969c-e6da680ab1bb",
                        "a9e1eeb7-ee48-4eee-aaef-7b6a704684cd",
                        "7aa4460e-74c9-4903-bce6-d54f97493688"
                    ],
                    "pending": [],
                    "skipped": [],
                    "duration": 6,
                    "root": false,
                    "rootEmpty": false,
                    "_timeout": 250000
                },
                {
                    "uuid": "ba522e92-75fe-45b0-8f2a-ec97444d1df6",
                    "title": "TaxableIncome_Line252_6.1(SP)--Input F54960 (restricted farm loss from prior year) to exceed amount at F14100 (net farming income). Software must not allow...  //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14 =$ 65,000, SP, T4 Box 14= $50,000, T2121. Is this a partnerships vehicle =Yes. Shared with spouse 50%-50%. Motor vehicle: Partnership =Yes. Bus KM =100, Total KM =100. Gas Expenses =$ 10,000, CCA Class =Class 10, Opening UCC =$ 10,000. o you have assets on which capital cost allowance (depreciation) can be claimed  =Yes. Class No =6. UCC at start of the year =$ 100,000)  ",
                    "fullFile": "E:\\Rita\\Taxtron\\WebTest\\my_work\\test_for_report_2020\\NETINC_2020\\tcTaxableIncome_Line252_6.1.js",
                    "file": "\\my_work\\test_for_report_2020\\NETINC_2020\\tcTaxableIncome_Line252_6.1.js",
                    "beforeHooks": [
                        {
                            "title": "\"before all\" hook",
                            "fullTitle": "TaxableIncome_Line252_6.1(SP)--Input F54960 (restricted farm loss from prior year) to exceed amount at F14100 (net farming income). Software must not allow...  //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14 =$ 65,000, SP, T4 Box 14= $50,000, T2121. Is this a partnerships vehicle =Yes. Shared with spouse 50%-50%. Motor vehicle: Partnership =Yes. Bus KM =100, Total KM =100. Gas Expenses =$ 10,000, CCA Class =Class 10, Opening UCC =$ 10,000. o you have assets on which capital cost allowance (depreciation) can be claimed  =Yes. Class No =6. UCC at start of the year =$ 100,000)   \"before all\" hook",
                            "timedOut": false,
                            "duration": 110391,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "driver = new Builder()\n    .withCapabilities(Capabilities.chrome().setAcceptInsecureCerts(true))\n    .build();\ndriver.manage().window().setRect({ width: 1366, height: 768 });\nawait login(driver, 'ritakumar@outlook.com', 'rishu12rashi');\nawait selectNewReturn(driver,province);\nawait switchToastOff(driver);\n    \nawait nextClick(driver);\nawait setInputById(driver, 'Firstnames0', 'king');\nawait setInputById(driver, 'Surname0', 'smith');\nawait selectDateById(driver, 'DOB0', '1968/10/10');\nawait setInputById(driver, 'SIN0', '100000009');\nawait selectComboById(driver, 'MaritalStatus0', 'Common-law');\nawait selectToggleById(driver, 'domchanged0', '0');\nawait selectToggleById(driver, 'IsLinkedReturn0', '1');\nawait nextClick(driver);\nawait addressExpandClick(driver, 'fullAdd');\nawait setInputById(driver, 'StreetNo0', '25');\nawait setInputById(driver, 'StreetName0', 'JANE ST');\nawait setInputById(driver, 'City0', 'ETOBICOKE');\nawait selectComboById(driver, 'ProvinceOfRes0', 'Manitoba');\nawait setInputById(driver, 'PCodeC0', 'R0H 1N1');\nawait selectToggleById(driver, 'quesFP0', '0');\nawait selectToggleById(driver, 'quesPrinResi0', '0');\nawait selectToggleById(driver, 'qCitizen0', '0');\nawait nextClick(driver);\nawait nextClick(driver);\nawait setInputById(driver, 'Firstnames0sp', 'jone');\nawait setInputById(driver, 'Surname0sp', 'smith');\nawait selectDateById(driver, 'DOB0sp', '1968/10/10');\nawait setInputById(driver, 'SIN0sp', '100000025');\nawait selectComboById(driver, 'Province0sp', 'British Columbia');\nawait nextClick(driver);\nawait selectTab(driver, 'Income');\nawait selectTab(driver, 'IncomeProfile');\nawait selectToggleById(driver, 'WorkedInYOR0tp', '1');\nawait clickDivById(driver, 'T40tp');\n\t\t    await selectToggleById(driver, 'SelfEmployed0tp', '1');\nawait nextClick(driver);\nawait selectToggleById(driver, 'WorkedInYOR0sp', '1');\nawait clickDivById(driver, 'T40sp');\nawait nextClick(driver);\nawait setInputById(driver, 'T4B140', '65000');\nawait selectComboById(driver, 'T4_Box100tp', 'ON');\nawait nextClick(driver);\nawait setInputById(driver, 'T4B140sp', '50000');\nawait selectComboById(driver, 'T4_Box100sp', 'ON');\nawait nextClick(driver);\nawait selectToggleById(driver, 'FIncome20tp', '1'); \nawait nextClick(driver);\nawait setInputById(driver, 'BoatName0', 'ABC');\nawait setInputById(driver, 'BoatLicense0', '100000009');\nawait setInputById(driver, 'FishBusName0', 'ASWERT');\nawait selectComboById(driver, 'FishSIC0', 'Salt Water Fishing');\nawait selectAgeDateById(driver, 'T2121_SFDStart0',  Fed.TaxYear,'0','/01/25');\nawait selectAgeDateById(driver, 'T2121_SFDEnd0', Fed.TaxYear,'0','/12/31');\nawait selectToggleById(driver, 'T2121AccountingMethod0','2'); \nawait selectToggleById(driver, 'Partnership0tp', '1'); \nawait selectToggleById(driver, 'iSpartnershipWithSp0tp', '1'); \nawait setInputById(driver, 'FishShareSp0tp', '50');\nawait setInputById(driver, 'FishShareTP0tp', '50');\nawait nextClick(driver);\nawait setInputById(driver, 'T2121Fpro0', '1');\nawait setInputById(driver, 'T2121Othermarine0tp', '2');\nawait setInputById(driver, 'T2121Grants0tp', '3');\nawait setInputById(driver, 'T2121Subsidies0tp', '4');\nawait setInputById(driver, 'T2121Compen0tp', '5');\nawait setInputById(driver, 'T2121Other0tp', '6');\nawait setInputById(driver, 'T2121_740tp', '8');\nawait nextClick(driver);\nawait setInputById(driver, 'Line91380tp', '1');\nawait setInputById(driver, 'Line90620tp', '2');\nawait setInputById(driver, 'Line92240tp', '3');\nawait setInputById(driver, 'Line91360tp', '4');\nawait setInputById(driver, 'Line86900tp', '5');\nawait setInputById(driver, 'Line87100tp', '6');\nawait setInputById(driver, 'Line85230tp', '7');\nawait setInputById(driver, 'Line87600tp', '8');\nawait setInputById(driver, 'Line91370tp', '9');\nawait setInputById(driver, 'Line88100tp', '10');\nawait setInputById(driver, 'Line88600tp', '11');\nawait setInputById(driver, 'Line90600tp', '12');\nawait setInputById(driver, 'T2121_930tp', '13');\nawait setInputById(driver, 'T2121_940tp', '14');\nawait setInputById(driver, 'T2121_950tp', '15');\nawait setInputById(driver, 'T2121_970tp', '16');\nawait setInputById(driver, 'T2121_99740tp', '17');\nawait setInputById(driver, 'Line92700tp', '18');\nawait nextClick(driver);\nawait selectToggleById(driver, 'MotorExpenses0tp', '1');\nawait selectToggleById(driver, 'leaseOrPurchase0tp', '2');\nawait selectDateById(driver, 'FishAutoPDate10tp', '2017/01/01');\nawait driver.findElement(By.name('FishAutoPDate10tp')).sendKeys(Key.TAB);\nawait selectToggleById(driver, 'PartnerShare10tp', '1');\nawait setInputById(driver, 'FishAutoKM10tp', '100');\nawait setInputById(driver, 'FishAutoKmTotal10tp', '100');\nawait setInputById(driver, 'FishAutoFuel10tp', '10000');\nawait selectToggleById(driver, 'T2121Auto_880tp', '1');\nawait setInputById(driver, 'Fishautouccopening10tp', '10000');\nawait nextClick(driver);\n/*await selectToggleById(driver, 'HomeOffice0tp', '1');\nawait setInputById(driver, 'FishHOPercent0tp', '80');\nawait setInputById(driver, 'T2121_2_80tp', '4000');*/\nawait nextClick(driver);\nawait selectToggleById(driver, 'S8Q10tp', '1');\nawait selectComboById(driver, 'FishXI10tp', 'Class 6 - 10% Fences, frame, log, stucco on frame, galvanized iron, or corrugated metal buildings');\nawait setInputById(driver, 'T2121_2_310tp', '100000');\nawait nextClick(driver);\nawait nextClick(driver);\nsavedForm = await getServerFileSp(driver,'sp');",
                            "err": {},
                            "uuid": "1f9bb028-14d1-49cf-8ea8-fd77955c4686",
                            "parentUUID": "ba522e92-75fe-45b0-8f2a-ec97444d1df6",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "afterHooks": [
                        {
                            "title": "\"after all\" hook",
                            "fullTitle": "TaxableIncome_Line252_6.1(SP)--Input F54960 (restricted farm loss from prior year) to exceed amount at F14100 (net farming income). Software must not allow...  //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14 =$ 65,000, SP, T4 Box 14= $50,000, T2121. Is this a partnerships vehicle =Yes. Shared with spouse 50%-50%. Motor vehicle: Partnership =Yes. Bus KM =100, Total KM =100. Gas Expenses =$ 10,000, CCA Class =Class 10, Opening UCC =$ 10,000. o you have assets on which capital cost allowance (depreciation) can be claimed  =Yes. Class No =6. UCC at start of the year =$ 100,000)   \"after all\" hook",
                            "timedOut": false,
                            "duration": 1393,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "await logoutById(driver);\nawait driver.quit();",
                            "err": {},
                            "uuid": "b08abe0c-d11d-4b67-8ebe-3c644163cc71",
                            "parentUUID": "ba522e92-75fe-45b0-8f2a-ec97444d1df6",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "tests": [
                        {
                            "title": " F10100 should be  allowed with amount    allow.value ==50000",
                            "fullTitle": "TaxableIncome_Line252_6.1(SP)--Input F54960 (restricted farm loss from prior year) to exceed amount at F14100 (net farming income). Software must not allow...  //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14 =$ 65,000, SP, T4 Box 14= $50,000, T2121. Is this a partnerships vehicle =Yes. Shared with spouse 50%-50%. Motor vehicle: Partnership =Yes. Bus KM =100, Total KM =100. Gas Expenses =$ 10,000, CCA Class =Class 10, Opening UCC =$ 10,000. o you have assets on which capital cost allowance (depreciation) can be claimed  =Yes. Class No =6. UCC at start of the year =$ 100,000)    F10100 should be  allowed with amount    allow.value ==50000",
                            "timedOut": false,
                            "duration": 1,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let employmentIncomeFromT4SlipsFeild = getFieldId('10100');\nlet employmentIncomeFromT4Slips = savedForm[  employmentIncomeFromT4SlipsFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ employmentIncomeFromT4Slips;\nassert.strictEqual(   employmentIncomeFromT4Slips,'50000', ' Feild should be built');",
                            "err": {},
                            "uuid": "744f0fa9-7fa1-439c-aa87-8cb5b49f6a9e",
                            "parentUUID": "ba522e92-75fe-45b0-8f2a-ec97444d1df6",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F14300 should be  allowed with amount    allow.value ==-11137",
                            "fullTitle": "TaxableIncome_Line252_6.1(SP)--Input F54960 (restricted farm loss from prior year) to exceed amount at F14100 (net farming income). Software must not allow...  //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14 =$ 65,000, SP, T4 Box 14= $50,000, T2121. Is this a partnerships vehicle =Yes. Shared with spouse 50%-50%. Motor vehicle: Partnership =Yes. Bus KM =100, Total KM =100. Gas Expenses =$ 10,000, CCA Class =Class 10, Opening UCC =$ 10,000. o you have assets on which capital cost allowance (depreciation) can be claimed  =Yes. Class No =6. UCC at start of the year =$ 100,000)    F14300 should be  allowed with amount    allow.value ==-11137",
                            "timedOut": false,
                            "duration": 1,
                            "state": "failed",
                            "speed": null,
                            "pass": false,
                            "fail": true,
                            "pending": false,
                            "context": null,
                            "code": "let netFarmingIncomelossFeild = getFieldId('14300');\nlet netFarmingIncomeloss = savedForm[ netFarmingIncomelossFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ netFarmingIncomeloss;\nassert.strictEqual( netFarmingIncomeloss, '-702950', ' Feild should be built');",
                            "err": {
                                "message": "AssertionError:  Feild should be built",
                                "estack": "AssertionError [ERR_ASSERTION]:  Feild should be built\n    at Context.<anonymous> (my_work\\test_for_report_2020\\NETINC_2020\\tcTaxableIncome_Line252_6.1.js:139:20)\n    at processImmediate (internal/timers.js:456:21)",
                                "diff": "- -11137\n+ -702950\n"
                            },
                            "uuid": "ae21fbbc-61b5-4ca6-9f54-e5afd22cbb4a",
                            "parentUUID": "ba522e92-75fe-45b0-8f2a-ec97444d1df6",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F9600 should be  allowed with amount    allow.value ==6",
                            "fullTitle": "TaxableIncome_Line252_6.1(SP)--Input F54960 (restricted farm loss from prior year) to exceed amount at F14100 (net farming income). Software must not allow...  //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14 =$ 65,000, SP, T4 Box 14= $50,000, T2121. Is this a partnerships vehicle =Yes. Shared with spouse 50%-50%. Motor vehicle: Partnership =Yes. Bus KM =100, Total KM =100. Gas Expenses =$ 10,000, CCA Class =Class 10, Opening UCC =$ 10,000. o you have assets on which capital cost allowance (depreciation) can be claimed  =Yes. Class No =6. UCC at start of the year =$ 100,000)    F9600 should be  allowed with amount    allow.value ==6",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let otherIncomeFeild = fishingActivityCoOwnerDataId('9600');\nlet otherIncome = savedForm[otherIncomeFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ otherIncome;\nassert.strictEqual(otherIncome, '6', ' Feild should be built');",
                            "err": {},
                            "uuid": "5bd6cb84-701c-452d-a280-39764bf357c0",
                            "parentUUID": "ba522e92-75fe-45b0-8f2a-ec97444d1df6",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F8299 should be  allowed with amount    allow.value ==29",
                            "fullTitle": "TaxableIncome_Line252_6.1(SP)--Input F54960 (restricted farm loss from prior year) to exceed amount at F14100 (net farming income). Software must not allow...  //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14 =$ 65,000, SP, T4 Box 14= $50,000, T2121. Is this a partnerships vehicle =Yes. Shared with spouse 50%-50%. Motor vehicle: Partnership =Yes. Bus KM =100, Total KM =100. Gas Expenses =$ 10,000, CCA Class =Class 10, Opening UCC =$ 10,000. o you have assets on which capital cost allowance (depreciation) can be claimed  =Yes. Class No =6. UCC at start of the year =$ 100,000)    F8299 should be  allowed with amount    allow.value ==29",
                            "timedOut": false,
                            "duration": 1,
                            "state": "failed",
                            "speed": null,
                            "pass": false,
                            "fail": true,
                            "pending": false,
                            "context": null,
                            "code": "let grossIncomeFeild = fishingActivityCoOwnerDataId('8299');\nlet grossIncome = savedForm[grossIncomeFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+grossIncome;\nassert.strictEqual(grossIncome, '21', ' Feild should be built');",
                            "err": {
                                "message": "AssertionError:  Feild should be built",
                                "estack": "AssertionError [ERR_ASSERTION]:  Feild should be built\n    at Context.<anonymous> (my_work\\test_for_report_2020\\NETINC_2020\\tcTaxableIncome_Line252_6.1.js:152:20)\n    at processImmediate (internal/timers.js:456:21)",
                                "diff": "- 29\n+ 21\n"
                            },
                            "uuid": "29b11751-0827-416e-a292-3c449c5d8a92",
                            "parentUUID": "ba522e92-75fe-45b0-8f2a-ec97444d1df6",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F9138 should be  allowed with amount    allow.value ==1",
                            "fullTitle": "TaxableIncome_Line252_6.1(SP)--Input F54960 (restricted farm loss from prior year) to exceed amount at F14100 (net farming income). Software must not allow...  //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14 =$ 65,000, SP, T4 Box 14= $50,000, T2121. Is this a partnerships vehicle =Yes. Shared with spouse 50%-50%. Motor vehicle: Partnership =Yes. Bus KM =100, Total KM =100. Gas Expenses =$ 10,000, CCA Class =Class 10, Opening UCC =$ 10,000. o you have assets on which capital cost allowance (depreciation) can be claimed  =Yes. Class No =6. UCC at start of the year =$ 100,000)    F9138 should be  allowed with amount    allow.value ==1",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let saltBaitAndIceFeild = fishingActivityCoOwnerDataId('9138');\nlet  saltBaitAndIce = savedForm[  saltBaitAndIceFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+  saltBaitAndIce;\nassert.strictEqual(  saltBaitAndIce, '1', ' Feild should be built');",
                            "err": {},
                            "uuid": "da783b5b-3d6d-4237-9794-eb9a3a506a26",
                            "parentUUID": "ba522e92-75fe-45b0-8f2a-ec97444d1df6",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F9062 should be  allowed with amount    allow.value ==2",
                            "fullTitle": "TaxableIncome_Line252_6.1(SP)--Input F54960 (restricted farm loss from prior year) to exceed amount at F14100 (net farming income). Software must not allow...  //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14 =$ 65,000, SP, T4 Box 14= $50,000, T2121. Is this a partnerships vehicle =Yes. Shared with spouse 50%-50%. Motor vehicle: Partnership =Yes. Bus KM =100, Total KM =100. Gas Expenses =$ 10,000, CCA Class =Class 10, Opening UCC =$ 10,000. o you have assets on which capital cost allowance (depreciation) can be claimed  =Yes. Class No =6. UCC at start of the year =$ 100,000)    F9062 should be  allowed with amount    allow.value ==2",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let crewSharesFeild = fishingActivityCoOwnerDataId('9062');\nlet crewShares = savedForm[ crewSharesFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+crewShares;\nassert.strictEqual(crewShares, '2', ' Feild should be built');",
                            "err": {},
                            "uuid": "3eff73eb-e684-433e-8325-00d84b70b861",
                            "parentUUID": "ba522e92-75fe-45b0-8f2a-ec97444d1df6",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F9224 should be  allowed with amount    allow.value ==3",
                            "fullTitle": "TaxableIncome_Line252_6.1(SP)--Input F54960 (restricted farm loss from prior year) to exceed amount at F14100 (net farming income). Software must not allow...  //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14 =$ 65,000, SP, T4 Box 14= $50,000, T2121. Is this a partnerships vehicle =Yes. Shared with spouse 50%-50%. Motor vehicle: Partnership =Yes. Bus KM =100, Total KM =100. Gas Expenses =$ 10,000, CCA Class =Class 10, Opening UCC =$ 10,000. o you have assets on which capital cost allowance (depreciation) can be claimed  =Yes. Class No =6. UCC at start of the year =$ 100,000)    F9224 should be  allowed with amount    allow.value ==3",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let fuelCostsExceptForMotorVehiclesFeild = fishingActivityCoOwnerDataId('9224');\nlet fuelCostsExceptForMotorVehicles = savedForm[ fuelCostsExceptForMotorVehiclesFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ fuelCostsExceptForMotorVehicles;\nassert.strictEqual( fuelCostsExceptForMotorVehicles, '3', ' Feild should be built');",
                            "err": {},
                            "uuid": "bce2c238-bf59-42e0-8a86-bc2275585360",
                            "parentUUID": "ba522e92-75fe-45b0-8f2a-ec97444d1df6",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F9136 should be  allowed with amount    allow.value ==4",
                            "fullTitle": "TaxableIncome_Line252_6.1(SP)--Input F54960 (restricted farm loss from prior year) to exceed amount at F14100 (net farming income). Software must not allow...  //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14 =$ 65,000, SP, T4 Box 14= $50,000, T2121. Is this a partnerships vehicle =Yes. Shared with spouse 50%-50%. Motor vehicle: Partnership =Yes. Bus KM =100, Total KM =100. Gas Expenses =$ 10,000, CCA Class =Class 10, Opening UCC =$ 10,000. o you have assets on which capital cost allowance (depreciation) can be claimed  =Yes. Class No =6. UCC at start of the year =$ 100,000)    F9136 should be  allowed with amount    allow.value ==4",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let fishingGearFeild = fishingActivityCoOwnerDataId('9136');\nlet  fishingGear = savedForm[  fishingGearFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+  fishingGear;\nassert.strictEqual( fishingGear, '4', ' Feild should be built');",
                            "err": {},
                            "uuid": "400f944a-d120-4bb1-9952-5dc318609ea7",
                            "parentUUID": "ba522e92-75fe-45b0-8f2a-ec97444d1df6",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F8690 should be  allowed with amount    allow.value ==5",
                            "fullTitle": "TaxableIncome_Line252_6.1(SP)--Input F54960 (restricted farm loss from prior year) to exceed amount at F14100 (net farming income). Software must not allow...  //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14 =$ 65,000, SP, T4 Box 14= $50,000, T2121. Is this a partnerships vehicle =Yes. Shared with spouse 50%-50%. Motor vehicle: Partnership =Yes. Bus KM =100, Total KM =100. Gas Expenses =$ 10,000, CCA Class =Class 10, Opening UCC =$ 10,000. o you have assets on which capital cost allowance (depreciation) can be claimed  =Yes. Class No =6. UCC at start of the year =$ 100,000)    F8690 should be  allowed with amount    allow.value ==5",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let insuranceFeild = fishingActivityCoOwnerDataId('8690');\nlet insurance = savedForm[ insuranceFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ insurance;\nassert.strictEqual( insurance, '5', ' Feild should be built');",
                            "err": {},
                            "uuid": "410f9951-b84c-4310-9dc1-870b7c535fc1",
                            "parentUUID": "ba522e92-75fe-45b0-8f2a-ec97444d1df6",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F8710 should be  allowed with amount    allow.value ==6",
                            "fullTitle": "TaxableIncome_Line252_6.1(SP)--Input F54960 (restricted farm loss from prior year) to exceed amount at F14100 (net farming income). Software must not allow...  //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14 =$ 65,000, SP, T4 Box 14= $50,000, T2121. Is this a partnerships vehicle =Yes. Shared with spouse 50%-50%. Motor vehicle: Partnership =Yes. Bus KM =100, Total KM =100. Gas Expenses =$ 10,000, CCA Class =Class 10, Opening UCC =$ 10,000. o you have assets on which capital cost allowance (depreciation) can be claimed  =Yes. Class No =6. UCC at start of the year =$ 100,000)    F8710 should be  allowed with amount    allow.value ==6",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let interestAndBankChargesFeild = fishingActivityCoOwnerDataId('8710');\nlet interestAndBankCharges = savedForm[ interestAndBankChargesFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ interestAndBankCharges;\nassert.strictEqual( interestAndBankCharges, '6', ' Feild should be built');",
                            "err": {},
                            "uuid": "0196bacf-7648-4449-aa1b-76cf97f1076a",
                            "parentUUID": "ba522e92-75fe-45b0-8f2a-ec97444d1df6",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F8523 should be  allowed with amount    allow.value ==7",
                            "fullTitle": "TaxableIncome_Line252_6.1(SP)--Input F54960 (restricted farm loss from prior year) to exceed amount at F14100 (net farming income). Software must not allow...  //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14 =$ 65,000, SP, T4 Box 14= $50,000, T2121. Is this a partnerships vehicle =Yes. Shared with spouse 50%-50%. Motor vehicle: Partnership =Yes. Bus KM =100, Total KM =100. Gas Expenses =$ 10,000, CCA Class =Class 10, Opening UCC =$ 10,000. o you have assets on which capital cost allowance (depreciation) can be claimed  =Yes. Class No =6. UCC at start of the year =$ 100,000)    F8523 should be  allowed with amount    allow.value ==7",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let mealsAndEntertainmentFeild = fishingActivityCoOwnerDataId('8523');\nlet mealsAndEntertainment = savedForm[ mealsAndEntertainmentFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ mealsAndEntertainment;\nassert.strictEqual(mealsAndEntertainment, '7', ' Feild should be built');",
                            "err": {},
                            "uuid": "1ecb6f40-34d1-4925-b2ef-3a0dac20e87a",
                            "parentUUID": "ba522e92-75fe-45b0-8f2a-ec97444d1df6",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F8760 should be  allowed with amount    allow.value ==8",
                            "fullTitle": "TaxableIncome_Line252_6.1(SP)--Input F54960 (restricted farm loss from prior year) to exceed amount at F14100 (net farming income). Software must not allow...  //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14 =$ 65,000, SP, T4 Box 14= $50,000, T2121. Is this a partnerships vehicle =Yes. Shared with spouse 50%-50%. Motor vehicle: Partnership =Yes. Bus KM =100, Total KM =100. Gas Expenses =$ 10,000, CCA Class =Class 10, Opening UCC =$ 10,000. o you have assets on which capital cost allowance (depreciation) can be claimed  =Yes. Class No =6. UCC at start of the year =$ 100,000)    F8760 should be  allowed with amount    allow.value ==8",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let businessTaxeslicencesAndMembershipsFeild = fishingActivityCoOwnerDataId('8760');\nlet businessTaxeslicencesAndMemberships = savedForm[ businessTaxeslicencesAndMembershipsFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ businessTaxeslicencesAndMemberships;\nassert.strictEqual( businessTaxeslicencesAndMemberships, '8', ' Feild should be built');",
                            "err": {},
                            "uuid": "dda055c7-9def-4211-b291-563a33cde0c6",
                            "parentUUID": "ba522e92-75fe-45b0-8f2a-ec97444d1df6",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F9281 should be  allowed with amount    allow.value ==10000",
                            "fullTitle": "TaxableIncome_Line252_6.1(SP)--Input F54960 (restricted farm loss from prior year) to exceed amount at F14100 (net farming income). Software must not allow...  //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14 =$ 65,000, SP, T4 Box 14= $50,000, T2121. Is this a partnerships vehicle =Yes. Shared with spouse 50%-50%. Motor vehicle: Partnership =Yes. Bus KM =100, Total KM =100. Gas Expenses =$ 10,000, CCA Class =Class 10, Opening UCC =$ 10,000. o you have assets on which capital cost allowance (depreciation) can be claimed  =Yes. Class No =6. UCC at start of the year =$ 100,000)    F9281 should be  allowed with amount    allow.value ==10000",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let motorVehicleExpensesNotIncludingCCAFeild = fishingActivityCoOwnerDataId('9281');\nlet motorVehicleExpensesNotIncludingCCA = savedForm[ motorVehicleExpensesNotIncludingCCAFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ motorVehicleExpensesNotIncludingCCA;\nassert.strictEqual(motorVehicleExpensesNotIncludingCCA, '10000', ' Feild should be built');",
                            "err": {},
                            "uuid": "92a42490-629f-44e7-be71-8052df727257",
                            "parentUUID": "ba522e92-75fe-45b0-8f2a-ec97444d1df6",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F8810 should be  allowed with amount    allow.value ==10",
                            "fullTitle": "TaxableIncome_Line252_6.1(SP)--Input F54960 (restricted farm loss from prior year) to exceed amount at F14100 (net farming income). Software must not allow...  //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14 =$ 65,000, SP, T4 Box 14= $50,000, T2121. Is this a partnerships vehicle =Yes. Shared with spouse 50%-50%. Motor vehicle: Partnership =Yes. Bus KM =100, Total KM =100. Gas Expenses =$ 10,000, CCA Class =Class 10, Opening UCC =$ 10,000. o you have assets on which capital cost allowance (depreciation) can be claimed  =Yes. Class No =6. UCC at start of the year =$ 100,000)    F8810 should be  allowed with amount    allow.value ==10",
                            "timedOut": false,
                            "duration": 1,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let officeExpensesFeild = fishingActivityCoOwnerDataId('8810');\nlet officeExpenses = savedForm[officeExpensesFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ officeExpenses;\nassert.strictEqual( officeExpenses, '10', ' Feild should be built');",
                            "err": {},
                            "uuid": "4df39e78-06ab-4a60-a641-f8d3601810f6",
                            "parentUUID": "ba522e92-75fe-45b0-8f2a-ec97444d1df6",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F9137 should be  allowed with amount    allow.value ==9",
                            "fullTitle": "TaxableIncome_Line252_6.1(SP)--Input F54960 (restricted farm loss from prior year) to exceed amount at F14100 (net farming income). Software must not allow...  //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14 =$ 65,000, SP, T4 Box 14= $50,000, T2121. Is this a partnerships vehicle =Yes. Shared with spouse 50%-50%. Motor vehicle: Partnership =Yes. Bus KM =100, Total KM =100. Gas Expenses =$ 10,000, CCA Class =Class 10, Opening UCC =$ 10,000. o you have assets on which capital cost allowance (depreciation) can be claimed  =Yes. Class No =6. UCC at start of the year =$ 100,000)    F9137 should be  allowed with amount    allow.value ==9",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let netsAndTrapsFeild =fishingActivityCoOwnerDataId('9137');\nlet  netsAndTraps = savedForm[ netsAndTrapsFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ netsAndTraps;\nassert.strictEqual(  netsAndTraps, '9', ' Feild should be built');",
                            "err": {},
                            "uuid": "e61b02c8-c906-4b6a-9b8d-c3e53f58642a",
                            "parentUUID": "ba522e92-75fe-45b0-8f2a-ec97444d1df6",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F8860 should be  allowed with amount    allow.value ==11",
                            "fullTitle": "TaxableIncome_Line252_6.1(SP)--Input F54960 (restricted farm loss from prior year) to exceed amount at F14100 (net farming income). Software must not allow...  //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14 =$ 65,000, SP, T4 Box 14= $50,000, T2121. Is this a partnerships vehicle =Yes. Shared with spouse 50%-50%. Motor vehicle: Partnership =Yes. Bus KM =100, Total KM =100. Gas Expenses =$ 10,000, CCA Class =Class 10, Opening UCC =$ 10,000. o you have assets on which capital cost allowance (depreciation) can be claimed  =Yes. Class No =6. UCC at start of the year =$ 100,000)    F8860 should be  allowed with amount    allow.value ==11",
                            "timedOut": false,
                            "duration": 1,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let professionalFeesIncludeslegalAndAccountingFeesFeild = fishingActivityCoOwnerDataId('8860');\nlet professionalFeesIncludeslegalAndAccountingFees = savedForm[ professionalFeesIncludeslegalAndAccountingFeesFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ professionalFeesIncludeslegalAndAccountingFees;\nassert.strictEqual( professionalFeesIncludeslegalAndAccountingFees, '11', ' Feild should be built');",
                            "err": {},
                            "uuid": "5d8a3831-371f-4112-b58a-153635b3d04b",
                            "parentUUID": "ba522e92-75fe-45b0-8f2a-ec97444d1df6",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F9060 should be  allowed with amount    allow.value ==12",
                            "fullTitle": "TaxableIncome_Line252_6.1(SP)--Input F54960 (restricted farm loss from prior year) to exceed amount at F14100 (net farming income). Software must not allow...  //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14 =$ 65,000, SP, T4 Box 14= $50,000, T2121. Is this a partnerships vehicle =Yes. Shared with spouse 50%-50%. Motor vehicle: Partnership =Yes. Bus KM =100, Total KM =100. Gas Expenses =$ 10,000, CCA Class =Class 10, Opening UCC =$ 10,000. o you have assets on which capital cost allowance (depreciation) can be claimed  =Yes. Class No =6. UCC at start of the year =$ 100,000)    F9060 should be  allowed with amount    allow.value ==12",
                            "timedOut": false,
                            "duration": 1,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let salariesWagesAndBenefitsIncludingEmployersContributionsFeild = fishingActivityCoOwnerDataId('9060');\nlet salariesWagesAndBenefitsIncludingEmployersContributions = savedForm[ salariesWagesAndBenefitsIncludingEmployersContributionsFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ salariesWagesAndBenefitsIncludingEmployersContributions;\nassert.strictEqual( salariesWagesAndBenefitsIncludingEmployersContributions, '12', ' Feild should be built');",
                            "err": {},
                            "uuid": "12a5dfcc-7739-4e52-8807-5057fb932aec",
                            "parentUUID": "ba522e92-75fe-45b0-8f2a-ec97444d1df6",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F8963 should be  allowed with amount    allow.value ==26",
                            "fullTitle": "TaxableIncome_Line252_6.1(SP)--Input F54960 (restricted farm loss from prior year) to exceed amount at F14100 (net farming income). Software must not allow...  //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14 =$ 65,000, SP, T4 Box 14= $50,000, T2121. Is this a partnerships vehicle =Yes. Shared with spouse 50%-50%. Motor vehicle: Partnership =Yes. Bus KM =100, Total KM =100. Gas Expenses =$ 10,000, CCA Class =Class 10, Opening UCC =$ 10,000. o you have assets on which capital cost allowance (depreciation) can be claimed  =Yes. Class No =6. UCC at start of the year =$ 100,000)    F8963 should be  allowed with amount    allow.value ==26",
                            "timedOut": false,
                            "duration": 1,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let repairsAndMaintenanceFeild = fishingActivityCoOwnerDataId('8963');\nlet repairsAndMaintenance = savedForm[ repairsAndMaintenanceFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ repairsAndMaintenance;\nassert.strictEqual( repairsAndMaintenance, '26', ' Feild should be built');",
                            "err": {},
                            "uuid": "9cc0d6ff-554b-4d8b-a2b4-1659cc73007a",
                            "parentUUID": "ba522e92-75fe-45b0-8f2a-ec97444d1df6",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F9936 should be  allowed with amount    allow.value ==12181",
                            "fullTitle": "TaxableIncome_Line252_6.1(SP)--Input F54960 (restricted farm loss from prior year) to exceed amount at F14100 (net farming income). Software must not allow...  //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14 =$ 65,000, SP, T4 Box 14= $50,000, T2121. Is this a partnerships vehicle =Yes. Shared with spouse 50%-50%. Motor vehicle: Partnership =Yes. Bus KM =100, Total KM =100. Gas Expenses =$ 10,000, CCA Class =Class 10, Opening UCC =$ 10,000. o you have assets on which capital cost allowance (depreciation) can be claimed  =Yes. Class No =6. UCC at start of the year =$ 100,000)    F9936 should be  allowed with amount    allow.value ==12181",
                            "timedOut": false,
                            "duration": 0,
                            "state": "failed",
                            "speed": null,
                            "pass": false,
                            "fail": true,
                            "pending": false,
                            "context": null,
                            "code": "let capitalCostAllowanceFeild =fishingActivityCoOwnerDataId('9936');\nlet  capitalCostAllowance = savedForm[  capitalCostAllowanceFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+  capitalCostAllowance;\nassert.strictEqual(  capitalCostAllowance, '4000', ' Feild should be built');",
                            "err": {
                                "message": "AssertionError:  Feild should be built",
                                "estack": "AssertionError [ERR_ASSERTION]:  Feild should be built\n    at Context.<anonymous> (my_work\\test_for_report_2020\\NETINC_2020\\tcTaxableIncome_Line252_6.1.js:242:20)\n    at processImmediate (internal/timers.js:456:21)",
                                "diff": "- 12181\n+ 4000\n"
                            },
                            "uuid": "4a589bde-32c9-4693-ab93-9309a6946753",
                            "parentUUID": "ba522e92-75fe-45b0-8f2a-ec97444d1df6",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F9270 should be  allowed with amount    allow.value ==18",
                            "fullTitle": "TaxableIncome_Line252_6.1(SP)--Input F54960 (restricted farm loss from prior year) to exceed amount at F14100 (net farming income). Software must not allow...  //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14 =$ 65,000, SP, T4 Box 14= $50,000, T2121. Is this a partnerships vehicle =Yes. Shared with spouse 50%-50%. Motor vehicle: Partnership =Yes. Bus KM =100, Total KM =100. Gas Expenses =$ 10,000, CCA Class =Class 10, Opening UCC =$ 10,000. o you have assets on which capital cost allowance (depreciation) can be claimed  =Yes. Class No =6. UCC at start of the year =$ 100,000)    F9270 should be  allowed with amount    allow.value ==18",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let otherExpensesFeild = fishingActivityCoOwnerDataId('9270');\nlet otherExpenses = savedForm[ otherExpensesFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ otherExpenses;\nassert.strictEqual( otherExpenses, '18', ' Feild should be built');",
                            "err": {},
                            "uuid": "0a25c64d-2a9f-42f7-9cfe-ff05354a35b7",
                            "parentUUID": "ba522e92-75fe-45b0-8f2a-ec97444d1df6",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F9368 should be  allowed with amount    allow.value ==22303",
                            "fullTitle": "TaxableIncome_Line252_6.1(SP)--Input F54960 (restricted farm loss from prior year) to exceed amount at F14100 (net farming income). Software must not allow...  //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14 =$ 65,000, SP, T4 Box 14= $50,000, T2121. Is this a partnerships vehicle =Yes. Shared with spouse 50%-50%. Motor vehicle: Partnership =Yes. Bus KM =100, Total KM =100. Gas Expenses =$ 10,000, CCA Class =Class 10, Opening UCC =$ 10,000. o you have assets on which capital cost allowance (depreciation) can be claimed  =Yes. Class No =6. UCC at start of the year =$ 100,000)    F9368 should be  allowed with amount    allow.value ==22303",
                            "timedOut": false,
                            "duration": 0,
                            "state": "failed",
                            "speed": null,
                            "pass": false,
                            "fail": true,
                            "pending": false,
                            "context": null,
                            "code": "let totalExpensesFeild = fishingActivityCoOwnerDataId('9368');\nlet totalExpenses = savedForm[ totalExpensesFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+totalExpenses;\nassert.strictEqual( totalExpenses, '14122', ' Feild should be built');",
                            "err": {
                                "message": "AssertionError:  Feild should be built",
                                "estack": "AssertionError [ERR_ASSERTION]:  Feild should be built\n    at Context.<anonymous> (my_work\\test_for_report_2020\\NETINC_2020\\tcTaxableIncome_Line252_6.1.js:255:20)\n    at processImmediate (internal/timers.js:456:21)",
                                "diff": "- 22303\n+ 14122\n"
                            },
                            "uuid": "8c49ab48-4f48-48ae-bb7b-d50aba849581",
                            "parentUUID": "ba522e92-75fe-45b0-8f2a-ec97444d1df6",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F9369 should be  allowed with amount    allow.value ==-22274",
                            "fullTitle": "TaxableIncome_Line252_6.1(SP)--Input F54960 (restricted farm loss from prior year) to exceed amount at F14100 (net farming income). Software must not allow...  //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14 =$ 65,000, SP, T4 Box 14= $50,000, T2121. Is this a partnerships vehicle =Yes. Shared with spouse 50%-50%. Motor vehicle: Partnership =Yes. Bus KM =100, Total KM =100. Gas Expenses =$ 10,000, CCA Class =Class 10, Opening UCC =$ 10,000. o you have assets on which capital cost allowance (depreciation) can be claimed  =Yes. Class No =6. UCC at start of the year =$ 100,000)    F9369 should be  allowed with amount    allow.value ==-22274",
                            "timedOut": false,
                            "duration": 1,
                            "state": "failed",
                            "speed": null,
                            "pass": false,
                            "fail": true,
                            "pending": false,
                            "context": null,
                            "code": "let netIncomelossBeforeAdjustmentsFeild = fishingActivityCoOwnerDataId('9369');\nlet netIncomelossBeforeAdjustments = savedForm[ netIncomelossBeforeAdjustmentsFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ netIncomelossBeforeAdjustments;\nassert.strictEqual(netIncomelossBeforeAdjustments, '14093', ' Feild should be built');",
                            "err": {
                                "message": "AssertionError:  Feild should be built",
                                "estack": "AssertionError [ERR_ASSERTION]:  Feild should be built\n    at Context.<anonymous> (my_work\\test_for_report_2020\\NETINC_2020\\tcTaxableIncome_Line252_6.1.js:261:20)\n    at processImmediate (internal/timers.js:456:21)",
                                "diff": "- -22274\n+ 14093\n"
                            },
                            "uuid": "b63473c0-4e08-4526-a730-1d630164b7e9",
                            "parentUUID": "ba522e92-75fe-45b0-8f2a-ec97444d1df6",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F9974 should be  allowed with amount    allow.value ==undefined",
                            "fullTitle": "TaxableIncome_Line252_6.1(SP)--Input F54960 (restricted farm loss from prior year) to exceed amount at F14100 (net farming income). Software must not allow...  //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14 =$ 65,000, SP, T4 Box 14= $50,000, T2121. Is this a partnerships vehicle =Yes. Shared with spouse 50%-50%. Motor vehicle: Partnership =Yes. Bus KM =100, Total KM =100. Gas Expenses =$ 10,000, CCA Class =Class 10, Opening UCC =$ 10,000. o you have assets on which capital cost allowance (depreciation) can be claimed  =Yes. Class No =6. UCC at start of the year =$ 100,000)    F9974 should be  allowed with amount    allow.value ==undefined",
                            "timedOut": false,
                            "duration": 1,
                            "state": "failed",
                            "speed": null,
                            "pass": false,
                            "fail": true,
                            "pending": false,
                            "context": null,
                            "code": "let gSTHSTRebateForPartnersReceivedInTheYearFeild = fishingActivityCoOwnerDataId('9974');\nlet gSTHSTRebateForPartnersReceivedInTheYear = savedForm[ gSTHSTRebateForPartnersReceivedInTheYearFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ gSTHSTRebateForPartnersReceivedInTheYear;\nassert.strictEqual( gSTHSTRebateForPartnersReceivedInTheYear, '17', ' Feild should be built');",
                            "err": {
                                "message": "AssertionError:  Feild should be built",
                                "estack": "AssertionError [ERR_ASSERTION]:  Feild should be built\n    at Context.<anonymous> (my_work\\test_for_report_2020\\NETINC_2020\\tcTaxableIncome_Line252_6.1.js:267:20)\n    at processImmediate (internal/timers.js:456:21)",
                                "diff": null
                            },
                            "uuid": "2ba5bb61-3c23-464a-8f29-65a8c50a2535",
                            "parentUUID": "ba522e92-75fe-45b0-8f2a-ec97444d1df6",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F9946 should be  allowed with amount    allow.value ==-11137",
                            "fullTitle": "TaxableIncome_Line252_6.1(SP)--Input F54960 (restricted farm loss from prior year) to exceed amount at F14100 (net farming income). Software must not allow...  //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14 =$ 65,000, SP, T4 Box 14= $50,000, T2121. Is this a partnerships vehicle =Yes. Shared with spouse 50%-50%. Motor vehicle: Partnership =Yes. Bus KM =100, Total KM =100. Gas Expenses =$ 10,000, CCA Class =Class 10, Opening UCC =$ 10,000. o you have assets on which capital cost allowance (depreciation) can be claimed  =Yes. Class No =6. UCC at start of the year =$ 100,000)    F9946 should be  allowed with amount    allow.value ==-11137",
                            "timedOut": false,
                            "duration": 1,
                            "state": "failed",
                            "speed": null,
                            "pass": false,
                            "fail": true,
                            "pending": false,
                            "context": null,
                            "code": "let yourNetIncomelossFeild = fishingActivityCoOwnerDataId('9946');\nlet  yourNetIncomeloss = savedForm[  yourNetIncomelossFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+  yourNetIncomeloss;\nassert.strictEqual(  yourNetIncomeloss, '7030', ' Feild should be built');",
                            "err": {
                                "message": "AssertionError:  Feild should be built",
                                "estack": "AssertionError [ERR_ASSERTION]:  Feild should be built\n    at Context.<anonymous> (my_work\\test_for_report_2020\\NETINC_2020\\tcTaxableIncome_Line252_6.1.js:273:20)\n    at processImmediate (internal/timers.js:456:21)",
                                "diff": "- -11137\n+ 7030\n"
                            },
                            "uuid": "83ae6eab-04b8-4d61-a96d-8ccfe39f490f",
                            "parentUUID": "ba522e92-75fe-45b0-8f2a-ec97444d1df6",
                            "isHook": false,
                            "skipped": false
                        }
                    ],
                    "suites": [],
                    "passes": [
                        "744f0fa9-7fa1-439c-aa87-8cb5b49f6a9e",
                        "5bd6cb84-701c-452d-a280-39764bf357c0",
                        "da783b5b-3d6d-4237-9794-eb9a3a506a26",
                        "3eff73eb-e684-433e-8325-00d84b70b861",
                        "bce2c238-bf59-42e0-8a86-bc2275585360",
                        "400f944a-d120-4bb1-9952-5dc318609ea7",
                        "410f9951-b84c-4310-9dc1-870b7c535fc1",
                        "0196bacf-7648-4449-aa1b-76cf97f1076a",
                        "1ecb6f40-34d1-4925-b2ef-3a0dac20e87a",
                        "dda055c7-9def-4211-b291-563a33cde0c6",
                        "92a42490-629f-44e7-be71-8052df727257",
                        "4df39e78-06ab-4a60-a641-f8d3601810f6",
                        "e61b02c8-c906-4b6a-9b8d-c3e53f58642a",
                        "5d8a3831-371f-4112-b58a-153635b3d04b",
                        "12a5dfcc-7739-4e52-8807-5057fb932aec",
                        "9cc0d6ff-554b-4d8b-a2b4-1659cc73007a",
                        "0a25c64d-2a9f-42f7-9cfe-ff05354a35b7"
                    ],
                    "failures": [
                        "ae21fbbc-61b5-4ca6-9f54-e5afd22cbb4a",
                        "29b11751-0827-416e-a292-3c449c5d8a92",
                        "4a589bde-32c9-4693-ab93-9309a6946753",
                        "8c49ab48-4f48-48ae-bb7b-d50aba849581",
                        "b63473c0-4e08-4526-a730-1d630164b7e9",
                        "2ba5bb61-3c23-464a-8f29-65a8c50a2535",
                        "83ae6eab-04b8-4d61-a96d-8ccfe39f490f"
                    ],
                    "pending": [],
                    "skipped": [],
                    "duration": 10,
                    "root": false,
                    "rootEmpty": false,
                    "_timeout": 150000
                },
                {
                    "uuid": "c6058325-c366-41aa-9ae9-babae8b3dbe7",
                    "title": "TaxableIncome_Line252_6--Input F54960 (restricted farm loss from prior year) to exceed amount at F14100 (net farming income). Software must not allow...  //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14 =$ 65,000, SP, T4 Box 14= $50,000, T2121. Is this a partnerships vehicle =Yes. Shared with spouse 50%-50%. Motor vehicle: Partnership =Yes. Bus KM =100, Total KM =100. Gas Expenses =$ 10,000, CCA Class =Class 10, Opening UCC =$ 10,000. o you have assets on which capital cost allowance (depreciation) can be claimed  =Yes. Class No =6. UCC at start of the year =$ 100,000)  ",
                    "fullFile": "E:\\Rita\\Taxtron\\WebTest\\my_work\\test_for_report_2020\\NETINC_2020\\tcTaxableIncome_Line252_6.js",
                    "file": "\\my_work\\test_for_report_2020\\NETINC_2020\\tcTaxableIncome_Line252_6.js",
                    "beforeHooks": [
                        {
                            "title": "\"before all\" hook",
                            "fullTitle": "TaxableIncome_Line252_6--Input F54960 (restricted farm loss from prior year) to exceed amount at F14100 (net farming income). Software must not allow...  //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14 =$ 65,000, SP, T4 Box 14= $50,000, T2121. Is this a partnerships vehicle =Yes. Shared with spouse 50%-50%. Motor vehicle: Partnership =Yes. Bus KM =100, Total KM =100. Gas Expenses =$ 10,000, CCA Class =Class 10, Opening UCC =$ 10,000. o you have assets on which capital cost allowance (depreciation) can be claimed  =Yes. Class No =6. UCC at start of the year =$ 100,000)   \"before all\" hook",
                            "timedOut": false,
                            "duration": 108167,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "driver = new Builder()\n    .withCapabilities(Capabilities.chrome().setAcceptInsecureCerts(true))\n    .build();\ndriver.manage().window().setRect({ width: 1366, height: 768 });\nawait login(driver, 'ritakumar@outlook.com', 'rishu12rashi');\nawait selectNewReturn(driver,province);\nawait switchToastOff(driver);\n    \nawait nextClick(driver);\nawait setInputById(driver, 'Firstnames0', 'king');\nawait setInputById(driver, 'Surname0', 'smith');\nawait selectDateById(driver, 'DOB0', '1968/10/10');\nawait setInputById(driver, 'SIN0', '100000009');\nawait selectComboById(driver, 'MaritalStatus0', 'Common-law');\nawait selectToggleById(driver, 'domchanged0', '0');\nawait selectToggleById(driver, 'IsLinkedReturn0', '1');\nawait nextClick(driver);\nawait addressExpandClick(driver, 'fullAdd');\nawait setInputById(driver, 'StreetNo0', '25');\nawait setInputById(driver, 'StreetName0', 'JANE ST');\nawait setInputById(driver, 'City0', 'ETOBICOKE');\nawait selectComboById(driver, 'ProvinceOfRes0', 'Manitoba');\nawait setInputById(driver, 'PCodeC0', 'R0H 1N1');\nawait selectToggleById(driver, 'quesFP0', '0');\nawait selectToggleById(driver, 'quesPrinResi0', '0');\nawait selectToggleById(driver, 'qCitizen0', '0');\nawait nextClick(driver);\nawait nextClick(driver);\nawait setInputById(driver, 'Firstnames0sp', 'jone');\nawait setInputById(driver, 'Surname0sp', 'smith');\nawait selectDateById(driver, 'DOB0sp', '1968/10/10');\nawait setInputById(driver, 'SIN0sp', '100000025');\nawait selectComboById(driver, 'Province0sp', 'British Columbia');\nawait nextClick(driver);\nawait selectTab(driver, 'Income');\nawait selectTab(driver, 'IncomeProfile');\nawait selectToggleById(driver, 'WorkedInYOR0tp', '1');\nawait clickDivById(driver, 'T40tp');\n\t\t    await selectToggleById(driver, 'SelfEmployed0tp', '1');\nawait nextClick(driver);\nawait selectToggleById(driver, 'WorkedInYOR0sp', '1');\nawait clickDivById(driver, 'T40sp');\nawait nextClick(driver);\nawait setInputById(driver, 'T4B140', '65000');\nawait selectComboById(driver, 'T4_Box100tp', 'ON');\nawait nextClick(driver);\nawait setInputById(driver, 'T4B140sp', '50000');\nawait selectComboById(driver, 'T4_Box100sp', 'ON');\nawait nextClick(driver);\nawait selectToggleById(driver, 'FIncome20tp', '1'); \nawait nextClick(driver);\nawait setInputById(driver, 'BoatName0', 'ABC');\nawait setInputById(driver, 'BoatLicense0', '100000009');\nawait setInputById(driver, 'FishBusName0', 'ASWERT');\nawait selectComboById(driver, 'FishSIC0', 'Salt Water Fishing');\nawait selectAgeDateById(driver, 'T2121_SFDStart0',  Fed.TaxYear,'0','/01/25');\nawait selectAgeDateById(driver, 'T2121_SFDEnd0', Fed.TaxYear,'0','/12/31');\nawait selectToggleById(driver, 'T2121AccountingMethod0','2'); \nawait selectToggleById(driver, 'Partnership0tp', '1'); \nawait selectToggleById(driver, 'iSpartnershipWithSp0tp', '1'); \nawait setInputById(driver, 'FishShareSp0tp', '50');\nawait setInputById(driver, 'FishShareTP0tp', '50');\nawait nextClick(driver);\nawait setInputById(driver, 'T2121Fpro0', '1');\nawait setInputById(driver, 'T2121Othermarine0tp', '2');\nawait setInputById(driver, 'T2121Grants0tp', '3');\nawait setInputById(driver, 'T2121Subsidies0tp', '4');\nawait setInputById(driver, 'T2121Compen0tp', '5');\nawait setInputById(driver, 'T2121Other0tp', '6');\nawait setInputById(driver, 'T2121_740tp', '50000');\nawait setInputById(driver, 'T2121_760tp', '50000');\nawait nextClick(driver);\nawait setInputById(driver, 'Line91380tp', '1');\nawait setInputById(driver, 'Line90620tp', '2');\nawait setInputById(driver, 'Line92240tp', '3');\nawait setInputById(driver, 'Line91360tp', '4');\nawait setInputById(driver, 'Line86900tp', '5');\nawait setInputById(driver, 'Line87100tp', '6');\nawait setInputById(driver, 'Line85230tp', '7');\nawait setInputById(driver, 'Line87600tp', '8');\nawait setInputById(driver, 'Line91370tp', '9');\nawait setInputById(driver, 'Line88100tp', '10');\nawait setInputById(driver, 'Line88600tp', '11');\nawait setInputById(driver, 'Line90600tp', '12');\nawait setInputById(driver, 'T2121_930tp', '13');\nawait setInputById(driver, 'T2121_940tp', '14');\nawait setInputById(driver, 'T2121_950tp', '15');\nawait setInputById(driver, 'T2121_970tp', '16');\nawait setInputById(driver, 'T2121_99740tp', '17');\nawait setInputById(driver, 'Line92700tp', '18');\nawait nextClick(driver);\nawait selectToggleById(driver, 'MotorExpenses0tp', '1');\nawait selectToggleById(driver, 'leaseOrPurchase0tp', '2');\nawait selectDateById(driver, 'FishAutoPDate10tp', '2017/01/01');\nawait driver.findElement(By.name('FishAutoPDate10tp')).sendKeys(Key.TAB);\nawait selectToggleById(driver, 'PartnerShare10tp', '1');\nawait setInputById(driver, 'FishAutoKM10tp', '100');\nawait setInputById(driver, 'FishAutoKmTotal10tp', '100');\nawait setInputById(driver, 'FishAutoFuel10tp', '10000');\nawait selectToggleById(driver, 'T2121Auto_880tp', '1');\nawait setInputById(driver, 'Fishautouccopening10tp', '10000');\nawait nextClick(driver);\n/*await selectToggleById(driver, 'HomeOffice0tp', '1');\nawait setInputById(driver, 'FishHOPercent0tp', '80');\nawait setInputById(driver, 'T2121_2_80tp', '4000');*/\nawait nextClick(driver);\nawait selectToggleById(driver, 'S8Q10tp', '1');\nawait selectComboById(driver, 'FishXI10tp', 'Class 6 - 10% Fences, frame, log, stucco on frame, galvanized iron, or corrugated metal buildings');\nawait setInputById(driver, 'T2121_2_310tp', '100000');\nawait nextClick(driver);\nawait nextClick(driver);\nsavedForm = await getServerFile(driver);",
                            "err": {},
                            "uuid": "f1020960-326a-41cb-aea9-ed4433c6d6fa",
                            "parentUUID": "c6058325-c366-41aa-9ae9-babae8b3dbe7",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "afterHooks": [
                        {
                            "title": "\"after all\" hook",
                            "fullTitle": "TaxableIncome_Line252_6--Input F54960 (restricted farm loss from prior year) to exceed amount at F14100 (net farming income). Software must not allow...  //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14 =$ 65,000, SP, T4 Box 14= $50,000, T2121. Is this a partnerships vehicle =Yes. Shared with spouse 50%-50%. Motor vehicle: Partnership =Yes. Bus KM =100, Total KM =100. Gas Expenses =$ 10,000, CCA Class =Class 10, Opening UCC =$ 10,000. o you have assets on which capital cost allowance (depreciation) can be claimed  =Yes. Class No =6. UCC at start of the year =$ 100,000)   \"after all\" hook",
                            "timedOut": false,
                            "duration": 5407,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "await logoutById(driver);\nawait driver.quit();",
                            "err": {},
                            "uuid": "0e252be9-09f5-4356-806a-b74be1001200",
                            "parentUUID": "c6058325-c366-41aa-9ae9-babae8b3dbe7",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "tests": [
                        {
                            "title": " F10100 should be  allowed with amount    allow.value ==65000",
                            "fullTitle": "TaxableIncome_Line252_6--Input F54960 (restricted farm loss from prior year) to exceed amount at F14100 (net farming income). Software must not allow...  //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14 =$ 65,000, SP, T4 Box 14= $50,000, T2121. Is this a partnerships vehicle =Yes. Shared with spouse 50%-50%. Motor vehicle: Partnership =Yes. Bus KM =100, Total KM =100. Gas Expenses =$ 10,000, CCA Class =Class 10, Opening UCC =$ 10,000. o you have assets on which capital cost allowance (depreciation) can be claimed  =Yes. Class No =6. UCC at start of the year =$ 100,000)    F10100 should be  allowed with amount    allow.value ==65000",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let employmentIncomeFromT4SlipsFeild = getFieldId('10100');\nlet employmentIncomeFromT4Slips = savedForm[  employmentIncomeFromT4SlipsFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ employmentIncomeFromT4Slips;\nassert.strictEqual(   employmentIncomeFromT4Slips, '65000', ' Feild should be built');",
                            "err": {},
                            "uuid": "4b97de75-2f8b-4142-b0a8-5fea8e4a50f3",
                            "parentUUID": "c6058325-c366-41aa-9ae9-babae8b3dbe7",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F14300 should be  allowed with amount    allow.value ==38876",
                            "fullTitle": "TaxableIncome_Line252_6--Input F54960 (restricted farm loss from prior year) to exceed amount at F14100 (net farming income). Software must not allow...  //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14 =$ 65,000, SP, T4 Box 14= $50,000, T2121. Is this a partnerships vehicle =Yes. Shared with spouse 50%-50%. Motor vehicle: Partnership =Yes. Bus KM =100, Total KM =100. Gas Expenses =$ 10,000, CCA Class =Class 10, Opening UCC =$ 10,000. o you have assets on which capital cost allowance (depreciation) can be claimed  =Yes. Class No =6. UCC at start of the year =$ 100,000)    F14300 should be  allowed with amount    allow.value ==38876",
                            "timedOut": false,
                            "duration": 0,
                            "state": "failed",
                            "speed": null,
                            "pass": false,
                            "fail": true,
                            "pending": false,
                            "context": null,
                            "code": "let netFishingIncomeFeild = getFieldId('14300');\nlet netFishingIncome = savedForm[ netFishingIncomeFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+netFishingIncome;\nassert.strictEqual(netFishingIncome, '-702950', ' Feild should be built');",
                            "err": {
                                "message": "AssertionError:  Feild should be built",
                                "estack": "AssertionError [ERR_ASSERTION]:  Feild should be built\n    at Context.<anonymous> (my_work\\test_for_report_2020\\NETINC_2020\\tcTaxableIncome_Line252_6.js:140:20)\n    at processImmediate (internal/timers.js:456:21)",
                                "diff": "- 38876\n+ -702950\n"
                            },
                            "uuid": "63e3c393-e201-47ba-8dd8-ff863d85f076",
                            "parentUUID": "c6058325-c366-41aa-9ae9-babae8b3dbe7",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F9600 should be  allowed with amount    allow.value ==6",
                            "fullTitle": "TaxableIncome_Line252_6--Input F54960 (restricted farm loss from prior year) to exceed amount at F14100 (net farming income). Software must not allow...  //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14 =$ 65,000, SP, T4 Box 14= $50,000, T2121. Is this a partnerships vehicle =Yes. Shared with spouse 50%-50%. Motor vehicle: Partnership =Yes. Bus KM =100, Total KM =100. Gas Expenses =$ 10,000, CCA Class =Class 10, Opening UCC =$ 10,000. o you have assets on which capital cost allowance (depreciation) can be claimed  =Yes. Class No =6. UCC at start of the year =$ 100,000)    F9600 should be  allowed with amount    allow.value ==6",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let otherIncomeFeild = fishingActivityCoOwnerDataId('9600');\nlet otherIncome = savedForm[otherIncomeFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ otherIncome;\nassert.strictEqual(otherIncome, '6', ' Feild should be built');",
                            "err": {},
                            "uuid": "68faca4c-c7a0-4a34-be5d-c663336b35a9",
                            "parentUUID": "c6058325-c366-41aa-9ae9-babae8b3dbe7",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F8299 should be  allowed with amount    allow.value ==100021",
                            "fullTitle": "TaxableIncome_Line252_6--Input F54960 (restricted farm loss from prior year) to exceed amount at F14100 (net farming income). Software must not allow...  //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14 =$ 65,000, SP, T4 Box 14= $50,000, T2121. Is this a partnerships vehicle =Yes. Shared with spouse 50%-50%. Motor vehicle: Partnership =Yes. Bus KM =100, Total KM =100. Gas Expenses =$ 10,000, CCA Class =Class 10, Opening UCC =$ 10,000. o you have assets on which capital cost allowance (depreciation) can be claimed  =Yes. Class No =6. UCC at start of the year =$ 100,000)    F8299 should be  allowed with amount    allow.value ==100021",
                            "timedOut": false,
                            "duration": 0,
                            "state": "failed",
                            "speed": null,
                            "pass": false,
                            "fail": true,
                            "pending": false,
                            "context": null,
                            "code": "let grossIncomeFeild = fishingActivityCoOwnerDataId('8299');\nlet grossIncome = savedForm[grossIncomeFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+grossIncome;\nassert.strictEqual(grossIncome, '21', ' Feild should be built');",
                            "err": {
                                "message": "AssertionError:  Feild should be built",
                                "estack": "AssertionError [ERR_ASSERTION]:  Feild should be built\n    at Context.<anonymous> (my_work\\test_for_report_2020\\NETINC_2020\\tcTaxableIncome_Line252_6.js:153:20)\n    at processImmediate (internal/timers.js:456:21)",
                                "diff": "- 100021\n+ 21\n"
                            },
                            "uuid": "1cad7053-c05e-48fd-94b6-a0fc671468ab",
                            "parentUUID": "c6058325-c366-41aa-9ae9-babae8b3dbe7",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F9138 should be  allowed with amount    allow.value ==1",
                            "fullTitle": "TaxableIncome_Line252_6--Input F54960 (restricted farm loss from prior year) to exceed amount at F14100 (net farming income). Software must not allow...  //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14 =$ 65,000, SP, T4 Box 14= $50,000, T2121. Is this a partnerships vehicle =Yes. Shared with spouse 50%-50%. Motor vehicle: Partnership =Yes. Bus KM =100, Total KM =100. Gas Expenses =$ 10,000, CCA Class =Class 10, Opening UCC =$ 10,000. o you have assets on which capital cost allowance (depreciation) can be claimed  =Yes. Class No =6. UCC at start of the year =$ 100,000)    F9138 should be  allowed with amount    allow.value ==1",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let saltBaitAndIceFeild = fishingActivityCoOwnerDataId('9138');\nlet  saltBaitAndIce = savedForm[  saltBaitAndIceFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+  saltBaitAndIce;\nassert.strictEqual(  saltBaitAndIce, '1', ' Feild should be built');",
                            "err": {},
                            "uuid": "e21d4415-7fbb-440b-9335-a45fcd54da59",
                            "parentUUID": "c6058325-c366-41aa-9ae9-babae8b3dbe7",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F9062 should be  allowed with amount    allow.value ==2",
                            "fullTitle": "TaxableIncome_Line252_6--Input F54960 (restricted farm loss from prior year) to exceed amount at F14100 (net farming income). Software must not allow...  //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14 =$ 65,000, SP, T4 Box 14= $50,000, T2121. Is this a partnerships vehicle =Yes. Shared with spouse 50%-50%. Motor vehicle: Partnership =Yes. Bus KM =100, Total KM =100. Gas Expenses =$ 10,000, CCA Class =Class 10, Opening UCC =$ 10,000. o you have assets on which capital cost allowance (depreciation) can be claimed  =Yes. Class No =6. UCC at start of the year =$ 100,000)    F9062 should be  allowed with amount    allow.value ==2",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let crewSharesFeild = fishingActivityCoOwnerDataId('9062');\nlet crewShares = savedForm[ crewSharesFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+crewShares;\nassert.strictEqual(crewShares, '2', ' Feild should be built');",
                            "err": {},
                            "uuid": "e1f3af2d-4ff7-47c6-8fa9-d0c21f33298f",
                            "parentUUID": "c6058325-c366-41aa-9ae9-babae8b3dbe7",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F9224 should be  allowed with amount    allow.value ==3",
                            "fullTitle": "TaxableIncome_Line252_6--Input F54960 (restricted farm loss from prior year) to exceed amount at F14100 (net farming income). Software must not allow...  //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14 =$ 65,000, SP, T4 Box 14= $50,000, T2121. Is this a partnerships vehicle =Yes. Shared with spouse 50%-50%. Motor vehicle: Partnership =Yes. Bus KM =100, Total KM =100. Gas Expenses =$ 10,000, CCA Class =Class 10, Opening UCC =$ 10,000. o you have assets on which capital cost allowance (depreciation) can be claimed  =Yes. Class No =6. UCC at start of the year =$ 100,000)    F9224 should be  allowed with amount    allow.value ==3",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let fuelCostsExceptForMotorVehiclesFeild = fishingActivityCoOwnerDataId('9224');\nlet fuelCostsExceptForMotorVehicles = savedForm[ fuelCostsExceptForMotorVehiclesFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ fuelCostsExceptForMotorVehicles;\nassert.strictEqual( fuelCostsExceptForMotorVehicles, '3', ' Feild should be built');",
                            "err": {},
                            "uuid": "32e72933-7201-4e78-b918-ecdaed2fc15e",
                            "parentUUID": "c6058325-c366-41aa-9ae9-babae8b3dbe7",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F9136 should be  allowed with amount    allow.value ==4",
                            "fullTitle": "TaxableIncome_Line252_6--Input F54960 (restricted farm loss from prior year) to exceed amount at F14100 (net farming income). Software must not allow...  //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14 =$ 65,000, SP, T4 Box 14= $50,000, T2121. Is this a partnerships vehicle =Yes. Shared with spouse 50%-50%. Motor vehicle: Partnership =Yes. Bus KM =100, Total KM =100. Gas Expenses =$ 10,000, CCA Class =Class 10, Opening UCC =$ 10,000. o you have assets on which capital cost allowance (depreciation) can be claimed  =Yes. Class No =6. UCC at start of the year =$ 100,000)    F9136 should be  allowed with amount    allow.value ==4",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let fishingGearFeild = fishingActivityCoOwnerDataId('9136');\nlet  fishingGear = savedForm[  fishingGearFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+  fishingGear;\nassert.strictEqual( fishingGear, '4', ' Feild should be built');",
                            "err": {},
                            "uuid": "92746955-c5f3-4437-93b5-0fb66b97cfb4",
                            "parentUUID": "c6058325-c366-41aa-9ae9-babae8b3dbe7",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F8690 should be  allowed with amount    allow.value ==5",
                            "fullTitle": "TaxableIncome_Line252_6--Input F54960 (restricted farm loss from prior year) to exceed amount at F14100 (net farming income). Software must not allow...  //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14 =$ 65,000, SP, T4 Box 14= $50,000, T2121. Is this a partnerships vehicle =Yes. Shared with spouse 50%-50%. Motor vehicle: Partnership =Yes. Bus KM =100, Total KM =100. Gas Expenses =$ 10,000, CCA Class =Class 10, Opening UCC =$ 10,000. o you have assets on which capital cost allowance (depreciation) can be claimed  =Yes. Class No =6. UCC at start of the year =$ 100,000)    F8690 should be  allowed with amount    allow.value ==5",
                            "timedOut": false,
                            "duration": 1,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let insuranceFeild = fishingActivityCoOwnerDataId('8690');\nlet insurance = savedForm[ insuranceFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ insurance;\nassert.strictEqual( insurance, '5', ' Feild should be built');",
                            "err": {},
                            "uuid": "9cc7750e-2bd8-4b15-8274-5510d056112e",
                            "parentUUID": "c6058325-c366-41aa-9ae9-babae8b3dbe7",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F8710 should be  allowed with amount    allow.value ==6",
                            "fullTitle": "TaxableIncome_Line252_6--Input F54960 (restricted farm loss from prior year) to exceed amount at F14100 (net farming income). Software must not allow...  //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14 =$ 65,000, SP, T4 Box 14= $50,000, T2121. Is this a partnerships vehicle =Yes. Shared with spouse 50%-50%. Motor vehicle: Partnership =Yes. Bus KM =100, Total KM =100. Gas Expenses =$ 10,000, CCA Class =Class 10, Opening UCC =$ 10,000. o you have assets on which capital cost allowance (depreciation) can be claimed  =Yes. Class No =6. UCC at start of the year =$ 100,000)    F8710 should be  allowed with amount    allow.value ==6",
                            "timedOut": false,
                            "duration": 1,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let interestAndBankChargesFeild = fishingActivityCoOwnerDataId('8710');\nlet interestAndBankCharges = savedForm[ interestAndBankChargesFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ interestAndBankCharges;\nassert.strictEqual( interestAndBankCharges, '6', ' Feild should be built');",
                            "err": {},
                            "uuid": "9cd64d4b-27cb-4e06-a076-dd4b812bffca",
                            "parentUUID": "c6058325-c366-41aa-9ae9-babae8b3dbe7",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F8523 should be  allowed with amount    allow.value ==7",
                            "fullTitle": "TaxableIncome_Line252_6--Input F54960 (restricted farm loss from prior year) to exceed amount at F14100 (net farming income). Software must not allow...  //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14 =$ 65,000, SP, T4 Box 14= $50,000, T2121. Is this a partnerships vehicle =Yes. Shared with spouse 50%-50%. Motor vehicle: Partnership =Yes. Bus KM =100, Total KM =100. Gas Expenses =$ 10,000, CCA Class =Class 10, Opening UCC =$ 10,000. o you have assets on which capital cost allowance (depreciation) can be claimed  =Yes. Class No =6. UCC at start of the year =$ 100,000)    F8523 should be  allowed with amount    allow.value ==7",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let mealsAndEntertainmentFeild = fishingActivityCoOwnerDataId('8523');\nlet mealsAndEntertainment = savedForm[ mealsAndEntertainmentFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ mealsAndEntertainment;\nassert.strictEqual(mealsAndEntertainment, '7', ' Feild should be built');",
                            "err": {},
                            "uuid": "d52e0895-432b-40ae-8c1c-601656910ba9",
                            "parentUUID": "c6058325-c366-41aa-9ae9-babae8b3dbe7",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F8760 should be  allowed with amount    allow.value ==8",
                            "fullTitle": "TaxableIncome_Line252_6--Input F54960 (restricted farm loss from prior year) to exceed amount at F14100 (net farming income). Software must not allow...  //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14 =$ 65,000, SP, T4 Box 14= $50,000, T2121. Is this a partnerships vehicle =Yes. Shared with spouse 50%-50%. Motor vehicle: Partnership =Yes. Bus KM =100, Total KM =100. Gas Expenses =$ 10,000, CCA Class =Class 10, Opening UCC =$ 10,000. o you have assets on which capital cost allowance (depreciation) can be claimed  =Yes. Class No =6. UCC at start of the year =$ 100,000)    F8760 should be  allowed with amount    allow.value ==8",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let businessTaxeslicencesAndMembershipsFeild = fishingActivityCoOwnerDataId('8760');\nlet businessTaxeslicencesAndMemberships = savedForm[ businessTaxeslicencesAndMembershipsFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ businessTaxeslicencesAndMemberships;\nassert.strictEqual( businessTaxeslicencesAndMemberships, '8', ' Feild should be built');",
                            "err": {},
                            "uuid": "40cd14ab-ed03-4fd5-9a5a-1be930e0e095",
                            "parentUUID": "c6058325-c366-41aa-9ae9-babae8b3dbe7",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F9281 should be  allowed with amount    allow.value ==10000",
                            "fullTitle": "TaxableIncome_Line252_6--Input F54960 (restricted farm loss from prior year) to exceed amount at F14100 (net farming income). Software must not allow...  //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14 =$ 65,000, SP, T4 Box 14= $50,000, T2121. Is this a partnerships vehicle =Yes. Shared with spouse 50%-50%. Motor vehicle: Partnership =Yes. Bus KM =100, Total KM =100. Gas Expenses =$ 10,000, CCA Class =Class 10, Opening UCC =$ 10,000. o you have assets on which capital cost allowance (depreciation) can be claimed  =Yes. Class No =6. UCC at start of the year =$ 100,000)    F9281 should be  allowed with amount    allow.value ==10000",
                            "timedOut": false,
                            "duration": 1,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let motorVehicleExpensesNotIncludingCCAFeild = fishingActivityCoOwnerDataId('9281');\nlet motorVehicleExpensesNotIncludingCCA = savedForm[ motorVehicleExpensesNotIncludingCCAFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ motorVehicleExpensesNotIncludingCCA;\nassert.strictEqual(motorVehicleExpensesNotIncludingCCA, '10000', ' Feild should be built');",
                            "err": {},
                            "uuid": "8204bfe1-f669-48a6-ab3c-1fa594a73d7d",
                            "parentUUID": "c6058325-c366-41aa-9ae9-babae8b3dbe7",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F8810 should be  allowed with amount    allow.value ==10",
                            "fullTitle": "TaxableIncome_Line252_6--Input F54960 (restricted farm loss from prior year) to exceed amount at F14100 (net farming income). Software must not allow...  //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14 =$ 65,000, SP, T4 Box 14= $50,000, T2121. Is this a partnerships vehicle =Yes. Shared with spouse 50%-50%. Motor vehicle: Partnership =Yes. Bus KM =100, Total KM =100. Gas Expenses =$ 10,000, CCA Class =Class 10, Opening UCC =$ 10,000. o you have assets on which capital cost allowance (depreciation) can be claimed  =Yes. Class No =6. UCC at start of the year =$ 100,000)    F8810 should be  allowed with amount    allow.value ==10",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let officeExpensesFeild = fishingActivityCoOwnerDataId('8810');\nlet officeExpenses = savedForm[officeExpensesFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ officeExpenses;\nassert.strictEqual( officeExpenses, '10', ' Feild should be built');",
                            "err": {},
                            "uuid": "a809a342-e05f-4964-adac-6e8bd163917b",
                            "parentUUID": "c6058325-c366-41aa-9ae9-babae8b3dbe7",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F9137 should be  allowed with amount    allow.value ==9",
                            "fullTitle": "TaxableIncome_Line252_6--Input F54960 (restricted farm loss from prior year) to exceed amount at F14100 (net farming income). Software must not allow...  //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14 =$ 65,000, SP, T4 Box 14= $50,000, T2121. Is this a partnerships vehicle =Yes. Shared with spouse 50%-50%. Motor vehicle: Partnership =Yes. Bus KM =100, Total KM =100. Gas Expenses =$ 10,000, CCA Class =Class 10, Opening UCC =$ 10,000. o you have assets on which capital cost allowance (depreciation) can be claimed  =Yes. Class No =6. UCC at start of the year =$ 100,000)    F9137 should be  allowed with amount    allow.value ==9",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let netsAndTrapsFeild =fishingActivityCoOwnerDataId('9137');\nlet  netsAndTraps = savedForm[ netsAndTrapsFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ netsAndTraps;\nassert.strictEqual(  netsAndTraps, '9', ' Feild should be built');",
                            "err": {},
                            "uuid": "92a51dee-79d7-4c44-bb3a-85989ee67412",
                            "parentUUID": "c6058325-c366-41aa-9ae9-babae8b3dbe7",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F8860 should be  allowed with amount    allow.value ==11",
                            "fullTitle": "TaxableIncome_Line252_6--Input F54960 (restricted farm loss from prior year) to exceed amount at F14100 (net farming income). Software must not allow...  //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14 =$ 65,000, SP, T4 Box 14= $50,000, T2121. Is this a partnerships vehicle =Yes. Shared with spouse 50%-50%. Motor vehicle: Partnership =Yes. Bus KM =100, Total KM =100. Gas Expenses =$ 10,000, CCA Class =Class 10, Opening UCC =$ 10,000. o you have assets on which capital cost allowance (depreciation) can be claimed  =Yes. Class No =6. UCC at start of the year =$ 100,000)    F8860 should be  allowed with amount    allow.value ==11",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let professionalFeesIncludeslegalAndAccountingFeesFeild = fishingActivityCoOwnerDataId('8860');\nlet professionalFeesIncludeslegalAndAccountingFees = savedForm[ professionalFeesIncludeslegalAndAccountingFeesFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ professionalFeesIncludeslegalAndAccountingFees;\nassert.strictEqual( professionalFeesIncludeslegalAndAccountingFees, '11', ' Feild should be built');",
                            "err": {},
                            "uuid": "1a65b9dc-87d5-46e3-b562-6fdbd6c0681e",
                            "parentUUID": "c6058325-c366-41aa-9ae9-babae8b3dbe7",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F9060 should be  allowed with amount    allow.value ==12",
                            "fullTitle": "TaxableIncome_Line252_6--Input F54960 (restricted farm loss from prior year) to exceed amount at F14100 (net farming income). Software must not allow...  //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14 =$ 65,000, SP, T4 Box 14= $50,000, T2121. Is this a partnerships vehicle =Yes. Shared with spouse 50%-50%. Motor vehicle: Partnership =Yes. Bus KM =100, Total KM =100. Gas Expenses =$ 10,000, CCA Class =Class 10, Opening UCC =$ 10,000. o you have assets on which capital cost allowance (depreciation) can be claimed  =Yes. Class No =6. UCC at start of the year =$ 100,000)    F9060 should be  allowed with amount    allow.value ==12",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let salariesWagesAndBenefitsIncludingEmployersContributionsFeild = fishingActivityCoOwnerDataId('9060');\nlet salariesWagesAndBenefitsIncludingEmployersContributions = savedForm[ salariesWagesAndBenefitsIncludingEmployersContributionsFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ salariesWagesAndBenefitsIncludingEmployersContributions;\nassert.strictEqual( salariesWagesAndBenefitsIncludingEmployersContributions, '12', ' Feild should be built');",
                            "err": {},
                            "uuid": "9eacf2e4-c766-4a8e-83c3-4bc146bd88b4",
                            "parentUUID": "c6058325-c366-41aa-9ae9-babae8b3dbe7",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F8963 should be  allowed with amount    allow.value ==26",
                            "fullTitle": "TaxableIncome_Line252_6--Input F54960 (restricted farm loss from prior year) to exceed amount at F14100 (net farming income). Software must not allow...  //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14 =$ 65,000, SP, T4 Box 14= $50,000, T2121. Is this a partnerships vehicle =Yes. Shared with spouse 50%-50%. Motor vehicle: Partnership =Yes. Bus KM =100, Total KM =100. Gas Expenses =$ 10,000, CCA Class =Class 10, Opening UCC =$ 10,000. o you have assets on which capital cost allowance (depreciation) can be claimed  =Yes. Class No =6. UCC at start of the year =$ 100,000)    F8963 should be  allowed with amount    allow.value ==26",
                            "timedOut": false,
                            "duration": 1,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let repairsAndMaintenanceFeild = fishingActivityCoOwnerDataId('8963');\nlet repairsAndMaintenance = savedForm[ repairsAndMaintenanceFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ repairsAndMaintenance;\nassert.strictEqual( repairsAndMaintenance, '26', ' Feild should be built');",
                            "err": {},
                            "uuid": "d6219d56-0516-4446-ba7a-b32b32b1682b",
                            "parentUUID": "c6058325-c366-41aa-9ae9-babae8b3dbe7",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F9936 should be  allowed with amount    allow.value ==12181",
                            "fullTitle": "TaxableIncome_Line252_6--Input F54960 (restricted farm loss from prior year) to exceed amount at F14100 (net farming income). Software must not allow...  //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14 =$ 65,000, SP, T4 Box 14= $50,000, T2121. Is this a partnerships vehicle =Yes. Shared with spouse 50%-50%. Motor vehicle: Partnership =Yes. Bus KM =100, Total KM =100. Gas Expenses =$ 10,000, CCA Class =Class 10, Opening UCC =$ 10,000. o you have assets on which capital cost allowance (depreciation) can be claimed  =Yes. Class No =6. UCC at start of the year =$ 100,000)    F9936 should be  allowed with amount    allow.value ==12181",
                            "timedOut": false,
                            "duration": 1,
                            "state": "failed",
                            "speed": null,
                            "pass": false,
                            "fail": true,
                            "pending": false,
                            "context": null,
                            "code": "let capitalCostAllowanceFeild =fishingActivityCoOwnerDataId('9936');\nlet  capitalCostAllowance = savedForm[  capitalCostAllowanceFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+  capitalCostAllowance;\nassert.strictEqual(  capitalCostAllowance, '4000', ' Feild should be built');",
                            "err": {
                                "message": "AssertionError:  Feild should be built",
                                "estack": "AssertionError [ERR_ASSERTION]:  Feild should be built\n    at Context.<anonymous> (my_work\\test_for_report_2020\\NETINC_2020\\tcTaxableIncome_Line252_6.js:243:20)\n    at processImmediate (internal/timers.js:456:21)",
                                "diff": "- 12181\n+ 4000\n"
                            },
                            "uuid": "8c1b8994-cbfc-41cb-afdb-604f7ab40c04",
                            "parentUUID": "c6058325-c366-41aa-9ae9-babae8b3dbe7",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F9270 should be  allowed with amount    allow.value ==18",
                            "fullTitle": "TaxableIncome_Line252_6--Input F54960 (restricted farm loss from prior year) to exceed amount at F14100 (net farming income). Software must not allow...  //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14 =$ 65,000, SP, T4 Box 14= $50,000, T2121. Is this a partnerships vehicle =Yes. Shared with spouse 50%-50%. Motor vehicle: Partnership =Yes. Bus KM =100, Total KM =100. Gas Expenses =$ 10,000, CCA Class =Class 10, Opening UCC =$ 10,000. o you have assets on which capital cost allowance (depreciation) can be claimed  =Yes. Class No =6. UCC at start of the year =$ 100,000)    F9270 should be  allowed with amount    allow.value ==18",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let otherExpensesFeild = fishingActivityCoOwnerDataId('9270');\nlet otherExpenses = savedForm[ otherExpensesFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ otherExpenses;\nassert.strictEqual( otherExpenses, '18', ' Feild should be built');",
                            "err": {},
                            "uuid": "745ac937-4046-44c4-9a49-4617087404b9",
                            "parentUUID": "c6058325-c366-41aa-9ae9-babae8b3dbe7",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F9368 should be  allowed with amount    allow.value ==22303",
                            "fullTitle": "TaxableIncome_Line252_6--Input F54960 (restricted farm loss from prior year) to exceed amount at F14100 (net farming income). Software must not allow...  //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14 =$ 65,000, SP, T4 Box 14= $50,000, T2121. Is this a partnerships vehicle =Yes. Shared with spouse 50%-50%. Motor vehicle: Partnership =Yes. Bus KM =100, Total KM =100. Gas Expenses =$ 10,000, CCA Class =Class 10, Opening UCC =$ 10,000. o you have assets on which capital cost allowance (depreciation) can be claimed  =Yes. Class No =6. UCC at start of the year =$ 100,000)    F9368 should be  allowed with amount    allow.value ==22303",
                            "timedOut": false,
                            "duration": 0,
                            "state": "failed",
                            "speed": null,
                            "pass": false,
                            "fail": true,
                            "pending": false,
                            "context": null,
                            "code": "let totalExpensesFeild = fishingActivityCoOwnerDataId('9368');\nlet totalExpenses = savedForm[ totalExpensesFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+totalExpenses;\nassert.strictEqual( totalExpenses, '14122', ' Feild should be built');",
                            "err": {
                                "message": "AssertionError:  Feild should be built",
                                "estack": "AssertionError [ERR_ASSERTION]:  Feild should be built\n    at Context.<anonymous> (my_work\\test_for_report_2020\\NETINC_2020\\tcTaxableIncome_Line252_6.js:256:20)\n    at processImmediate (internal/timers.js:456:21)",
                                "diff": "- 22303\n+ 14122\n"
                            },
                            "uuid": "d33d90d7-526d-419d-9aae-927314c4a023",
                            "parentUUID": "c6058325-c366-41aa-9ae9-babae8b3dbe7",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F9369 should be  allowed with amount    allow.value ==77718",
                            "fullTitle": "TaxableIncome_Line252_6--Input F54960 (restricted farm loss from prior year) to exceed amount at F14100 (net farming income). Software must not allow...  //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14 =$ 65,000, SP, T4 Box 14= $50,000, T2121. Is this a partnerships vehicle =Yes. Shared with spouse 50%-50%. Motor vehicle: Partnership =Yes. Bus KM =100, Total KM =100. Gas Expenses =$ 10,000, CCA Class =Class 10, Opening UCC =$ 10,000. o you have assets on which capital cost allowance (depreciation) can be claimed  =Yes. Class No =6. UCC at start of the year =$ 100,000)    F9369 should be  allowed with amount    allow.value ==77718",
                            "timedOut": false,
                            "duration": 1,
                            "state": "failed",
                            "speed": null,
                            "pass": false,
                            "fail": true,
                            "pending": false,
                            "context": null,
                            "code": "let netIncomelossBeforeAdjustmentsFeild = fishingActivityCoOwnerDataId('9369');\nlet netIncomelossBeforeAdjustments = savedForm[ netIncomelossBeforeAdjustmentsFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ netIncomelossBeforeAdjustments;\nassert.strictEqual(netIncomelossBeforeAdjustments, '14093', ' Feild should be built');",
                            "err": {
                                "message": "AssertionError:  Feild should be built",
                                "estack": "AssertionError [ERR_ASSERTION]:  Feild should be built\n    at Context.<anonymous> (my_work\\test_for_report_2020\\NETINC_2020\\tcTaxableIncome_Line252_6.js:262:20)\n    at processImmediate (internal/timers.js:456:21)",
                                "diff": "- 77718\n+ 14093\n"
                            },
                            "uuid": "b831c715-a28b-4a31-8c8b-a38f5859e7d5",
                            "parentUUID": "c6058325-c366-41aa-9ae9-babae8b3dbe7",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F9974 should be  allowed with amount    allow.value ==17",
                            "fullTitle": "TaxableIncome_Line252_6--Input F54960 (restricted farm loss from prior year) to exceed amount at F14100 (net farming income). Software must not allow...  //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14 =$ 65,000, SP, T4 Box 14= $50,000, T2121. Is this a partnerships vehicle =Yes. Shared with spouse 50%-50%. Motor vehicle: Partnership =Yes. Bus KM =100, Total KM =100. Gas Expenses =$ 10,000, CCA Class =Class 10, Opening UCC =$ 10,000. o you have assets on which capital cost allowance (depreciation) can be claimed  =Yes. Class No =6. UCC at start of the year =$ 100,000)    F9974 should be  allowed with amount    allow.value ==17",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let gSTHSTRebateForPartnersReceivedInTheYearFeild = fishingActivityCoOwnerDataId('9974');\nlet gSTHSTRebateForPartnersReceivedInTheYear = savedForm[ gSTHSTRebateForPartnersReceivedInTheYearFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ gSTHSTRebateForPartnersReceivedInTheYear;\nassert.strictEqual( gSTHSTRebateForPartnersReceivedInTheYear, '17', ' Feild should be built');",
                            "err": {},
                            "uuid": "4ad2317c-46e6-4467-8825-22a641fd0da1",
                            "parentUUID": "c6058325-c366-41aa-9ae9-babae8b3dbe7",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F9946 should be  allowed with amount    allow.value ==38876",
                            "fullTitle": "TaxableIncome_Line252_6--Input F54960 (restricted farm loss from prior year) to exceed amount at F14100 (net farming income). Software must not allow...  //(Linked, TP=50 years, SP= 50 Years: TPs T4 Box 14 =$ 65,000, SP, T4 Box 14= $50,000, T2121. Is this a partnerships vehicle =Yes. Shared with spouse 50%-50%. Motor vehicle: Partnership =Yes. Bus KM =100, Total KM =100. Gas Expenses =$ 10,000, CCA Class =Class 10, Opening UCC =$ 10,000. o you have assets on which capital cost allowance (depreciation) can be claimed  =Yes. Class No =6. UCC at start of the year =$ 100,000)    F9946 should be  allowed with amount    allow.value ==38876",
                            "timedOut": false,
                            "duration": 1,
                            "state": "failed",
                            "speed": null,
                            "pass": false,
                            "fail": true,
                            "pending": false,
                            "context": null,
                            "code": "let yourNetIncomelossFeild = fishingActivityCoOwnerDataId('9946');\nlet  yourNetIncomeloss = savedForm[  yourNetIncomelossFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+  yourNetIncomeloss;\nassert.strictEqual(  yourNetIncomeloss, '7030', ' Feild should be built');",
                            "err": {
                                "message": "AssertionError:  Feild should be built",
                                "estack": "AssertionError [ERR_ASSERTION]:  Feild should be built\n    at Context.<anonymous> (my_work\\test_for_report_2020\\NETINC_2020\\tcTaxableIncome_Line252_6.js:274:20)\n    at processImmediate (internal/timers.js:456:21)",
                                "diff": "- 38876\n+ 7030\n"
                            },
                            "uuid": "90645ef2-c2a8-4da1-9ca2-8520146916dd",
                            "parentUUID": "c6058325-c366-41aa-9ae9-babae8b3dbe7",
                            "isHook": false,
                            "skipped": false
                        }
                    ],
                    "suites": [],
                    "passes": [
                        "4b97de75-2f8b-4142-b0a8-5fea8e4a50f3",
                        "68faca4c-c7a0-4a34-be5d-c663336b35a9",
                        "e21d4415-7fbb-440b-9335-a45fcd54da59",
                        "e1f3af2d-4ff7-47c6-8fa9-d0c21f33298f",
                        "32e72933-7201-4e78-b918-ecdaed2fc15e",
                        "92746955-c5f3-4437-93b5-0fb66b97cfb4",
                        "9cc7750e-2bd8-4b15-8274-5510d056112e",
                        "9cd64d4b-27cb-4e06-a076-dd4b812bffca",
                        "d52e0895-432b-40ae-8c1c-601656910ba9",
                        "40cd14ab-ed03-4fd5-9a5a-1be930e0e095",
                        "8204bfe1-f669-48a6-ab3c-1fa594a73d7d",
                        "a809a342-e05f-4964-adac-6e8bd163917b",
                        "92a51dee-79d7-4c44-bb3a-85989ee67412",
                        "1a65b9dc-87d5-46e3-b562-6fdbd6c0681e",
                        "9eacf2e4-c766-4a8e-83c3-4bc146bd88b4",
                        "d6219d56-0516-4446-ba7a-b32b32b1682b",
                        "745ac937-4046-44c4-9a49-4617087404b9",
                        "4ad2317c-46e6-4467-8825-22a641fd0da1"
                    ],
                    "failures": [
                        "63e3c393-e201-47ba-8dd8-ff863d85f076",
                        "1cad7053-c05e-48fd-94b6-a0fc671468ab",
                        "8c1b8994-cbfc-41cb-afdb-604f7ab40c04",
                        "d33d90d7-526d-419d-9aae-927314c4a023",
                        "b831c715-a28b-4a31-8c8b-a38f5859e7d5",
                        "90645ef2-c2a8-4da1-9ca2-8520146916dd"
                    ],
                    "pending": [],
                    "skipped": [],
                    "duration": 7,
                    "root": false,
                    "rootEmpty": false,
                    "_timeout": 150000
                },
                {
                    "uuid": "862e2946-bdb5-4b5a-9533-3aa393abad54",
                    "title": "TaxableIncome_Line252_7 -Input F25500 without any supporting fields from T2222 (Northern Residents Deductions). Software must not allow.    //(TP T4s Box 14 =$ 35,000. Deduction>RareSituations>Do you qualify to claim Northern resident deduction?>Time period you lived in Zone A = Jan 01 to Dec 31 Current year. Days for additional deduction =365. Details of travel: Medical. Employment benefit =$ 3,300. Travel Expenses =$ 5,000, Lowest return air fare =$ 5,000. Zone =A. Add new  Tab. Choose= Other, Employment benefit= $ 3,200, Travel expenses =$ 10,000, Lowest return air fare = $ 10,000. Zone =A)  ",
                    "fullFile": "D:\\Rita\\taxtron\\code\\TaxTronWebTests\\my_work\\test_for_report_2020\\TCASES\\tcTaxableIncome_Line252_7.js",
                    "file": "\\my_work\\test_for_report_2020\\TCASES\\tcTaxableIncome_Line252_7.js",
                    "beforeHooks": [
                        {
                            "title": "\"before all\" hook",
                            "fullTitle": "TaxableIncome_Line252_7 -Input F25500 without any supporting fields from T2222 (Northern Residents Deductions). Software must not allow.    //(TP T4s Box 14 =$ 35,000. Deduction>RareSituations>Do you qualify to claim Northern resident deduction?>Time period you lived in Zone A = Jan 01 to Dec 31 Current year. Days for additional deduction =365. Details of travel: Medical. Employment benefit =$ 3,300. Travel Expenses =$ 5,000, Lowest return air fare =$ 5,000. Zone =A. Add new  Tab. Choose= Other, Employment benefit= $ 3,200, Travel expenses =$ 10,000, Lowest return air fare = $ 10,000. Zone =A)   \"before all\" hook",
                            "timedOut": false,
                            "duration": 64314,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "driver = new Builder()\n\t.withCapabilities(Capabilities.chrome().setAcceptInsecureCerts(true))\n\t.build();\ndriver.manage().window().setRect({ width: 1366, height: 768 });\nawait login(driver, 'ritakumar@outlook.com', 'rishu12rashi');\nawait selectNewReturn(driver,province);\nawait switchToastOff(driver);\n        await setInputById(driver, 'Firstnames0', 'henry');\nawait setInputById(driver, 'Surname0', 'Farm');\nawait selectDateById(driver, 'DOB0', '1975/01/01');\nawait setInputById(driver, 'SIN0', '100000009');\nawait selectComboById(driver, 'MaritalStatus0', 'Single');\nawait nextClick(driver);\nawait addressExpandClick(driver, 'fullAdd');\nawait setInputById(driver, 'StreetNo0', '11');\nawait setInputById(driver, 'StreetName0', 'bn');\nawait setInputById(driver, 'City0', 'nb');\nawait selectComboById(driver, 'ProvinceOfRes0', 'Northwest Territories');\n        await setInputById(driver, 'PCodeC0', 'X0E 0A0');\n        await selectToggleById(driver, 'bDisabled0', '1');\n        await selectToggleById(driver, 'quesFP0', '0');\nawait selectToggleById(driver, 'quesPrinResi0', '0');\nawait selectToggleById(driver, 'qCitizen0', '1');\nawait selectToggleById(driver, 'allowCra0', '1');\n        await nextClick(driver);\nawait selectTab(driver, 'Income');\nawait selectToggleById(driver, 'WorkedInYOR0', '1');\n        await clickDivById(driver, 'T40tp');\n        await nextClick(driver);\n        await setInputById(driver, 'T4B140', '35000');\n        await selectComboById(driver, 'T4_Box100', 'NT');\n        await nextClick(driver);\n        await selectTab(driver, 'Deduction');\n        await selectTab(driver, 'RareSituations');\nawait selectToggleById(driver, 'qNorthern0tp', '1');\n        await nextClick(driver);\n        await selectAgeDateById(driver, 'NRADate10tp',  Fed.TaxYear,'0','/01/01');\n        await selectAgeDateById(driver, 'NRADate20tp', Fed.TaxYear,'0','/12/31');\n        await setInputById(driver, 'T2222_250tp', '365');\n        await selectToggleById(driver, 'NRPurpose0tp', '1');\n        await setInputById(driver, 'NRBenefit0tp', '3300');\n        await setInputById(driver, 'NRCost0tp', '5000');\n        await setInputById(driver, 'NRLowest0tp', '5000');\n        await selectToggleById(driver, 'TAB0tp', '1');\n        await setInputById(driver, 'NRName0tp', 'ASDEA');\n        await addTabT2222_2AtrClick(driver);\n        await selectToggleById(driver, 'NRPurpose1tp', '2');\n        await setInputById(driver, 'NRBenefit1tp', '3200');\n        await setInputById(driver, 'NRCost1tp', '10000');\n        await setInputById(driver, 'NRLowest1tp', '10000');\n        await selectToggleById(driver, 'TAB1tp', '1');\n        await nextClick(driver);\n        savedForm = await getServerFile(driver);",
                            "err": {},
                            "uuid": "d55f873a-b201-4bf3-b5d8-0fa39591596c",
                            "parentUUID": "862e2946-bdb5-4b5a-9533-3aa393abad54",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "afterHooks": [
                        {
                            "title": "\"after all\" hook",
                            "fullTitle": "TaxableIncome_Line252_7 -Input F25500 without any supporting fields from T2222 (Northern Residents Deductions). Software must not allow.    //(TP T4s Box 14 =$ 35,000. Deduction>RareSituations>Do you qualify to claim Northern resident deduction?>Time period you lived in Zone A = Jan 01 to Dec 31 Current year. Days for additional deduction =365. Details of travel: Medical. Employment benefit =$ 3,300. Travel Expenses =$ 5,000, Lowest return air fare =$ 5,000. Zone =A. Add new  Tab. Choose= Other, Employment benefit= $ 3,200, Travel expenses =$ 10,000, Lowest return air fare = $ 10,000. Zone =A)   \"after all\" hook",
                            "timedOut": false,
                            "duration": 5575,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "await logoutById(driver);\nawait driver.quit();",
                            "err": {},
                            "uuid": "7acbf16d-063e-417b-91cd-f0fcf744d6c4",
                            "parentUUID": "862e2946-bdb5-4b5a-9533-3aa393abad54",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "tests": [
                        {
                            "title": "  F67490 Software must  allow.   allow.value ==8041",
                            "fullTitle": "TaxableIncome_Line252_7 -Input F25500 without any supporting fields from T2222 (Northern Residents Deductions). Software must not allow.    //(TP T4s Box 14 =$ 35,000. Deduction>RareSituations>Do you qualify to claim Northern resident deduction?>Time period you lived in Zone A = Jan 01 to Dec 31 Current year. Days for additional deduction =365. Details of travel: Medical. Employment benefit =$ 3,300. Travel Expenses =$ 5,000, Lowest return air fare =$ 5,000. Zone =A. Add new  Tab. Choose= Other, Employment benefit= $ 3,200, Travel expenses =$ 10,000, Lowest return air fare = $ 10,000. Zone =A)     F67490 Software must  allow.   allow.value ==8041",
                            "timedOut": false,
                            "duration": 0,
                            "state": "failed",
                            "speed": null,
                            "pass": false,
                            "fail": true,
                            "pending": false,
                            "context": null,
                            "code": "let maximumResidencyAmountForResidentsOfPrescribedNorthernzonesFeild = getFieldId('67490');\n\t\tlet maximumResidencyAmountForResidentsOfPrescribedNorthernzones = savedForm[maximumResidencyAmountForResidentsOfPrescribedNorthernzonesFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+maximumResidencyAmountForResidentsOfPrescribedNorthernzones;\nassert.strictEqual (maximumResidencyAmountForResidentsOfPrescribedNorthernzones , '8030','F67490 should be built .');",
                            "err": {
                                "message": "AssertionError [ERR_ASSERTION]: F67490 should be built .",
                                "estack": "AssertionError [ERR_ASSERTION]: F67490 should be built .\n    at Context.<anonymous> (my_work\\test_for_report_2020\\TCASES\\tcTaxableIncome_Line252_7.js:74:16)",
                                "diff": "- 8041\n+ 8030\n"
                            },
                            "uuid": "15268858-ff51-4930-88bb-22c725814354",
                            "parentUUID": "862e2946-bdb5-4b5a-9533-3aa393abad54",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": "  F67507 Software must  allow.   allow.value ==undefined",
                            "fullTitle": "TaxableIncome_Line252_7 -Input F25500 without any supporting fields from T2222 (Northern Residents Deductions). Software must not allow.    //(TP T4s Box 14 =$ 35,000. Deduction>RareSituations>Do you qualify to claim Northern resident deduction?>Time period you lived in Zone A = Jan 01 to Dec 31 Current year. Days for additional deduction =365. Details of travel: Medical. Employment benefit =$ 3,300. Travel Expenses =$ 5,000, Lowest return air fare =$ 5,000. Zone =A. Add new  Tab. Choose= Other, Employment benefit= $ 3,200, Travel expenses =$ 10,000, Lowest return air fare = $ 10,000. Zone =A)     F67507 Software must  allow.   allow.value ==undefined",
                            "timedOut": false,
                            "duration": 0,
                            "state": "failed",
                            "speed": null,
                            "pass": false,
                            "fail": true,
                            "pending": false,
                            "context": null,
                            "code": "let nonTaxableBenefitsForBoardAndlodgingAtASpecialWorkSiteInAprescribedNorthernZoneFeild = getFieldId('67507');\n\t\tlet nonTaxableBenefitsForBoardAndlodgingAtASpecialWorkSiteInAprescribedNorthernZone = savedForm[nonTaxableBenefitsForBoardAndlodgingAtASpecialWorkSiteInAprescribedNorthernZoneFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+nonTaxableBenefitsForBoardAndlodgingAtASpecialWorkSiteInAprescribedNorthernZone;\nassert.strictEqual(nonTaxableBenefitsForBoardAndlodgingAtASpecialWorkSiteInAprescribedNorthernZone , '3100','F67507 should be built .');",
                            "err": {
                                "message": "AssertionError [ERR_ASSERTION]: F67507 should be built .",
                                "estack": "AssertionError [ERR_ASSERTION]: F67507 should be built .\n    at Context.<anonymous> (my_work\\test_for_report_2020\\TCASES\\tcTaxableIncome_Line252_7.js:80:16)",
                                "diff": null
                            },
                            "uuid": "f6fae701-f98c-4181-8c9c-9c9637cabfd8",
                            "parentUUID": "862e2946-bdb5-4b5a-9533-3aa393abad54",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": "  F67540 Software must  allow.   allow.value ==6500",
                            "fullTitle": "TaxableIncome_Line252_7 -Input F25500 without any supporting fields from T2222 (Northern Residents Deductions). Software must not allow.    //(TP T4s Box 14 =$ 35,000. Deduction>RareSituations>Do you qualify to claim Northern resident deduction?>Time period you lived in Zone A = Jan 01 to Dec 31 Current year. Days for additional deduction =365. Details of travel: Medical. Employment benefit =$ 3,300. Travel Expenses =$ 5,000, Lowest return air fare =$ 5,000. Zone =A. Add new  Tab. Choose= Other, Employment benefit= $ 3,200, Travel expenses =$ 10,000, Lowest return air fare = $ 10,000. Zone =A)     F67540 Software must  allow.   allow.value ==6500",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let totalTravelAmountForTripsFromAPrescribedNorthernZoneFeild = getFieldId('67540');\n\t\tlet totalTravelAmountForTripsFromAPrescribedNorthernZone = savedForm[totalTravelAmountForTripsFromAPrescribedNorthernZoneFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+totalTravelAmountForTripsFromAPrescribedNorthernZone;\nassert.strictEqual(totalTravelAmountForTripsFromAPrescribedNorthernZone , '6500','F67540 should be built .');",
                            "err": {},
                            "uuid": "c3c26e26-3793-4f88-b23f-f9ad41cd05ea",
                            "parentUUID": "862e2946-bdb5-4b5a-9533-3aa393abad54",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": "  F25500 Software must  allow.   allow.value ==13500",
                            "fullTitle": "TaxableIncome_Line252_7 -Input F25500 without any supporting fields from T2222 (Northern Residents Deductions). Software must not allow.    //(TP T4s Box 14 =$ 35,000. Deduction>RareSituations>Do you qualify to claim Northern resident deduction?>Time period you lived in Zone A = Jan 01 to Dec 31 Current year. Days for additional deduction =365. Details of travel: Medical. Employment benefit =$ 3,300. Travel Expenses =$ 5,000, Lowest return air fare =$ 5,000. Zone =A. Add new  Tab. Choose= Other, Employment benefit= $ 3,200, Travel expenses =$ 10,000, Lowest return air fare = $ 10,000. Zone =A)     F25500 Software must  allow.   allow.value ==13500",
                            "timedOut": false,
                            "duration": 0,
                            "state": "failed",
                            "speed": null,
                            "pass": false,
                            "fail": true,
                            "pending": false,
                            "context": null,
                            "code": "let northernResidentsDeductionsFeild = getFieldId('25500');\n\t\tlet  northernResidentsDeductions = savedForm[ northernResidentsDeductionsFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+ northernResidentsDeductions;\nassert.strictEqual( northernResidentsDeductions , '11430','F25500 should be built .');",
                            "err": {
                                "message": "AssertionError [ERR_ASSERTION]: F25500 should be built .",
                                "estack": "AssertionError [ERR_ASSERTION]: F25500 should be built .\n    at Context.<anonymous> (my_work\\test_for_report_2020\\TCASES\\tcTaxableIncome_Line252_7.js:93:16)",
                                "diff": "- 13500\n+ 11430\n"
                            },
                            "uuid": "d425b2f9-4add-4ca3-b826-ad3673d8145f",
                            "parentUUID": "862e2946-bdb5-4b5a-9533-3aa393abad54",
                            "isHook": false,
                            "skipped": false
                        }
                    ],
                    "suites": [],
                    "passes": [
                        "c3c26e26-3793-4f88-b23f-f9ad41cd05ea"
                    ],
                    "failures": [
                        "15268858-ff51-4930-88bb-22c725814354",
                        "f6fae701-f98c-4181-8c9c-9c9637cabfd8",
                        "d425b2f9-4add-4ca3-b826-ad3673d8145f"
                    ],
                    "pending": [],
                    "skipped": [],
                    "duration": 0,
                    "root": false,
                    "rootEmpty": false,
                    "_timeout": 150000
                },
                {
                    "uuid": "98ce3eba-4497-4521-a92c-0ba909c64fbb",
                    "title": "TaxableIncome_Line252_8 -Input F25500 without any supporting fields from T2222 (Northern Residents Deductions). Software must not allow.    //(TP T4s Box 14 =$ 35,000. Deduction>RareSituations>Do you qualify to claim Northern resident deduction?>Time period you lived in Zone B = Jan 01 to Dec 31 Current year. Days for additional deduction =365. Details of travel: Medical. Employment benefit =$ 3,300. Travel Expenses =$ 5,000, Lowest return air fare =$ 5,000. Zone =A. Add new  Tab. Choose= Other, Employment benefit= $ 3,200, Travel expenses =$ 10,000, Lowest return air fare = $ 10,000. Zone =B)  ",
                    "fullFile": "E:\\Rita\\Taxtron\\WebTest\\my_work\\test_for_report_2020\\NETINC_2020\\tcTaxableIncome_Line252_8.js",
                    "file": "\\my_work\\test_for_report_2020\\NETINC_2020\\tcTaxableIncome_Line252_8.js",
                    "beforeHooks": [
                        {
                            "title": "\"before all\" hook",
                            "fullTitle": "TaxableIncome_Line252_8 -Input F25500 without any supporting fields from T2222 (Northern Residents Deductions). Software must not allow.    //(TP T4s Box 14 =$ 35,000. Deduction>RareSituations>Do you qualify to claim Northern resident deduction?>Time period you lived in Zone B = Jan 01 to Dec 31 Current year. Days for additional deduction =365. Details of travel: Medical. Employment benefit =$ 3,300. Travel Expenses =$ 5,000, Lowest return air fare =$ 5,000. Zone =A. Add new  Tab. Choose= Other, Employment benefit= $ 3,200, Travel expenses =$ 10,000, Lowest return air fare = $ 10,000. Zone =B)   \"before all\" hook",
                            "timedOut": false,
                            "duration": 69877,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "driver = new Builder()\n\t.withCapabilities(Capabilities.chrome().setAcceptInsecureCerts(true))\n\t.build();\ndriver.manage().window().setRect({ width: 1366, height: 768 });\nawait login(driver, 'ritakumar@outlook.com', 'rishu12rashi');\nawait selectNewReturn(driver,province);\nawait switchToastOff(driver);\n        await setInputById(driver, 'Firstnames0', 'henry');\nawait setInputById(driver, 'Surname0', 'Farm');\nawait selectDateById(driver, 'DOB0', '1975/01/01');\nawait setInputById(driver, 'SIN0', '100000009');\nawait selectComboById(driver, 'MaritalStatus0', 'Single');\nawait nextClick(driver);\nawait addressExpandClick(driver, 'fullAdd');\nawait setInputById(driver, 'StreetNo0', '11');\nawait setInputById(driver, 'StreetName0', 'bn');\nawait setInputById(driver, 'City0', 'nb');\nawait selectComboById(driver, 'ProvinceOfRes0', 'Northwest Territories');\n        await setInputById(driver, 'PCodeC0', 'X0E 0A0');\n        await selectToggleById(driver, 'bDisabled0', '0');\n        await selectToggleById(driver, 'quesFP0', '0');\nawait selectToggleById(driver, 'quesPrinResi0', '0');\nawait selectToggleById(driver, 'qCitizen0', '1');\nawait selectToggleById(driver, 'allowCra0', '1');\n        await nextClick(driver);\nawait selectTab(driver, 'Income');\nawait selectToggleById(driver, 'WorkedInYOR0', '1');\n        await clickDivById(driver, 'T40tp');\n        await nextClick(driver);\n        await setInputById(driver, 'T4B140', '35000');\n        await selectComboById(driver, 'T4_Box100', 'NT');\n        await nextClick(driver);\n        await selectTab(driver, 'Deduction');\n        await selectTab(driver, 'RareSituations');\nawait selectToggleById(driver, 'qNorthern0tp', '1');\n        await nextClick(driver);\n        await selectAgeDateById(driver, 'NRBDate10tp',  Fed.TaxYear,'0','/01/01');\n        await selectAgeDateById(driver, 'NRBDate20tp', Fed.TaxYear,'0','/12/31');\n        await setInputById(driver, 'T2222_250tp', '365');\n        await selectToggleById(driver, 'NRPurpose0tp', '1');\n        await setInputById(driver, 'NRBenefit0tp', '3300');\n        await setInputById(driver, 'NRCost0tp', '5000');\n        await setInputById(driver, 'NRLowest0tp', '5000');\n        await selectToggleById(driver, 'TAB0tp', '2');\n        await setInputById(driver, 'NRName0tp', 'ASDEA');\n        await addTabT2222_2AtrClick(driver);\n        await selectToggleById(driver, 'NRPurpose1tp', '2');\n        await setInputById(driver, 'NRBenefit1tp', '3200');\n        await setInputById(driver, 'NRCost1tp', '10000');\n        await setInputById(driver, 'NRLowest1tp', '10000');\n        await selectToggleById(driver, 'TAB1tp', '2');\n        await nextClick(driver);\n        savedForm = await getServerFile(driver);",
                            "err": {},
                            "uuid": "9ff3f80f-053f-4182-8484-f51cdd7b5165",
                            "parentUUID": "98ce3eba-4497-4521-a92c-0ba909c64fbb",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "afterHooks": [
                        {
                            "title": "\"after all\" hook",
                            "fullTitle": "TaxableIncome_Line252_8 -Input F25500 without any supporting fields from T2222 (Northern Residents Deductions). Software must not allow.    //(TP T4s Box 14 =$ 35,000. Deduction>RareSituations>Do you qualify to claim Northern resident deduction?>Time period you lived in Zone B = Jan 01 to Dec 31 Current year. Days for additional deduction =365. Details of travel: Medical. Employment benefit =$ 3,300. Travel Expenses =$ 5,000, Lowest return air fare =$ 5,000. Zone =A. Add new  Tab. Choose= Other, Employment benefit= $ 3,200, Travel expenses =$ 10,000, Lowest return air fare = $ 10,000. Zone =B)   \"after all\" hook",
                            "timedOut": false,
                            "duration": 5532,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "await logoutById(driver);\nawait driver.quit();",
                            "err": {},
                            "uuid": "c24e1226-db6b-4401-9800-516b7e2fe51f",
                            "parentUUID": "98ce3eba-4497-4521-a92c-0ba909c64fbb",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "tests": [
                        {
                            "title": "  F67520 Software must  allow.   allow.value ==2013",
                            "fullTitle": "TaxableIncome_Line252_8 -Input F25500 without any supporting fields from T2222 (Northern Residents Deductions). Software must not allow.    //(TP T4s Box 14 =$ 35,000. Deduction>RareSituations>Do you qualify to claim Northern resident deduction?>Time period you lived in Zone B = Jan 01 to Dec 31 Current year. Days for additional deduction =365. Details of travel: Medical. Employment benefit =$ 3,300. Travel Expenses =$ 5,000, Lowest return air fare =$ 5,000. Zone =A. Add new  Tab. Choose= Other, Employment benefit= $ 3,200, Travel expenses =$ 10,000, Lowest return air fare = $ 10,000. Zone =B)     F67520 Software must  allow.   allow.value ==2013",
                            "timedOut": false,
                            "duration": 1,
                            "state": "failed",
                            "speed": null,
                            "pass": false,
                            "fail": true,
                            "pending": false,
                            "context": null,
                            "code": "let maximumResidencyAmountForResidentsOfPrescribedIntermediatezonesFeild = getFieldId('67520');\n\t\tlet maximumResidencyAmountForResidentsOfPrescribedIntermediatezones = savedForm[maximumResidencyAmountForResidentsOfPrescribedIntermediatezonesFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+maximumResidencyAmountForResidentsOfPrescribedIntermediatezones;\nassert.strictEqual (maximumResidencyAmountForResidentsOfPrescribedIntermediatezones , '4015','F67520 should be built .');",
                            "err": {
                                "message": "AssertionError: F67520 should be built .",
                                "estack": "AssertionError [ERR_ASSERTION]: F67520 should be built .\n    at Context.<anonymous> (my_work\\test_for_report_2020\\NETINC_2020\\tcTaxableIncome_Line252_8.js:74:16)\n    at processImmediate (internal/timers.js:456:21)",
                                "diff": "- 2013\n+ 4015\n"
                            },
                            "uuid": "430a98a0-e882-414d-8523-7724bd8b32c6",
                            "parentUUID": "98ce3eba-4497-4521-a92c-0ba909c64fbb",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": "  F67529  Software must  allow.   allow.value ==undefined",
                            "fullTitle": "TaxableIncome_Line252_8 -Input F25500 without any supporting fields from T2222 (Northern Residents Deductions). Software must not allow.    //(TP T4s Box 14 =$ 35,000. Deduction>RareSituations>Do you qualify to claim Northern resident deduction?>Time period you lived in Zone B = Jan 01 to Dec 31 Current year. Days for additional deduction =365. Details of travel: Medical. Employment benefit =$ 3,300. Travel Expenses =$ 5,000, Lowest return air fare =$ 5,000. Zone =A. Add new  Tab. Choose= Other, Employment benefit= $ 3,200, Travel expenses =$ 10,000, Lowest return air fare = $ 10,000. Zone =B)     F67529  Software must  allow.   allow.value ==undefined",
                            "timedOut": false,
                            "duration": 1,
                            "state": "failed",
                            "speed": null,
                            "pass": false,
                            "fail": true,
                            "pending": false,
                            "context": null,
                            "code": "let nonTaxableBenefitsForBoardAndlodgingAtASpecialWorkSiteInAprescribeddIntermediateZoneFeild = getFieldId('67529');\n\t\tlet nonTaxableBenefitsForBoardAndlodgingAtASpecialWorkSiteInAprescribeddIntermediateZone = savedForm[nonTaxableBenefitsForBoardAndlodgingAtASpecialWorkSiteInAprescribeddIntermediateZoneFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+nonTaxableBenefitsForBoardAndlodgingAtASpecialWorkSiteInAprescribeddIntermediateZone;\nassert.strictEqual(nonTaxableBenefitsForBoardAndlodgingAtASpecialWorkSiteInAprescribeddIntermediateZone , '3100','F67529 should be built .');",
                            "err": {
                                "message": "AssertionError: F67529 should be built .",
                                "estack": "AssertionError [ERR_ASSERTION]: F67529 should be built .\n    at Context.<anonymous> (my_work\\test_for_report_2020\\NETINC_2020\\tcTaxableIncome_Line252_8.js:80:16)\n    at processImmediate (internal/timers.js:456:21)",
                                "diff": null
                            },
                            "uuid": "73d00649-c8c7-40bd-a3fb-2835ada93666",
                            "parentUUID": "98ce3eba-4497-4521-a92c-0ba909c64fbb",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": "  F67560 Software must  allow.   allow.value ==6500",
                            "fullTitle": "TaxableIncome_Line252_8 -Input F25500 without any supporting fields from T2222 (Northern Residents Deductions). Software must not allow.    //(TP T4s Box 14 =$ 35,000. Deduction>RareSituations>Do you qualify to claim Northern resident deduction?>Time period you lived in Zone B = Jan 01 to Dec 31 Current year. Days for additional deduction =365. Details of travel: Medical. Employment benefit =$ 3,300. Travel Expenses =$ 5,000, Lowest return air fare =$ 5,000. Zone =A. Add new  Tab. Choose= Other, Employment benefit= $ 3,200, Travel expenses =$ 10,000, Lowest return air fare = $ 10,000. Zone =B)     F67560 Software must  allow.   allow.value ==6500",
                            "timedOut": false,
                            "duration": 1,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let totalTravelAmountForTripsFromAPrescribedIntermediateZoneFeild = getFieldId('67560');\n\t\tlet  totalTravelAmountForTripsFromAPrescribedIntermediateZone = savedForm[ totalTravelAmountForTripsFromAPrescribedIntermediateZoneFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+ totalTravelAmountForTripsFromAPrescribedIntermediateZone;\nassert.strictEqual( totalTravelAmountForTripsFromAPrescribedIntermediateZone , '6500','F67560 should be built .');",
                            "err": {},
                            "uuid": "7c0e9dc9-64b3-458c-b662-2c6ce4e18cad",
                            "parentUUID": "98ce3eba-4497-4521-a92c-0ba909c64fbb",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": "  F25500 Software must  allow.   allow.value ==5263",
                            "fullTitle": "TaxableIncome_Line252_8 -Input F25500 without any supporting fields from T2222 (Northern Residents Deductions). Software must not allow.    //(TP T4s Box 14 =$ 35,000. Deduction>RareSituations>Do you qualify to claim Northern resident deduction?>Time period you lived in Zone B = Jan 01 to Dec 31 Current year. Days for additional deduction =365. Details of travel: Medical. Employment benefit =$ 3,300. Travel Expenses =$ 5,000, Lowest return air fare =$ 5,000. Zone =A. Add new  Tab. Choose= Other, Employment benefit= $ 3,200, Travel expenses =$ 10,000, Lowest return air fare = $ 10,000. Zone =B)     F25500 Software must  allow.   allow.value ==5263",
                            "timedOut": false,
                            "duration": 1,
                            "state": "failed",
                            "speed": null,
                            "pass": false,
                            "fail": true,
                            "pending": false,
                            "context": null,
                            "code": "let northernResidentsDeductionsFeild = getFieldId('25500');\n\t\tlet  northernResidentsDeductions = savedForm[ northernResidentsDeductionsFeild];\n\t\tthis._runnable.title = this._runnable.title + '  allow.value =='+ northernResidentsDeductions;\nassert.strictEqual( northernResidentsDeductions , '4165','F25500 should be built .');",
                            "err": {
                                "message": "AssertionError: F25500 should be built .",
                                "estack": "AssertionError [ERR_ASSERTION]: F25500 should be built .\n    at Context.<anonymous> (my_work\\test_for_report_2020\\NETINC_2020\\tcTaxableIncome_Line252_8.js:93:16)\n    at processImmediate (internal/timers.js:456:21)",
                                "diff": "- 5263\n+ 4165\n"
                            },
                            "uuid": "5dc81afd-662a-4c12-ac64-5b851a41fb2c",
                            "parentUUID": "98ce3eba-4497-4521-a92c-0ba909c64fbb",
                            "isHook": false,
                            "skipped": false
                        }
                    ],
                    "suites": [],
                    "passes": [
                        "7c0e9dc9-64b3-458c-b662-2c6ce4e18cad"
                    ],
                    "failures": [
                        "430a98a0-e882-414d-8523-7724bd8b32c6",
                        "73d00649-c8c7-40bd-a3fb-2835ada93666",
                        "5dc81afd-662a-4c12-ac64-5b851a41fb2c"
                    ],
                    "pending": [],
                    "skipped": [],
                    "duration": 4,
                    "root": false,
                    "rootEmpty": false,
                    "_timeout": 150000
                },
                {
                    "uuid": "bd132264-9d48-448d-aa4a-897ccbb627be",
                    "title": "TaxableIncome_Line252_9.1--Input F67507 without an amount at F67490 (T2222 -Northern Residents Deductions). Software must not allow.   //(TP T4s Box 14 =$ 35,000. Deduction>RareSituations>Do you qualify to claim Northern resident deduction?>Time period you lived in Zone A = Jan 01 to Dec 31 Current year. Days for additional deduction =365. SPs T4 Box 14 =$ 30,000. Northern Deduction, Zone A, Time Period =Jan 01 to Dec 31, Current year..).  ",
                    "fullFile": "E:\\Rita\\Taxtron\\WebTest\\my_work\\test_for_report_2020\\NETINC_2020\\tcTaxableIncome_Line252_9.1.js",
                    "file": "\\my_work\\test_for_report_2020\\NETINC_2020\\tcTaxableIncome_Line252_9.1.js",
                    "beforeHooks": [
                        {
                            "title": "\"before all\" hook",
                            "fullTitle": "TaxableIncome_Line252_9.1--Input F67507 without an amount at F67490 (T2222 -Northern Residents Deductions). Software must not allow.   //(TP T4s Box 14 =$ 35,000. Deduction>RareSituations>Do you qualify to claim Northern resident deduction?>Time period you lived in Zone A = Jan 01 to Dec 31 Current year. Days for additional deduction =365. SPs T4 Box 14 =$ 30,000. Northern Deduction, Zone A, Time Period =Jan 01 to Dec 31, Current year..).   \"before all\" hook",
                            "timedOut": false,
                            "duration": 90016,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "driver = new Builder()\n    .withCapabilities(Capabilities.chrome().setAcceptInsecureCerts(true))\n    .build();\ndriver.manage().window().setRect({ width: 1366, height: 768 });\nawait login(driver, 'ritakumar@outlook.com', 'rishu12rashi');\nawait selectNewReturn(driver,province);\nawait switchToastOff(driver);\n    \nawait nextClick(driver);\nawait setInputById(driver, 'Firstnames0', 'king');\nawait setInputById(driver, 'Surname0', 'smith');\nawait selectDateById(driver, 'DOB0', '1968/10/10');\nawait setInputById(driver, 'SIN0', '100000009');\nawait selectComboById(driver, 'MaritalStatus0', 'Common-law');\nawait selectToggleById(driver, 'domchanged0', '0');\nawait selectToggleById(driver, 'IsLinkedReturn0', '1');\nawait nextClick(driver);\nawait addressExpandClick(driver, 'fullAdd');\nawait setInputById(driver, 'StreetNo0', '25');\nawait setInputById(driver, 'StreetName0', 'JANE ST');\nawait setInputById(driver, 'City0', 'ETOBICOKE');\nawait selectComboById(driver, 'ProvinceOfRes0', 'Manitoba');\nawait setInputById(driver, 'PCodeC0', 'R0H 1N1');\nawait selectToggleById(driver, 'quesFP0', '0');\nawait selectToggleById(driver, 'quesPrinResi0', '0');\nawait selectToggleById(driver, 'qCitizen0', '0');\nawait nextClick(driver);\nawait nextClick(driver);\nawait setInputById(driver, 'Firstnames0sp', 'jone');\nawait setInputById(driver, 'Surname0sp', 'smith');\nawait selectDateById(driver, 'DOB0sp', '1968/10/10');\nawait setInputById(driver, 'SIN0sp', '100000025');\nawait selectComboById(driver, 'Province0sp', 'British Columbia');\nawait nextClick(driver);\nawait selectTab(driver, 'Income');\nawait selectTab(driver, 'IncomeProfile');\nawait selectToggleById(driver, 'WorkedInYOR0tp', '1');\nawait clickDivById(driver, 'T40tp');\n\t\t    await selectToggleById(driver, 'SelfEmployed0tp', '1');\nawait nextClick(driver);\nawait selectToggleById(driver, 'WorkedInYOR0sp', '1');\nawait clickDivById(driver, 'T40sp');\nawait nextClick(driver);\nawait setInputById(driver, 'T4B140', '35000');\nawait selectComboById(driver, 'T4_Box100tp', 'ON');\nawait nextClick(driver);\nawait setInputById(driver, 'T4B140sp', '30000');\nawait selectComboById(driver, 'T4_Box100sp', 'ON');\nawait nextClick(driver);\nawait selectTab(driver, 'Deduction');\nawait selectTab(driver, 'RareSituations');\nawait selectToggleById(driver, 'qNorthern0tp', '1');\nawait nextClick(driver);\nawait selectAgeDateById(driver, 'NRADate10tp',  Fed.TaxYear,'0','/01/01');\nawait selectAgeDateById(driver, 'NRADate20tp', Fed.TaxYear,'0','/12/31');\nawait setInputById(driver, 'T2222_250tp', '365');\nawait selectToggleById(driver, 'TAB0tp', '1');\nawait nextClick(driver);\nawait selectToggleById(driver, 'qNorthern0sp', '1');\nawait nextClick(driver);\nawait selectAgeDateById(driver, 'NRADate10sp',  Fed.TaxYear,'0','/01/01');\nawait selectAgeDateById(driver, 'NRADate20sp', Fed.TaxYear,'0','/12/31');\nawait setInputById(driver, 'T2222_250sp', '365');\nawait selectToggleById(driver, 'TAB0sp', '1');\nawait nextClick(driver);\nsavedForm = await getServerFileSp(driver,'sp');",
                            "err": {},
                            "uuid": "be86f86e-c816-4953-9dbb-f33531433c7f",
                            "parentUUID": "bd132264-9d48-448d-aa4a-897ccbb627be",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "afterHooks": [
                        {
                            "title": "\"after all\" hook",
                            "fullTitle": "TaxableIncome_Line252_9.1--Input F67507 without an amount at F67490 (T2222 -Northern Residents Deductions). Software must not allow.   //(TP T4s Box 14 =$ 35,000. Deduction>RareSituations>Do you qualify to claim Northern resident deduction?>Time period you lived in Zone A = Jan 01 to Dec 31 Current year. Days for additional deduction =365. SPs T4 Box 14 =$ 30,000. Northern Deduction, Zone A, Time Period =Jan 01 to Dec 31, Current year..).   \"after all\" hook",
                            "timedOut": false,
                            "duration": 5612,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "await logoutById(driver);\nawait driver.quit();",
                            "err": {},
                            "uuid": "32f314a6-ad32-48fd-a95f-0c38f5c77289",
                            "parentUUID": "bd132264-9d48-448d-aa4a-897ccbb627be",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "tests": [
                        {
                            "title": "  F67490 Software must  allow.   allow.value ==8041",
                            "fullTitle": "TaxableIncome_Line252_9.1--Input F67507 without an amount at F67490 (T2222 -Northern Residents Deductions). Software must not allow.   //(TP T4s Box 14 =$ 35,000. Deduction>RareSituations>Do you qualify to claim Northern resident deduction?>Time period you lived in Zone A = Jan 01 to Dec 31 Current year. Days for additional deduction =365. SPs T4 Box 14 =$ 30,000. Northern Deduction, Zone A, Time Period =Jan 01 to Dec 31, Current year..).     F67490 Software must  allow.   allow.value ==8041",
                            "timedOut": false,
                            "duration": 1,
                            "state": "failed",
                            "speed": null,
                            "pass": false,
                            "fail": true,
                            "pending": false,
                            "context": null,
                            "code": "let maximumResidencyAmountForResidentsOfPrescribedNorthernzonesFeild = getFieldId('67490');\nlet maximumResidencyAmountForResidentsOfPrescribedNorthernzones = savedForm[maximumResidencyAmountForResidentsOfPrescribedNorthernzonesFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+maximumResidencyAmountForResidentsOfPrescribedNorthernzones;\nassert.strictEqual (maximumResidencyAmountForResidentsOfPrescribedNorthernzones , '4015','F67490 should be built .');",
                            "err": {
                                "message": "AssertionError: F67490 should be built .",
                                "estack": "AssertionError [ERR_ASSERTION]: F67490 should be built .\n    at Context.<anonymous> (my_work\\test_for_report_2020\\NETINC_2020\\tcTaxableIncome_Line252_9.1.js:88:20)\n    at processImmediate (internal/timers.js:456:21)",
                                "diff": "- 8041\n+ 4015\n"
                            },
                            "uuid": "7217efc1-2e2e-46d5-abce-2ac60206416d",
                            "parentUUID": "bd132264-9d48-448d-aa4a-897ccbb627be",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": "  F25500 Software must  allow.   allow.value ==6000",
                            "fullTitle": "TaxableIncome_Line252_9.1--Input F67507 without an amount at F67490 (T2222 -Northern Residents Deductions). Software must not allow.   //(TP T4s Box 14 =$ 35,000. Deduction>RareSituations>Do you qualify to claim Northern resident deduction?>Time period you lived in Zone A = Jan 01 to Dec 31 Current year. Days for additional deduction =365. SPs T4 Box 14 =$ 30,000. Northern Deduction, Zone A, Time Period =Jan 01 to Dec 31, Current year..).     F25500 Software must  allow.   allow.value ==6000",
                            "timedOut": false,
                            "duration": 1,
                            "state": "failed",
                            "speed": null,
                            "pass": false,
                            "fail": true,
                            "pending": false,
                            "context": null,
                            "code": "let northernResidentsDeductionsFeild = getFieldId('25500');\nlet  northernResidentsDeductions = savedForm[ northernResidentsDeductionsFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ northernResidentsDeductions;\nassert.strictEqual( northernResidentsDeductions , '4015','F25500 should be built .');",
                            "err": {
                                "message": "AssertionError: F25500 should be built .",
                                "estack": "AssertionError [ERR_ASSERTION]: F25500 should be built .\n    at Context.<anonymous> (my_work\\test_for_report_2020\\NETINC_2020\\tcTaxableIncome_Line252_9.1.js:96:20)\n    at processImmediate (internal/timers.js:456:21)",
                                "diff": "- 6000\n+ 4015\n"
                            },
                            "uuid": "1d260b8d-66bb-4b88-9005-17f3f9aa105e",
                            "parentUUID": "bd132264-9d48-448d-aa4a-897ccbb627be",
                            "isHook": false,
                            "skipped": false
                        }
                    ],
                    "suites": [],
                    "passes": [],
                    "failures": [
                        "7217efc1-2e2e-46d5-abce-2ac60206416d",
                        "1d260b8d-66bb-4b88-9005-17f3f9aa105e"
                    ],
                    "pending": [],
                    "skipped": [],
                    "duration": 2,
                    "root": false,
                    "rootEmpty": false,
                    "_timeout": 150000
                },
                {
                    "uuid": "b9d2d3c1-77a7-4ca5-8fa0-e2fc46b049d7",
                    "title": "TaxableIncome_Line252_9--Input F67507 without an amount at F67490 (T2222 -Northern Residents Deductions). Software must not allow.   //(TP T4s Box 14 =$ 35,000. Deduction>RareSituations>Do you qualify to claim Northern resident deduction?>Time period you lived in Zone A = Jan 01 to Dec 31 Current year. Days for additional deduction =365. SPs T4 Box 14 =$ 30,000. Northern Deduction, Zone A, Time Period =Jan 01 to Dec 31, Current year..).  ",
                    "fullFile": "E:\\Rita\\Taxtron\\WebTest\\my_work\\test_for_report_2020\\NETINC_2020\\tcTaxableIncome_Line252_9.js",
                    "file": "\\my_work\\test_for_report_2020\\NETINC_2020\\tcTaxableIncome_Line252_9.js",
                    "beforeHooks": [
                        {
                            "title": "\"before all\" hook",
                            "fullTitle": "TaxableIncome_Line252_9--Input F67507 without an amount at F67490 (T2222 -Northern Residents Deductions). Software must not allow.   //(TP T4s Box 14 =$ 35,000. Deduction>RareSituations>Do you qualify to claim Northern resident deduction?>Time period you lived in Zone A = Jan 01 to Dec 31 Current year. Days for additional deduction =365. SPs T4 Box 14 =$ 30,000. Northern Deduction, Zone A, Time Period =Jan 01 to Dec 31, Current year..).   \"before all\" hook",
                            "timedOut": false,
                            "duration": 94892,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "driver = new Builder()\n    .withCapabilities(Capabilities.chrome().setAcceptInsecureCerts(true))\n    .build();\ndriver.manage().window().setRect({ width: 1366, height: 768 });\nawait login(driver, 'ritakumar@outlook.com', 'rishu12rashi');\nawait selectNewReturn(driver,province);\nawait switchToastOff(driver);\n    \nawait nextClick(driver);\nawait setInputById(driver, 'Firstnames0', 'king');\nawait setInputById(driver, 'Surname0', 'smith');\nawait selectDateById(driver, 'DOB0', '1968/10/10');\nawait setInputById(driver, 'SIN0', '100000009');\nawait selectComboById(driver, 'MaritalStatus0', 'Common-law');\nawait selectToggleById(driver, 'domchanged0', '0');\nawait selectToggleById(driver, 'IsLinkedReturn0', '1');\nawait nextClick(driver);\nawait addressExpandClick(driver, 'fullAdd');\nawait setInputById(driver, 'StreetNo0', '25');\nawait setInputById(driver, 'StreetName0', 'JANE ST');\nawait setInputById(driver, 'City0', 'ETOBICOKE');\nawait selectComboById(driver, 'ProvinceOfRes0', 'Manitoba');\nawait setInputById(driver, 'PCodeC0', 'R0H 1N1');\nawait selectToggleById(driver, 'quesFP0', '0');\nawait selectToggleById(driver, 'quesPrinResi0', '0');\nawait selectToggleById(driver, 'qCitizen0', '0');\nawait nextClick(driver);\nawait nextClick(driver);\nawait setInputById(driver, 'Firstnames0sp', 'jone');\nawait setInputById(driver, 'Surname0sp', 'smith');\nawait selectDateById(driver, 'DOB0sp', '1968/10/10');\nawait setInputById(driver, 'SIN0sp', '100000025');\nawait selectComboById(driver, 'Province0sp', 'British Columbia');\nawait nextClick(driver);\nawait selectTab(driver, 'Income');\nawait selectTab(driver, 'IncomeProfile');\nawait selectToggleById(driver, 'WorkedInYOR0tp', '1');\nawait clickDivById(driver, 'T40tp');\n\t\t    await selectToggleById(driver, 'SelfEmployed0tp', '1');\nawait nextClick(driver);\nawait selectToggleById(driver, 'WorkedInYOR0sp', '1');\nawait clickDivById(driver, 'T40sp');\nawait nextClick(driver);\nawait setInputById(driver, 'T4B140', '35000');\nawait selectComboById(driver, 'T4_Box100tp', 'ON');\nawait nextClick(driver);\nawait setInputById(driver, 'T4B140sp', '30000');\nawait selectComboById(driver, 'T4_Box100sp', 'ON');\nawait nextClick(driver);\nawait selectTab(driver, 'Deduction');\nawait selectTab(driver, 'RareSituations');\nawait selectToggleById(driver, 'qNorthern0tp', '1');\nawait nextClick(driver);\nawait selectAgeDateById(driver, 'NRADate10tp',  Fed.TaxYear,'0','/01/01');\nawait selectAgeDateById(driver, 'NRADate20tp', Fed.TaxYear,'0','/12/31');\nawait setInputById(driver, 'T2222_250tp', '365');\nawait selectToggleById(driver, 'TAB0tp', '1');\nawait nextClick(driver);\nawait selectToggleById(driver, 'qNorthern0sp', '1');\nawait nextClick(driver);\nawait selectAgeDateById(driver, 'NRADate10sp',  Fed.TaxYear,'0','/01/01');\nawait selectAgeDateById(driver, 'NRADate20sp', Fed.TaxYear,'0','/12/31');\nawait setInputById(driver, 'T2222_250sp', '365');\nawait selectToggleById(driver, 'TAB0sp', '1');\nawait nextClick(driver);\nawait nextClick(driver);\nawait nextClick(driver);\nsavedForm = await getServerFile(driver);",
                            "err": {},
                            "uuid": "428b194a-a793-4105-a8c7-00069cccb6fb",
                            "parentUUID": "b9d2d3c1-77a7-4ca5-8fa0-e2fc46b049d7",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "afterHooks": [],
                    "tests": [
                        {
                            "title": "  F67490 Software must  allow.   allow.value ==4026",
                            "fullTitle": "TaxableIncome_Line252_9--Input F67507 without an amount at F67490 (T2222 -Northern Residents Deductions). Software must not allow.   //(TP T4s Box 14 =$ 35,000. Deduction>RareSituations>Do you qualify to claim Northern resident deduction?>Time period you lived in Zone A = Jan 01 to Dec 31 Current year. Days for additional deduction =365. SPs T4 Box 14 =$ 30,000. Northern Deduction, Zone A, Time Period =Jan 01 to Dec 31, Current year..).     F67490 Software must  allow.   allow.value ==4026",
                            "timedOut": false,
                            "duration": 1,
                            "state": "failed",
                            "speed": null,
                            "pass": false,
                            "fail": true,
                            "pending": false,
                            "context": null,
                            "code": "let maximumResidencyAmountForResidentsOfPrescribedNorthernzonesFeild = getFieldId('67490');\nlet maximumResidencyAmountForResidentsOfPrescribedNorthernzones = savedForm[maximumResidencyAmountForResidentsOfPrescribedNorthernzonesFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+maximumResidencyAmountForResidentsOfPrescribedNorthernzones;\nassert.strictEqual (maximumResidencyAmountForResidentsOfPrescribedNorthernzones , '8030','F67490 should be built .');",
                            "err": {
                                "message": "AssertionError: F67490 should be built .",
                                "estack": "AssertionError [ERR_ASSERTION]: F67490 should be built .\n    at Context.<anonymous> (my_work\\test_for_report_2020\\NETINC_2020\\tcTaxableIncome_Line252_9.js:89:20)\n    at processImmediate (internal/timers.js:456:21)",
                                "diff": "- 4026\n+ 8030\n"
                            },
                            "uuid": "5c7260d7-97af-4435-81d9-f19ec3cf2666",
                            "parentUUID": "b9d2d3c1-77a7-4ca5-8fa0-e2fc46b049d7",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": "  F25500 Software must  allow.   allow.value ==4026",
                            "fullTitle": "TaxableIncome_Line252_9--Input F67507 without an amount at F67490 (T2222 -Northern Residents Deductions). Software must not allow.   //(TP T4s Box 14 =$ 35,000. Deduction>RareSituations>Do you qualify to claim Northern resident deduction?>Time period you lived in Zone A = Jan 01 to Dec 31 Current year. Days for additional deduction =365. SPs T4 Box 14 =$ 30,000. Northern Deduction, Zone A, Time Period =Jan 01 to Dec 31, Current year..).     F25500 Software must  allow.   allow.value ==4026",
                            "timedOut": false,
                            "duration": 0,
                            "state": "failed",
                            "speed": null,
                            "pass": false,
                            "fail": true,
                            "pending": false,
                            "context": null,
                            "code": "let northernResidentsDeductionsFeild = getFieldId('25500');\nlet  northernResidentsDeductions = savedForm[ northernResidentsDeductionsFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ northernResidentsDeductions;\nassert.strictEqual( northernResidentsDeductions , '8030','F25500 should be built .');",
                            "err": {
                                "message": "AssertionError: F25500 should be built .",
                                "estack": "AssertionError [ERR_ASSERTION]: F25500 should be built .\n    at Context.<anonymous> (my_work\\test_for_report_2020\\NETINC_2020\\tcTaxableIncome_Line252_9.js:97:20)\n    at processImmediate (internal/timers.js:456:21)",
                                "diff": "- 4026\n+ 8030\n"
                            },
                            "uuid": "a6a26eca-ff8f-4e80-8e13-ece649d55e71",
                            "parentUUID": "b9d2d3c1-77a7-4ca5-8fa0-e2fc46b049d7",
                            "isHook": false,
                            "skipped": false
                        }
                    ],
                    "suites": [],
                    "passes": [],
                    "failures": [
                        "5c7260d7-97af-4435-81d9-f19ec3cf2666",
                        "a6a26eca-ff8f-4e80-8e13-ece649d55e71"
                    ],
                    "pending": [],
                    "skipped": [],
                    "duration": 1,
                    "root": false,
                    "rootEmpty": false,
                    "_timeout": 150000
                },
                {
                    "uuid": "8ebd22b8-d1e7-41d4-8087-d7bf696f0d6a",
                    "title": "TaxableIncome_T5007_1.Enter workers compensation benefits at F14400. No entry at F14500 or F14600. Override F25000 (other payments deduction) to differ from the amount at F14400. Software must not allow.  //(Linked TP 50 years and SP =60 Years old. TPs T5007 Box 10= $ 10,000, Box 11 =$11,000,T4AOAS =Box 21 =$ 5,000)  ",
                    "fullFile": "E:\\Rita\\Taxtron\\WebTest\\my_work\\test_for_report_2020\\NETINC_2020\\tcTaxableIncome_T5007_1.js",
                    "file": "\\my_work\\test_for_report_2020\\NETINC_2020\\tcTaxableIncome_T5007_1.js",
                    "beforeHooks": [
                        {
                            "title": "\"before all\" hook",
                            "fullTitle": "TaxableIncome_T5007_1.Enter workers compensation benefits at F14400. No entry at F14500 or F14600. Override F25000 (other payments deduction) to differ from the amount at F14400. Software must not allow.  //(Linked TP 50 years and SP =60 Years old. TPs T5007 Box 10= $ 10,000, Box 11 =$11,000,T4AOAS =Box 21 =$ 5,000)   \"before all\" hook",
                            "timedOut": false,
                            "duration": 67665,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "driver = new Builder()\n\t.withCapabilities(Capabilities.chrome().setAcceptInsecureCerts(true))\n\t.build();\n    driver.manage().window().setRect({ width: 1366, height: 768 });\n        await login(driver, 'ritakumar@outlook.com', 'rishu12rashi');\n                await selectNewReturn(driver,province);\n                await switchToastOff(driver);\n       \n        await setInputById(driver, 'Firstnames0', 'KING');\n        await setInputById(driver, 'Surname0', 'SMITH');\n        await selectDateById(driver, 'DOB0', '1965/10/10');\n        await setInputById(driver, 'SIN0', '222222226');\n        await selectComboById(driver, 'MaritalStatus0', 'Common-law');\n        await selectToggleById(driver, 'domchanged0', '0');\n                await selectToggleById(driver, 'IsLinkedReturn0', '1');\n                await selectToggleById(driver, 'HomeAddressSame0', '1');\n\t            await nextClick(driver);\n        await setInputById(driver, 'fullAdd0', '880 21 St NE, Salmon Arm, NL M2M 3X4, Canada');\n                await selectToggleById(driver, 'addChange0', '0');\n        await selectToggleById(driver, 'bDisabled0', '0');\n        await selectToggleById(driver, 'quesFP0', '0');\n        await selectToggleById(driver, 'qCitizen0', '0');\n                await nextClick(driver);\n                await nextClick(driver);\n                await setInputById(driver, 'Firstnames0sp', 'BABAB');\n                await setInputById(driver, 'Surname0sp', 'LLLALAL');\n                await selectDateById(driver, 'DOB0sp', '1960/01/01');\n                await setInputById(driver, 'SIN0sp', '430442848');\n                await selectComboById(driver, 'Province0sp', 'Ontario');\n                await nextClick(driver);\n                await selectToggleById(driver, 'quesFP0sp', '0');\n                await nextClick(driver);\n                await selectTab(driver, 'Income');\n                await selectToggleById(driver, 'quesOtherIncome0tp', '1');\n                await clickDivById(driver, 'T50070tp');\n                await selectToggleById(driver, 'GovernmentPension0tp', '1');\n                await clickDivById(driver, 'T4AOS0tp');\n                await nextClick(driver);\n                await selectToggleById(driver, 'WorkedInYOR0sp', '0');\n                await nextClick(driver);\n                await setInputById(driver, 'T4OASSupplement0tp', '5000');\n                await nextClick(driver);\n                await setInputById(driver, 'T5007_20tp', '10000');\n                await setInputById(driver, 'T5007_30tp', '11000');\n                await nextClick(driver);\n                await nextClick(driver);\n               \n                savedForm = await getServerFile(driver);",
                            "err": {},
                            "uuid": "04056237-9f5c-469b-9359-2a336f929ee9",
                            "parentUUID": "8ebd22b8-d1e7-41d4-8087-d7bf696f0d6a",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "afterHooks": [],
                    "tests": [
                        {
                            "title": " F14400 should be  allowed with amount    allow.value ==10000",
                            "fullTitle": "TaxableIncome_T5007_1.Enter workers compensation benefits at F14400. No entry at F14500 or F14600. Override F25000 (other payments deduction) to differ from the amount at F14400. Software must not allow.  //(Linked TP 50 years and SP =60 Years old. TPs T5007 Box 10= $ 10,000, Box 11 =$11,000,T4AOAS =Box 21 =$ 5,000)    F14400 should be  allowed with amount    allow.value ==10000",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let  workersCompensationBenefitsFeild = getFieldId('14400');\nlet  workersCompensationBenefits = savedForm[ workersCompensationBenefitsFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+  workersCompensationBenefits;\nassert.strictEqual(  workersCompensationBenefits, '10000', ' Feild should be built');",
                            "err": {},
                            "uuid": "2ea51158-9f68-43f5-ad4d-ded61eda1260",
                            "parentUUID": "8ebd22b8-d1e7-41d4-8087-d7bf696f0d6a",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F14500 should be  allowed with amount    allow.value ==11000",
                            "fullTitle": "TaxableIncome_T5007_1.Enter workers compensation benefits at F14400. No entry at F14500 or F14600. Override F25000 (other payments deduction) to differ from the amount at F14400. Software must not allow.  //(Linked TP 50 years and SP =60 Years old. TPs T5007 Box 10= $ 10,000, Box 11 =$11,000,T4AOAS =Box 21 =$ 5,000)    F14500 should be  allowed with amount    allow.value ==11000",
                            "timedOut": false,
                            "duration": 1,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let socialAssistancePaymentsFeild = getFieldId('14500');\nlet socialAssistancePayments = savedForm[socialAssistancePaymentsFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ socialAssistancePayments;\nassert.strictEqual( socialAssistancePayments, '11000', ' Feild should be built');",
                            "err": {},
                            "uuid": "bd05dd39-6562-4d4d-b179-b6efad7123ef",
                            "parentUUID": "8ebd22b8-d1e7-41d4-8087-d7bf696f0d6a",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F25000 should be  allowed with amount    allow.value ==21000",
                            "fullTitle": "TaxableIncome_T5007_1.Enter workers compensation benefits at F14400. No entry at F14500 or F14600. Override F25000 (other payments deduction) to differ from the amount at F14400. Software must not allow.  //(Linked TP 50 years and SP =60 Years old. TPs T5007 Box 10= $ 10,000, Box 11 =$11,000,T4AOAS =Box 21 =$ 5,000)    F25000 should be  allowed with amount    allow.value ==21000",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let otherPaymentsDeductionFeild = getFieldId('25000');\nlet otherPaymentsDeduction = savedForm[ otherPaymentsDeductionFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ otherPaymentsDeduction;\nassert.strictEqual(  otherPaymentsDeduction, '21000', ' Feild should be built');",
                            "err": {},
                            "uuid": "a1e43d04-2d6b-43dc-acf3-c6e775598b1a",
                            "parentUUID": "8ebd22b8-d1e7-41d4-8087-d7bf696f0d6a",
                            "isHook": false,
                            "skipped": false
                        }
                    ],
                    "suites": [],
                    "passes": [
                        "2ea51158-9f68-43f5-ad4d-ded61eda1260",
                        "bd05dd39-6562-4d4d-b179-b6efad7123ef",
                        "a1e43d04-2d6b-43dc-acf3-c6e775598b1a"
                    ],
                    "failures": [],
                    "pending": [],
                    "skipped": [],
                    "duration": 1,
                    "root": false,
                    "rootEmpty": false,
                    "_timeout": 150000
                },
                {
                    "uuid": "ac2f1bb4-8574-41bd-a3b5-bb1526b662e7",
                    "title": "TaxableIncome_T5007_2(SP).Enter social assistance payments at F14500. No entry at F14400 or F14600. Override F25000 (other payments deduction) to differ from the amount at F14500. Software must not allow.  //(Field 25000 must be built from, and consequently not exceed, the total of fields 14400, 14500 and 14600.)  ",
                    "fullFile": "E:\\Rita\\Taxtron\\WebTest\\my_work\\test_for_report_2020\\NETINC_2020\\tcTaxableIncome_T5007_2.js",
                    "file": "\\my_work\\test_for_report_2020\\NETINC_2020\\tcTaxableIncome_T5007_2.js",
                    "beforeHooks": [
                        {
                            "title": "\"before all\" hook",
                            "fullTitle": "TaxableIncome_T5007_2(SP).Enter social assistance payments at F14500. No entry at F14400 or F14600. Override F25000 (other payments deduction) to differ from the amount at F14500. Software must not allow.  //(Field 25000 must be built from, and consequently not exceed, the total of fields 14400, 14500 and 14600.)   \"before all\" hook",
                            "timedOut": false,
                            "duration": 64434,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "driver = new Builder()\n\t.withCapabilities(Capabilities.chrome().setAcceptInsecureCerts(true))\n\t.build();\n    driver.manage().window().setRect({ width: 1366, height: 768 });\n        await login(driver, 'ritakumar@outlook.com', 'rishu12rashi');\n                await selectNewReturn(driver,province);\n                await switchToastOff(driver);\n       \n        await setInputById(driver, 'Firstnames0', 'KING');\n        await setInputById(driver, 'Surname0', 'SMITH');\n        await selectDateById(driver, 'DOB0', '1965/10/10');\n        await setInputById(driver, 'SIN0', '222222226');\n        await selectComboById(driver, 'MaritalStatus0', 'Common-law');\n        await selectToggleById(driver, 'domchanged0', '0');\n                await selectToggleById(driver, 'IsLinkedReturn0', '1');\n                await selectToggleById(driver, 'HomeAddressSame0', '1');\n\t            await nextClick(driver);\n        await setInputById(driver, 'fullAdd0', '880 21 St NE, Salmon Arm, NL M2M 3X4, Canada');\n                await selectToggleById(driver, 'addChange0', '0');\n        await selectToggleById(driver, 'bDisabled0', '0');\n        await selectToggleById(driver, 'quesFP0', '0');\n        await selectToggleById(driver, 'qCitizen0', '0');\n                await nextClick(driver);\n                await nextClick(driver);\n                await setInputById(driver, 'Firstnames0sp', 'BABAB');\n                await setInputById(driver, 'Surname0sp', 'LLLALAL');\n                await selectDateById(driver, 'DOB0sp', '1960/01/01');\n                await setInputById(driver, 'SIN0sp', '430442848');\n                await selectComboById(driver, 'Province0sp', 'Ontario');\n                await nextClick(driver);\n                await selectToggleById(driver, 'quesFP0sp', '0');\n                await nextClick(driver);\n                await selectTab(driver, 'Income');\n                await selectToggleById(driver, 'WorkedInYOR0tp', '0');\n                await nextClick(driver);\n                await selectToggleById(driver, 'quesOtherIncome0sp', '1');\n                await clickDivById(driver, 'T50070sp');\n                await nextClick(driver);\n                await setInputById(driver, 'T5007_30sp', '10000');\n                await nextClick(driver);\n                await nextClick(driver);\n                savedForm = await getServerFileSp(driver,'sp');",
                            "err": {},
                            "uuid": "4f36c5cb-de80-491d-b7f4-84f9402d3a6b",
                            "parentUUID": "ac2f1bb4-8574-41bd-a3b5-bb1526b662e7",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "afterHooks": [
                        {
                            "title": "\"after all\" hook",
                            "fullTitle": "TaxableIncome_T5007_2(SP).Enter social assistance payments at F14500. No entry at F14400 or F14600. Override F25000 (other payments deduction) to differ from the amount at F14500. Software must not allow.  //(Field 25000 must be built from, and consequently not exceed, the total of fields 14400, 14500 and 14600.)   \"after all\" hook",
                            "timedOut": false,
                            "duration": 5567,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "await logoutById(driver);\n              await driver.quit();",
                            "err": {},
                            "uuid": "686bc5f5-59aa-4599-ace0-d0e4e68c60ec",
                            "parentUUID": "ac2f1bb4-8574-41bd-a3b5-bb1526b662e7",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "tests": [
                        {
                            "title": " F14500 should be  allowed with amount    allow.value ==10000",
                            "fullTitle": "TaxableIncome_T5007_2(SP).Enter social assistance payments at F14500. No entry at F14400 or F14600. Override F25000 (other payments deduction) to differ from the amount at F14500. Software must not allow.  //(Field 25000 must be built from, and consequently not exceed, the total of fields 14400, 14500 and 14600.)    F14500 should be  allowed with amount    allow.value ==10000",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let socialAssistancePaymentsFeild = getFieldId('14500');\nlet socialAssistancePayments = savedForm[socialAssistancePaymentsFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ socialAssistancePayments;\nassert.strictEqual( socialAssistancePayments, '10000', ' Feild should be built');",
                            "err": {},
                            "uuid": "c9d6ac2f-da82-4f38-8f9c-23908df4bc28",
                            "parentUUID": "ac2f1bb4-8574-41bd-a3b5-bb1526b662e7",
                            "isHook": false,
                            "skipped": false
                        },
                        {
                            "title": " F25000 should be  allowed with amount    allow.value ==10000",
                            "fullTitle": "TaxableIncome_T5007_2(SP).Enter social assistance payments at F14500. No entry at F14400 or F14600. Override F25000 (other payments deduction) to differ from the amount at F14500. Software must not allow.  //(Field 25000 must be built from, and consequently not exceed, the total of fields 14400, 14500 and 14600.)    F25000 should be  allowed with amount    allow.value ==10000",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let otherPaymentsDeductionFeild = getFieldId('25000');\nlet otherPaymentsDeduction = savedForm[ otherPaymentsDeductionFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+ otherPaymentsDeduction;\nassert.strictEqual(  otherPaymentsDeduction, '10000', ' Feild should be built');",
                            "err": {},
                            "uuid": "28318c91-fdf0-475b-acf7-07df762c759d",
                            "parentUUID": "ac2f1bb4-8574-41bd-a3b5-bb1526b662e7",
                            "isHook": false,
                            "skipped": false
                        }
                    ],
                    "suites": [],
                    "passes": [
                        "c9d6ac2f-da82-4f38-8f9c-23908df4bc28",
                        "28318c91-fdf0-475b-acf7-07df762c759d"
                    ],
                    "failures": [],
                    "pending": [],
                    "skipped": [],
                    "duration": 0,
                    "root": false,
                    "rootEmpty": false,
                    "_timeout": 150000
                },
                {
                    "uuid": "b233e2fb-e88a-4343-9fbc-30c3c57e7e3d",
                    "title": "NetIncome_Line214_4TP--Input F21400 to exceed 2/3 of the taxpayers earned income.  F67990 is not present for child care expenses.  Software must not allow.  //(TP Married,Linked rts, TP T5 = $60,000 (Box 13): T2202A, 12 Months parttimeSP T5 (Box 13) = $15,000, T2202A, 12 Months parttime Depandant 3 yrs old, Care of $10,000).",
                    "fullFile": "D:\\Rita\\taxtron\\code\\TaxTronWebTests\\my_work\\test_for_report_2020\\TCASES\\tcNetIncome_Line214_4SP.js",
                    "file": "\\my_work\\test_for_report_2020\\TCASES\\tcNetIncome_Line214_4SP.js",
                    "beforeHooks": [
                        {
                            "title": "\"before all\" hook",
                            "fullTitle": "NetIncome_Line214_4TP--Input F21400 to exceed 2/3 of the taxpayers earned income.  F67990 is not present for child care expenses.  Software must not allow.  //(TP Married,Linked rts, TP T5 = $60,000 (Box 13): T2202A, 12 Months parttimeSP T5 (Box 13) = $15,000, T2202A, 12 Months parttime Depandant 3 yrs old, Care of $10,000). \"before all\" hook",
                            "timedOut": false,
                            "duration": 117483,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "driver = new Builder()\n    .withCapabilities(Capabilities.chrome().setAcceptInsecureCerts(true))\n    .build();\ndriver.manage().window().setRect({ width: 1366, height: 768 });\nawait login(driver, 'ritakumar@outlook.com', 'rishu12rashi');\nawait selectNewReturn(driver,province);\nawait switchToastOff(driver);\n        \nawait setInputById(driver, 'Firstnames0', 'AMAM');\nawait setInputById(driver, 'Surname0', 'AMAMAM');\nawait selectDateById(driver, 'DOB0', '1965/01/01');\nawait setInputById(driver, 'SIN0', '123123127');\nawait selectComboById(driver, 'MaritalStatus0', 'Married');\nawait selectToggleById(driver, 'IsLinkedReturn0', '1');\nawait nextClick(driver);\nawait setAddressById(driver, 'fullAdd0', '6464 Yonge St, North York, ON  L6Y4E6, Canada');\nawait nextClick(driver);\nawait selectToggleById(driver, 'quesFP0', '0');\nawait selectToggleById(driver, 'quesPrinResi0', '0');\nawait nextClick(driver);\nawait setInputById(driver, 'Firstnames0sp', 'BABAB');\nawait setInputById(driver, 'Surname0sp', 'LLLALAL');\nawait selectDateById(driver, 'DOB0sp', '1968/01/01');\nawait setInputById(driver, 'SIN0sp', '430442848');\nawait selectComboById(driver, 'Province0sp', 'Ontario');\nawait nextClick(driver);\n//await setInputById(driver, 'StreetName0', '6464 Yonge St');\nawait selectToggleById(driver, 'quesFP0sp', '0');\nawait nextClick(driver);\nawait selectTab(driver, 'Dependant');\nawait selectToggleById(driver, 'HaveDependants0', '1');\nawait nextClick(driver);\nawait setInputById(driver, 'DepFName10', 'd');\nawait setInputById(driver, 'DepSurname10', 'd');\nawait selectDateById(driver, 'DepDOB10', '2017/07/13');\nawait selectComboById(driver, 'DepLien10', 'son');\nawait setInputById(driver, 'DepIncomeExcess0', '0');\nawait nextClick(driver);\nawait nextClick(driver);\nawait selectToggleById(driver, 'didYouPayCC0tp', '1');\n\t            await nextClick(driver);\n\t\t        await selectComboById(driver, 'CC_30tp', 'd');\nawait setInputById(driver, 'CCWFederalUE0tp', '10000');\nawait nextClick(driver);\nawait selectTab(driver, 'Income');\nawait selectToggleById(driver, 'InvestmentIncome0tp', '1');\nawait clickDivById(driver, 'T50tp');\nawait nextClick(driver);\nawait selectToggleById(driver, 'InvestmentIncome0sp', '1');\nawait clickDivById(driver, 'T50sp');\nawait nextClick(driver);\nawait setInputById(driver, 'Box130tp', '60000');\nawait selectComboById(driver, 'T5_2540tp', 'Bank Interest');\nawait nextClick(driver);\n              \nawait setInputById(driver, 'Box130sp', '15000');\nawait selectComboById(driver, 'T5_2540sp', 'Bank Interest');\nawait nextClick(driver);\nawait selectTab(driver, 'Deduction');\nawait selectTab(driver, 'Deduction_Main');\nawait selectToggleById(driver, 'qStudent0tp', '1');\nawait nextClick(driver);\nawait selectToggleById(driver, 'T2202AAttendedInst20tp', '1');\nawait nextClick(driver);\nawait setInputById(driver, 'T2202_B19_10tp', '2001');\nawait setInputById(driver, 'T2202_B20_10tp', '2012');\nawait setInputById(driver, 'T2202_B23_10tp', '5000');\nawait setInputById(driver, 'T2202_B21_10tp', '12');\nawait nextClick(driver);\nawait selectToggleById(driver, 'qStudent0sp', '1');\nawait nextClick(driver);\nawait selectToggleById(driver, 'T2202AAttendedInst20sp', '1');\nawait nextClick(driver);\nawait setInputById(driver, 'T2202_B23_10sp', '5000');\nawait setInputById(driver, 'T2202_B21_10sp', '12');\nawait nextClick(driver);\nawait selectTab(driver, 'MiscDeductions');\nawait selectToggleById(driver, 'qAlimony0tp', '1');\nawait nextClick(driver);\nawait selectToggleById(driver, 'CCPartCa0tp', '1');\nawait setInputById(driver, 'CMonths0tp', '12');\nawait selectToggleById(driver, 'QT778_2_260tp', '1');\nawait selectToggleById(driver, 'T778_2_280tp', '1');\nawait selectToggleById(driver, 'FullPart0tp', '0');\nawait setInputById(driver, 'SchoolMonths0tp', '12');\nawait selectToggleById(driver, 'T778_2_300tp', '1');\nawait nextClick(driver);\nawait nextClick(driver);\n               /* await selectToggleById(driver, 'qAlimony0sp', '1');\nawait nextClick(driver);\nawait selectToggleById(driver, 'QT778_2_260sp', '1');\nawait selectToggleById(driver, 'T778_2_280sp', '1');\nawait selectToggleById(driver, 'FullPart0sp', '0');\nawait setInputById(driver, 'SchoolMonths0sp', '12');\nawait nextClick(driver);*/\nawait nextClick(driver);\nsavedForm = await getServerFileSp(driver,'sp');",
                            "err": {},
                            "uuid": "1635b024-81cf-4ecb-9d3e-804500d531d6",
                            "parentUUID": "b233e2fb-e88a-4343-9fbc-30c3c57e7e3d",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "afterHooks": [],
                    "tests": [
                        {
                            "title": " F21400 should be  allowed with amount    allow.value ==undefined",
                            "fullTitle": "NetIncome_Line214_4TP--Input F21400 to exceed 2/3 of the taxpayers earned income.  F67990 is not present for child care expenses.  Software must not allow.  //(TP Married,Linked rts, TP T5 = $60,000 (Box 13): T2202A, 12 Months parttimeSP T5 (Box 13) = $15,000, T2202A, 12 Months parttime Depandant 3 yrs old, Care of $10,000).  F21400 should be  allowed with amount    allow.value ==undefined",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let  childCareExpensesFeild = getFieldId('21400');\nlet  childCareExpenses = savedForm[ childCareExpensesFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+  childCareExpenses;\nassert.strictEqual(   childCareExpenses, undefined, ' Feild should be built');",
                            "err": {},
                            "uuid": "cb4fea60-982b-4c00-8a9e-ba69a61be655",
                            "parentUUID": "b233e2fb-e88a-4343-9fbc-30c3c57e7e3d",
                            "isHook": false,
                            "skipped": false
                        }
                    ],
                    "suites": [],
                    "passes": [
                        "cb4fea60-982b-4c00-8a9e-ba69a61be655"
                    ],
                    "failures": [],
                    "pending": [],
                    "skipped": [],
                    "duration": 0,
                    "root": false,
                    "rootEmpty": false,
                    "_timeout": 200000
                },
                {
                    "uuid": "db89da65-695e-4e0b-ae73-ee5eca7379fe",
                    "title": "NetIncome_Line214_5TP--Input F21400 to exceed 2/3 of the taxpayers earned income.  F67990 is not present for child care expenses.  Software must not allow.  //(TP Married,Linked rts, TP T5 = $60,000 (Box 13): T2202A, 12 Months parttimeSP T5 (Box 13) = $15,000, T2202A, 12 Months parttime Depandant 3 yrs old, Care of $10,000).",
                    "fullFile": "D:\\Rita\\taxtron\\code\\TaxTronWebTests\\my_work\\test_for_report_2020\\TCASES\\tcNetIncome_Line214_5SP.js",
                    "file": "\\my_work\\test_for_report_2020\\TCASES\\tcNetIncome_Line214_5SP.js",
                    "beforeHooks": [
                        {
                            "title": "\"before all\" hook",
                            "fullTitle": "NetIncome_Line214_5TP--Input F21400 to exceed 2/3 of the taxpayers earned income.  F67990 is not present for child care expenses.  Software must not allow.  //(TP Married,Linked rts, TP T5 = $60,000 (Box 13): T2202A, 12 Months parttimeSP T5 (Box 13) = $15,000, T2202A, 12 Months parttime Depandant 3 yrs old, Care of $10,000). \"before all\" hook",
                            "timedOut": false,
                            "duration": 132886,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "driver = new Builder()\n    .withCapabilities(Capabilities.chrome().setAcceptInsecureCerts(true))\n    .build();\ndriver.manage().window().setRect({ width: 1366, height: 768 });\nawait login(driver, 'ritakumar@outlook.com', 'rishu12rashi');\nawait selectNewReturn(driver,province);\nawait switchToastOff(driver);\n        \nawait setInputById(driver, 'Firstnames0', 'AMAM');\nawait setInputById(driver, 'Surname0', 'AMAMAM');\nawait selectDateById(driver, 'DOB0', '1965/01/01');\nawait setInputById(driver, 'SIN0', '123123127');\nawait selectComboById(driver, 'MaritalStatus0', 'Married');\nawait selectToggleById(driver, 'IsLinkedReturn0', '1');\nawait nextClick(driver);\nawait setAddressById(driver, 'fullAdd0', '6464 Yonge St, North York, ON  L6Y4E6, Canada');\nawait nextClick(driver);\nawait selectToggleById(driver, 'quesFP0', '0');\nawait selectToggleById(driver, 'quesPrinResi0', '0');\nawait nextClick(driver);\nawait setInputById(driver, 'Firstnames0sp', 'BABAB');\nawait setInputById(driver, 'Surname0sp', 'LLLALAL');\nawait selectDateById(driver, 'DOB0sp', '1968/01/01');\nawait setInputById(driver, 'SIN0sp', '430442848');\nawait selectComboById(driver, 'Province0sp', 'Ontario');\nawait nextClick(driver);\n//await setInputById(driver, 'StreetName0', '6464 Yonge St');\nawait selectToggleById(driver, 'quesFP0sp', '0');\nawait nextClick(driver);\nawait selectTab(driver, 'Dependant');\nawait selectToggleById(driver, 'HaveDependants0', '1');\nawait nextClick(driver);\nawait setInputById(driver, 'DepFName10', 'd');\nawait setInputById(driver, 'DepSurname10', 'd');\nawait selectDateById(driver, 'DepDOB10', '2017/07/13');\nawait selectComboById(driver, 'DepLien10', 'son');\nawait setInputById(driver, 'DepIncomeExcess0', '0');\nawait nextClick(driver);\nawait addAnother(driver);\nawait setInputById(driver, 'DepFName11', 's');\nawait setInputById(driver, 'DepSurname11', 's');\nawait selectDateById(driver, 'DepDOB11', '2009/01/01');\nawait selectComboById(driver, 'DepLien11', 'sister');\nawait setInputById(driver, 'DepIncomeExcess1', '0');\nawait nextClick(driver);\nawait nextClick(driver);\nawait selectToggleById(driver, 'didYouPayCC0tp', '1');\n\t            await nextClick(driver);\n\t\t        await setInputById(driver, 'CCWFederalUE0tp', '10000');\nawait selectComboById(driver, 'CC_30tp', 'd');\nawait waitTillMs(driver,700);\nawait addTabpagetitleCCclick(driver);\nawait selectComboById(driver, 'CC_31tp', 's');\nawait setInputById(driver, 'CCWFederalUE1tp', '5000');\nawait nextClick(driver);\nawait selectTab(driver, 'Income');\nawait selectTab(driver, 'IncomeProfile');\nawait selectToggleById(driver, 'InvestmentIncome0tp', '1');\nawait clickDivById(driver, 'T50tp');\nawait nextClick(driver);\nawait selectToggleById(driver, 'InvestmentIncome0sp', '1');\nawait clickDivById(driver, 'T50sp');\nawait nextClick(driver);\nawait setInputById(driver, 'Box130tp', '60000');\nawait selectComboById(driver, 'T5_2540tp', 'Bank Interest');\nawait nextClick(driver);\n              \nawait setInputById(driver, 'Box130sp', '15000');\nawait selectComboById(driver, 'T5_2540sp', 'Bank Interest');\nawait nextClick(driver);\nawait selectTab(driver, 'Deduction');\nawait selectTab(driver, 'Deduction_Main');\nawait selectToggleById(driver, 'qStudent0tp', '1');\nawait nextClick(driver);\nawait selectToggleById(driver, 'T2202AAttendedInst20tp', '1');\nawait nextClick(driver);\nawait setInputById(driver, 'T2202_B19_10tp', '2001');\nawait setInputById(driver, 'T2202_B20_10tp', '2012');\nawait setInputById(driver, 'T2202_B23_10tp', '5000');\nawait setInputById(driver, 'T2202_B21_10tp', '12');\nawait nextClick(driver);\nawait selectToggleById(driver, 'qStudent0sp', '1');\nawait nextClick(driver);\nawait selectToggleById(driver, 'T2202AAttendedInst20sp', '1');\nawait nextClick(driver);\nawait setInputById(driver, 'T2202_B23_10sp', '5000');\nawait setInputById(driver, 'T2202_B21_10sp', '12');\nawait nextClick(driver);\nawait selectTab(driver, 'MiscDeductions');\nawait selectToggleById(driver, 'qAlimony0tp', '1');\nawait nextClick(driver);\nawait selectToggleById(driver, 'CCPartCa0tp', '1');\nawait setInputById(driver, 'CMonths0tp', '12');\nawait selectToggleById(driver, 'QT778_2_260tp', '1');\nawait selectToggleById(driver, 'T778_2_280tp', '1');\nawait selectToggleById(driver, 'FullPart0tp', '0');\nawait setInputById(driver, 'SchoolMonths0tp', '12');\nawait selectToggleById(driver, 'T778_2_300tp', '1');\nawait nextClick(driver);\nawait nextClick(driver);\n               /* await selectToggleById(driver, 'qAlimony0sp', '0');\nawait nextClick(driver);\nawait selectToggleById(driver, 'QT778_2_260sp', '1');\nawait selectToggleById(driver, 'T778_2_280sp', '1');\nawait selectToggleById(driver, 'FullPart0sp', '0');\nawait setInputById(driver, 'SchoolMonths0sp', '12');*/\nawait nextClick(driver);\nsavedForm = await getServerFileSp(driver,'sp');",
                            "err": {},
                            "uuid": "b16a0d56-d9f6-4f61-b147-e2e264332485",
                            "parentUUID": "db89da65-695e-4e0b-ae73-ee5eca7379fe",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "afterHooks": [
                        {
                            "title": "\"after all\" hook",
                            "fullTitle": "NetIncome_Line214_5TP--Input F21400 to exceed 2/3 of the taxpayers earned income.  F67990 is not present for child care expenses.  Software must not allow.  //(TP Married,Linked rts, TP T5 = $60,000 (Box 13): T2202A, 12 Months parttimeSP T5 (Box 13) = $15,000, T2202A, 12 Months parttime Depandant 3 yrs old, Care of $10,000). \"after all\" hook",
                            "timedOut": false,
                            "duration": 1414,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "await logoutById(driver);\nawait driver.quit();",
                            "err": {},
                            "uuid": "9f73e577-f23b-4073-a2c9-325a440b5aef",
                            "parentUUID": "db89da65-695e-4e0b-ae73-ee5eca7379fe",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "tests": [
                        {
                            "title": " F21400 should be  allowed with amount    allow.value ==undefined",
                            "fullTitle": "NetIncome_Line214_5TP--Input F21400 to exceed 2/3 of the taxpayers earned income.  F67990 is not present for child care expenses.  Software must not allow.  //(TP Married,Linked rts, TP T5 = $60,000 (Box 13): T2202A, 12 Months parttimeSP T5 (Box 13) = $15,000, T2202A, 12 Months parttime Depandant 3 yrs old, Care of $10,000).  F21400 should be  allowed with amount    allow.value ==undefined",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let  childCareExpensesFeild = getFieldId('21400');\nlet  childCareExpenses = savedForm[ childCareExpensesFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+  childCareExpenses;\nassert.strictEqual(   childCareExpenses, undefined, ' Feild should be built');",
                            "err": {},
                            "uuid": "6f27a506-28fe-4b32-a658-93c2671c85ac",
                            "parentUUID": "db89da65-695e-4e0b-ae73-ee5eca7379fe",
                            "isHook": false,
                            "skipped": false
                        }
                    ],
                    "suites": [],
                    "passes": [
                        "6f27a506-28fe-4b32-a658-93c2671c85ac"
                    ],
                    "failures": [],
                    "pending": [],
                    "skipped": [],
                    "duration": 0,
                    "root": false,
                    "rootEmpty": false,
                    "_timeout": 200000
                },
                {
                    "uuid": "253bd051-51a6-41f8-b693-379dfe54ba90",
                    "title": "NetIncome_Line214_6--Input F21400 to exceed 2/3 of the taxpayers earned income.  F67990 is not present for child care expenses.  Software must not allow.  //(TP Married,Linked rts, TP T5 = $60,000 (Box 13): T2202A, 12 Months parttimeSP T5 (Box 13) = $15,000, T2202A, 12 Months parttimeDepandant: Disabled 20 years old, care $ 15,000).",
                    "fullFile": "D:\\Rita\\taxtron\\code\\TaxTronWebTests\\my_work\\test_for_report_2020\\TCASES\\tcNetIncome_Line214_6SP.js",
                    "file": "\\my_work\\test_for_report_2020\\TCASES\\tcNetIncome_Line214_6SP.js",
                    "beforeHooks": [
                        {
                            "title": "\"before all\" hook",
                            "fullTitle": "NetIncome_Line214_6--Input F21400 to exceed 2/3 of the taxpayers earned income.  F67990 is not present for child care expenses.  Software must not allow.  //(TP Married,Linked rts, TP T5 = $60,000 (Box 13): T2202A, 12 Months parttimeSP T5 (Box 13) = $15,000, T2202A, 12 Months parttimeDepandant: Disabled 20 years old, care $ 15,000). \"before all\" hook",
                            "timedOut": false,
                            "duration": 119849,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "driver = new Builder()\n    .withCapabilities(Capabilities.chrome().setAcceptInsecureCerts(true))\n    .build();\ndriver.manage().window().setRect({ width: 1366, height: 768 });\nawait login(driver, 'ritakumar@outlook.com', 'rishu12rashi');\nawait selectNewReturn(driver,province);\nawait switchToastOff(driver);\n        \nawait setInputById(driver, 'Firstnames0', 'AMAM');\nawait setInputById(driver, 'Surname0', 'AMAMAM');\nawait selectDateById(driver, 'DOB0', '1965/01/01');\nawait setInputById(driver, 'SIN0', '123123127');\nawait selectComboById(driver, 'MaritalStatus0', 'Married');\nawait selectToggleById(driver, 'IsLinkedReturn0', '1');\nawait nextClick(driver);\nawait setAddressById(driver, 'fullAdd0', '6464 Yonge St, North York, ON  L6Y4E6, Canada');\nawait nextClick(driver);\nawait selectToggleById(driver, 'quesFP0', '0');\nawait selectToggleById(driver, 'quesPrinResi0', '0');\nawait nextClick(driver);\nawait setInputById(driver, 'Firstnames0sp', 'BABAB');\nawait setInputById(driver, 'Surname0sp', 'LLLALAL');\nawait selectDateById(driver, 'DOB0sp', '1968/01/01');\nawait setInputById(driver, 'SIN0sp', '430442848');\nawait selectComboById(driver, 'Province0sp', 'Ontario');\nawait nextClick(driver);\n//await setInputById(driver, 'StreetName0', '6464 Yonge St');\nawait selectToggleById(driver, 'quesFP0sp', '0');\nawait nextClick(driver);\nawait selectTab(driver, 'Dependant');\nawait selectToggleById(driver, 'HaveDependants0', '1');\nawait nextClick(driver);\nawait setInputById(driver, 'DepFName10', 'd');\nawait setInputById(driver, 'DepSurname10', 'd');\nawait selectDateById(driver, 'DepDOB10', '1990/07/13');\nawait selectComboById(driver, 'DepLien10', 'son');\nawait setInputById(driver, 'DepIncomeExcess0', '0');\nawait selectToggleById(driver, 'disQuestion0tp', '1');\nawait selectToggleById(driver, 'Whodis0tp', '1');\nawait nextClick(driver);\nawait nextClick(driver);\nawait selectToggleById(driver, 'didYouPayCC0tp', '1');\n\t            await nextClick(driver);\n\t\t        await selectComboById(driver, 'CC_30tp', 'd');\nawait setInputById(driver, 'CCWFederalUE0tp', '10000');\nawait nextClick(driver);\nawait selectTab(driver, 'Income');\nawait selectToggleById(driver, 'InvestmentIncome0tp', '1');\nawait clickDivById(driver, 'T50tp');\nawait nextClick(driver);\nawait selectToggleById(driver, 'InvestmentIncome0sp', '1');\nawait clickDivById(driver, 'T50sp');\nawait nextClick(driver);\nawait setInputById(driver, 'Box130tp', '60000');\nawait selectComboById(driver, 'T5_2540tp', 'Bank Interest');\nawait nextClick(driver);\nawait setInputById(driver, 'Box130sp', '15000');\nawait selectComboById(driver, 'T5_2540sp', 'Bank Interest');\nawait nextClick(driver);\nawait selectTab(driver, 'Deduction');\nawait selectTab(driver, 'Deduction_Main');\nawait selectToggleById(driver, 'qStudent0tp', '1');\nawait nextClick(driver);\nawait selectToggleById(driver, 'T2202AAttendedInst20tp', '1');\nawait nextClick(driver);\nawait setInputById(driver, 'T2202_B19_10tp', '2001');\nawait setInputById(driver, 'T2202_B20_10tp', '2012');\nawait setInputById(driver, 'T2202_B23_10tp', '5000');\nawait setInputById(driver, 'T2202_B21_10tp', '12');\nawait nextClick(driver);\nawait selectToggleById(driver, 'qStudent0sp', '1');\nawait nextClick(driver);\nawait selectToggleById(driver, 'T2202AAttendedInst20sp', '1');\nawait nextClick(driver);\nawait setInputById(driver, 'T2202_B23_10sp', '5000');\nawait setInputById(driver, 'T2202_B21_10sp', '12');\nawait nextClick(driver);\nawait selectTab(driver, 'MiscDeductions');\nawait selectToggleById(driver, 'qAlimony0tp', '1');\nawait nextClick(driver);\nawait selectToggleById(driver, 'CCPartCa0tp', '1');\nawait setInputById(driver, 'CMonths0tp', '12');\nawait selectToggleById(driver, 'QT778_2_260tp', '1');\nawait selectToggleById(driver, 'T778_2_280tp', '1');\nawait selectToggleById(driver, 'FullPart0tp', '0');\nawait setInputById(driver, 'SchoolMonths0tp', '12');\nawait selectToggleById(driver, 'T778_2_300tp', '1');\nawait nextClick(driver);\nawait nextClick(driver);\nawait selectToggleById(driver, 'qAlimony0sp', '0');\nawait nextClick(driver);\n               /* await selectToggleById(driver, 'QT778_2_260sp', '1');\nawait selectToggleById(driver, 'T778_2_280sp', '1');\nawait selectToggleById(driver, 'FullPart0sp', '0');\nawait setInputById(driver, 'SchoolMonths0sp', '12');\nawait nextClick(driver);*/\nawait nextClick(driver);\nsavedForm = await getServerFileSp(driver,'sp');",
                            "err": {},
                            "uuid": "36c480c4-9bbb-4c42-9906-c0d37b6b42f1",
                            "parentUUID": "253bd051-51a6-41f8-b693-379dfe54ba90",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "afterHooks": [
                        {
                            "title": "\"after all\" hook",
                            "fullTitle": "NetIncome_Line214_6--Input F21400 to exceed 2/3 of the taxpayers earned income.  F67990 is not present for child care expenses.  Software must not allow.  //(TP Married,Linked rts, TP T5 = $60,000 (Box 13): T2202A, 12 Months parttimeSP T5 (Box 13) = $15,000, T2202A, 12 Months parttimeDepandant: Disabled 20 years old, care $ 15,000). \"after all\" hook",
                            "timedOut": false,
                            "duration": 1630,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "await logoutById(driver);\nawait driver.quit();",
                            "err": {},
                            "uuid": "be62ad00-d7bd-47f9-a214-878c50086fa5",
                            "parentUUID": "253bd051-51a6-41f8-b693-379dfe54ba90",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "tests": [
                        {
                            "title": " F21400 should be  allowed with amount    allow.value ==undefined",
                            "fullTitle": "NetIncome_Line214_6--Input F21400 to exceed 2/3 of the taxpayers earned income.  F67990 is not present for child care expenses.  Software must not allow.  //(TP Married,Linked rts, TP T5 = $60,000 (Box 13): T2202A, 12 Months parttimeSP T5 (Box 13) = $15,000, T2202A, 12 Months parttimeDepandant: Disabled 20 years old, care $ 15,000).  F21400 should be  allowed with amount    allow.value ==undefined",
                            "timedOut": false,
                            "duration": 0,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "let  childCareExpensesFeild = getFieldId('21400');\nlet  childCareExpenses = savedForm[ childCareExpensesFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+  childCareExpenses;\nassert.strictEqual(   childCareExpenses, undefined, ' Feild should be built');",
                            "err": {},
                            "uuid": "c932fa97-6e6e-43db-a521-e7287e5cb0be",
                            "parentUUID": "253bd051-51a6-41f8-b693-379dfe54ba90",
                            "isHook": false,
                            "skipped": false
                        }
                    ],
                    "suites": [],
                    "passes": [
                        "c932fa97-6e6e-43db-a521-e7287e5cb0be"
                    ],
                    "failures": [],
                    "pending": [],
                    "skipped": [],
                    "duration": 0,
                    "root": false,
                    "rootEmpty": false,
                    "_timeout": 150000
                },
                {
                    "uuid": "df830fb9-d093-4ec2-b440-c65447935521",
                    "title": "NetIncome_Line214_7SP. Build a return with an entry at F67980 on a T778 and the amount at F21400 exceeds 2/3 of net income (F23600+ F21400 + F23500) plus 2/3 of earned income   Software must not allow..  //(TP Married,Linked rts, TP T4 = $60,000 (Box 14)SP T4 (Box 14) = $15,000, T2202A, 12 Months parttime Depandant: Disabled 20 years old, care $ 15,000)  ",
                    "fullFile": "D:\\Rita\\taxtron\\code\\TaxTronWebTests\\my_work\\test_for_report_2020\\TCASES\\tcNetIncome_Line214_7SP.js",
                    "file": "\\my_work\\test_for_report_2020\\TCASES\\tcNetIncome_Line214_7SP.js",
                    "beforeHooks": [
                        {
                            "title": "\"before all\" hook",
                            "fullTitle": "NetIncome_Line214_7SP. Build a return with an entry at F67980 on a T778 and the amount at F21400 exceeds 2/3 of net income (F23600+ F21400 + F23500) plus 2/3 of earned income   Software must not allow..  //(TP Married,Linked rts, TP T4 = $60,000 (Box 14)SP T4 (Box 14) = $15,000, T2202A, 12 Months parttime Depandant: Disabled 20 years old, care $ 15,000)   \"before all\" hook",
                            "timedOut": false,
                            "duration": 136788,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "driver = new Builder()\n\t.withCapabilities(Capabilities.chrome().setAcceptInsecureCerts(true))\n\t.build();\n    driver.manage().window().setRect({ width: 1366, height: 768 });\n        await login(driver, 'ritakumar@outlook.com', 'rishu12rashi');\n                await selectNewReturn(driver,province);\n                await switchToastOff(driver);\n       \n        await setInputById(driver, 'Firstnames0', 'KING');\n        await setInputById(driver, 'Surname0', 'SMITH');\n        await selectDateById(driver, 'DOB0', '1965/10/10');\n        await setInputById(driver, 'SIN0', '222222226');\n        await selectComboById(driver, 'MaritalStatus0', 'Common-law');\n        await selectToggleById(driver, 'domchanged0', '0');\n                await selectToggleById(driver, 'IsLinkedReturn0', '1');\n                await selectToggleById(driver, 'HomeAddressSame0', '1');\n\t            await nextClick(driver);\n        await setInputById(driver, 'fullAdd0', '880 21 St NE, Salmon Arm, NL M2M 3X4, Canada');\n                await selectToggleById(driver, 'addChange0', '0');\n        await selectToggleById(driver, 'bDisabled0', '0');\n        await selectToggleById(driver, 'quesFP0', '0');\n\n        await selectToggleById(driver, 'qCitizen0', '0');\n                await nextClick(driver);\n                await nextClick(driver);\n                await setInputById(driver, 'Firstnames0sp', 'BABAB');\n                await setInputById(driver, 'Surname0sp', 'LLLALAL');\n                await selectDateById(driver, 'DOB0sp', '1968/01/01');\n                await setInputById(driver, 'SIN0sp', '430442848');\n                await selectComboById(driver, 'Province0sp', 'Ontario');\n                await nextClick(driver);\n                //await setInputById(driver, 'StreetName0', '6464 Yonge St');\n                await selectToggleById(driver, 'quesFP0sp', '0');\n                await nextClick(driver);\n                await selectTab(driver, 'Dependant');\n                await selectToggleById(driver, 'HaveDependants0', '1');\n                await nextClick(driver);\n                await setInputById(driver, 'DepFName10', 'd');\n                await setInputById(driver, 'DepSurname10', 'd');\n                await selectDateById(driver, 'DepDOB10', '1990/07/13');\n                await selectComboById(driver, 'DepLien10', 'son');\n                await setInputById(driver, 'DepIncomeExcess0', '0');\n                await selectToggleById(driver, 'disQuestion0tp', '1');\n                await selectToggleById(driver, 'Whodis0tp', '1');\n                await nextClick(driver);\n                await nextClick(driver);\n                await selectToggleById(driver, 'didYouPayCC0tp', '1');\n\t            await nextClick(driver);\n        await selectComboById(driver, 'CC_30tp', 'd');\n                await setInputById(driver, 'CCWFederalUE0tp', '15000');\n                await nextClick(driver);\n                await selectTab(driver, 'Income');\n                await selectToggleById(driver, 'WorkedInYOR0', '1');\n                await clickDivById(driver, 'T40tp');\n                await nextClick(driver);\n                await selectToggleById(driver, 'WorkedInYOR0sp', '1');\n                await clickDivById(driver, 'T40sp');\n                await nextClick(driver);\n                await setInputById(driver, 'T4Work0tp', 'ASD');\n                await setInputById(driver, 'T4B140tp', '60000');\n                await nextClick(driver);\n                await nextClick(driver);\n                await setInputById(driver, 'T4B140sp', '15000');\n                await nextClick(driver);\n                await selectTab(driver, 'Deduction');\n                await selectTab(driver, 'Deduction_Main');\n                await selectToggleById(driver, 'qStudent0tp', '1');\n                await nextClick(driver);\n                await selectToggleById(driver, 'T2202AAttendedInst20tp', '1');\n                await nextClick(driver);\n                await setInputById(driver, 'T2202_B19_10tp', '2001');\n                await setInputById(driver, 'T2202_B20_10tp', '2012');\n                await setInputById(driver, 'T2202_B23_10tp', '5000');\n                await setInputById(driver, 'T2202_B21_10tp', '12');\n                await nextClick(driver);\n                await selectToggleById(driver, 'qStudent0sp', '1');\n                await nextClick(driver);\n                await selectToggleById(driver, 'T2202AAttendedInst20sp', '1');\n                await nextClick(driver);\n                await setInputById(driver, 'T2202_B23_10sp', '5000');\n                await setInputById(driver, 'T2202_B21_10sp', '12');\n                await nextClick(driver);\n                await selectTab(driver, 'MiscDeductions');\n                await selectToggleById(driver, 'qAlimony0tp', '1');\n                await nextClick(driver);\n                await selectToggleById(driver, 'CCPartCa0tp', '1');\n                await setInputById(driver, 'CMonths0tp', '12');\n                await selectToggleById(driver, 'QT778_2_260tp', '1');\n                await selectToggleById(driver, 'T778_2_280tp', '1');\n                await selectToggleById(driver, 'FullPart0tp', '0');\n                await setInputById(driver, 'SchoolMonths0tp', '12');\n                await selectToggleById(driver, 'T778_2_300tp', '1');\n                await nextClick(driver);\n                await nextClick(driver);\n                await selectToggleById(driver, 'qAlimony0sp', '0');\n                await nextClick(driver);\n               /* await selectToggleById(driver, 'CCPartCa0sp', '1');\n                await setInputById(driver, 'CMonths0sp', '12');\n                await selectToggleById(driver, 'QT778_2_260sp', '1');\n                await selectToggleById(driver, 'T778_2_280sp', '0');\n                await selectToggleById(driver, 'T778_2_300sp', '0');\n                await setInputById(driver, 'SchoolMonths0sp', '12');\n                await nextClick(driver);*/\n                await nextClick(driver);\n                savedForm = await getServerFileSp(driver,'sp');",
                            "err": {},
                            "uuid": "d66bc65b-2025-4ed8-97c7-ba232e241de5",
                            "parentUUID": "df830fb9-d093-4ec2-b440-c65447935521",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "afterHooks": [
                        {
                            "title": "\"after all\" hook",
                            "fullTitle": "NetIncome_Line214_7SP. Build a return with an entry at F67980 on a T778 and the amount at F21400 exceeds 2/3 of net income (F23600+ F21400 + F23500) plus 2/3 of earned income   Software must not allow..  //(TP Married,Linked rts, TP T4 = $60,000 (Box 14)SP T4 (Box 14) = $15,000, T2202A, 12 Months parttime Depandant: Disabled 20 years old, care $ 15,000)   \"after all\" hook",
                            "timedOut": false,
                            "duration": 1610,
                            "state": null,
                            "speed": null,
                            "pass": false,
                            "fail": false,
                            "pending": false,
                            "context": null,
                            "code": "await logoutById(driver);\n        await driver.quit();",
                            "err": {},
                            "uuid": "fe76f2a0-9e2a-4395-a511-0e1f3bd29430",
                            "parentUUID": "df830fb9-d093-4ec2-b440-c65447935521",
                            "isHook": true,
                            "skipped": false
                        }
                    ],
                    "tests": [
                        {
                            "title": " F21400 should be  allowed with amount    allow.value ==3400",
                            "fullTitle": "NetIncome_Line214_7SP. Build a return with an entry at F67980 on a T778 and the amount at F21400 exceeds 2/3 of net income (F23600+ F21400 + F23500) plus 2/3 of earned income   Software must not allow..  //(TP Married,Linked rts, TP T4 = $60,000 (Box 14)SP T4 (Box 14) = $15,000, T2202A, 12 Months parttime Depandant: Disabled 20 years old, care $ 15,000)    F21400 should be  allowed with amount    allow.value ==3400",
                            "timedOut": false,
                            "duration": 0,
                            "state": "failed",
                            "speed": null,
                            "pass": false,
                            "fail": true,
                            "pending": false,
                            "context": null,
                            "code": "let  childCareExpensesFeild = getFieldId('21400');\nlet  childCareExpenses = savedForm[ childCareExpensesFeild];\nthis._runnable.title = this._runnable.title + '  allow.value =='+  childCareExpenses;\nassert.strictEqual(   childCareExpenses, '6700', ' Feild should be built');",
                            "err": {
                                "message": "AssertionError [ERR_ASSERTION]:  Feild should be built",
                                "estack": "AssertionError [ERR_ASSERTION]:  Feild should be built\n    at Context.<anonymous> (my_work\\test_for_report_2020\\TCASES\\tcNetIncome_Line214_7SP.js:125:24)",
                                "diff": "- 3400\n+ 6700\n"
                            },
                            "uuid": "cb9ae90b-f312-48ab-836e-5d74e394e929",
                            "parentUUID": "df830fb9-d093-4ec2-b440-c65447935521",
                            "isHook": false,
                            "skipped": false
                        }
                    ],
                    "suites": [],
                    "passes": [],
                    "failures": [
                        "cb9ae90b-f312-48ab-836e-5d74e394e929"
                    ],
                    "pending": [],
                    "skipped": [],
                    "duration": 0,
                    "root": false,
                    "rootEmpty": false,
                    "_timeout": 150000
                }
            ],
            "passes": [],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 0,
            "root": true,
            "rootEmpty": true,
            "_timeout": 2000
        }
    ],
    "meta": {
        "mocha": {
            "version": "6.2.2"
        },
        "mochawesome": {
            "options": {
                "quiet": false,
                "reportFilename": "mochawesome",
                "saveHtml": true,
                "saveJson": true,
                "consoleReporter": "spec",
                "useInlineDiffs": false
            },
            "version": "4.1.0"
        },
        "marge": {
            "options": {
                "autoOpen": "true"
            },
            "version": "4.0.1"
        }
    }
}